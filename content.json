{"meta":{"title":"cungudafa","subtitle":"Sakura","description":"基于Gitee+Hexo（sakura）个人博客搭建","author":"cungudafa","url":"https://cungudafa.gitee.io","root":"/"},"pages":[{"title":"bangumi","date":"2020-02-10T13:32:48.000Z","updated":"2020-02-13T12:49:42.795Z","comments":false,"path":"bangumi/index.html","permalink":"https://cungudafa.gitee.io/bangumi/index.html","excerpt":"","text":""},{"title":"about","date":"2020-02-12T14:14:36.000Z","updated":"2020-02-16T15:19:44.547Z","comments":false,"path":"about/index.html","permalink":"https://cungudafa.gitee.io/about/index.html","excerpt":"","text":"[姑の小屋] 与&nbsp; cungudafa&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"links","date":"2020-02-13T15:11:06.000Z","updated":"2020-02-21T04:32:56.165Z","comments":true,"path":"links/index.html","permalink":"https://cungudafa.gitee.io/links/index.html","excerpt":"","text":""},{"title":"client","date":"2020-02-13T15:13:35.000Z","updated":"2020-02-13T03:43:14.977Z","comments":false,"path":"client/index.html","permalink":"https://cungudafa.gitee.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载： 研发~"},{"title":"lab","date":"2020-02-13T13:47:59.000Z","updated":"2020-02-13T03:46:35.573Z","comments":false,"path":"lab/index.html","permalink":"https://cungudafa.gitee.io/lab/index.html","excerpt":"","text":"sakura主题balabala"},{"title":"music","date":"2020-02-13T15:14:28.000Z","updated":"2020-02-13T11:31:56.655Z","comments":false,"path":"music/index.html","permalink":"https://cungudafa.gitee.io/music/index.html","excerpt":"","text":""},{"title":"donate","date":"2020-02-13T15:13:05.000Z","updated":"2020-02-13T13:16:12.335Z","comments":false,"path":"donate/index.html","permalink":"https://cungudafa.gitee.io/donate/index.html","excerpt":"","text":""},{"title":"comment","date":"2020-02-13T15:13:48.000Z","updated":"2020-02-13T03:43:41.680Z","comments":true,"path":"comment/index.html","permalink":"https://cungudafa.gitee.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"photos","date":"2020-02-22T03:26:02.543Z","updated":"2020-02-22T03:26:02.543Z","comments":false,"path":"photos/index.html","permalink":"https://cungudafa.gitee.io/photos/index.html","excerpt":"","text":"Photos 待续 图片正在加载中… (function() { var loadScript = function(path) { var $script = document.createElement('script') document.getElementsByTagName('body')[0].appendChild($script) $script.setAttribute('src', path) } setTimeout(function() { loadScript('./ins.js') }, 0) })()"},{"title":"","date":"2020-02-19T10:23:20.888Z","updated":"2020-02-19T10:23:20.888Z","comments":true,"path":"photos/data.json","permalink":"https://cungudafa.gitee.io/photos/data.json","excerpt":"","text":"{\"list\":[{\"date\":\"2020-2-\",\"arr\":{\"year\":2020,\"month\":2,\"link\":[\"2020-2-13_HyoJoo.jpg\",\"2020-2-19_milk.jpg\"],\"text\":[\"HyoJoo\",\"milk\"],\"type\":[\"image\",\"image\"]}},{\"date\":\"2020-02\",\"arr\":{\"year\":2020,\"month\":2,\"link\":[\"2020-02-18_wang.jpg\",\"2020-02-18_wangmeili.jpg\",\"2020-02-18_xiaowang.jpg\"],\"text\":[\"wang\",\"wangmeili\",\"xiaowang\"],\"type\":[\"image\",\"image\",\"image\"]}},{\"date\":\"2019-12\",\"arr\":{\"year\":2019,\"month\":12,\"link\":[\"2019-12-10_tree.jpg\"],\"text\":[\"tree\"],\"type\":[\"image\"]}},{\"date\":\"2016-11\",\"arr\":{\"year\":2016,\"month\":11,\"link\":[\"2016-11-11_cqjtu.jpg\"],\"text\":[\"cqjtu\"],\"type\":[\"image\"]}}]}"},{"title":"","date":"2020-02-18T16:15:29.339Z","updated":"2019-11-26T09:54:19.000Z","comments":true,"path":"photos/ins.css","permalink":"https://cungudafa.gitee.io/photos/ins.css","excerpt":"","text":"#post-instagram{ padding: 30px; } figure { margin: 0; } #post-instagram .article-entry{ padding-right: 0; } .instagram{ position: relative; min-height: 500px; } .instagram img { width: 100%; } .posts-expand .post-body img { padding: 0; border : 0; } .instagram .year { font-size: 16px; } .instagram .open-ins{ padding: 10px 0; color: #cdcdcd; } .instagram .open-ins:hover{ color: #657b83; } .instagram .year{ display: inline; } .instagram .thumb { width: 25%; height: 0; padding-bottom: 25%; position: relative; display: inline-block; text-align: center; background: #ededed; outline: 1px solid #ddd; } .instagram .thumb a { position: relative; } .instagram .album h1 em{ font-style: normal; font-size: 14px; margin-left: 10px; } .instagram .album ul{ display: flex; flex-wrap: wrap; clear: both; width: 100%; text-align: left; } .instagram .album li{ list-style: none; display: inline-block; box-sizing: border-box; padding: 0 5px; margin-bottom: -10px; height: 0; width: 25%; position: relative; padding-bottom: 25%; } .instagram .album li:before{ display: none; } .instagram .album div.img-box{ position: absolute; width: 90%; height: 90%; -webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1); -moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1); box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1); } .instagram .album div.img-box img{ width: 100%; height: 100%; position: absolute; z-index: 2; } .instagram .album div.img-box .img-bg{ position: absolute; top: 0; left: 0; bottom: 0px; width: 100%; margin: -5px; padding: 5px; -webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1); -moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1); box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1); -webkit-transition: all 0.15s ease-out 0.1s; -moz-transition: all 0.15s ease-out 0.1s; -o-transition: all 0.15s ease-out 0.1s; transition: all 0.15s ease-out 0.1s; opacity: 0.2; cursor: pointer; display: block; z-index: 3; } .instagram .album div.img-box .icon { font-size: 14px; position: absolute; left: 50%; top: 50%; margin-left: -7px; margin-top: -7px; color: #999; z-index: 1; } .instagram .album div.img-box .img-bg:hover{ opacity: 0; } .photos-btn-wrap { border-bottom: 1px solid #e5e5e5; margin-bottom: 20px; } .photos-btn { font-size: 16px; color: #333; margin-bottom: -4px; padding: 5px 8px 3px; } .photos-btn.active { color: #08c; border: 1px solid #e5e5e5; border-bottom: 5px solid #fff; } @media screen and (max-width:600px) { .instagram .thumb { width: 50%; padding-bottom: 50%; } .instagram .album li { width: 100%; position: relative; padding-bottom: 100%; text-align: center; } .instagram .album div.img-box{ margin: 0; width: 90%; height: 90%; } }"},{"title":"","date":"2020-02-19T10:18:29.727Z","updated":"2019-11-26T09:54:19.000Z","comments":true,"path":"photos/photoswipe-ui-default.min.js","permalink":"https://cungudafa.gitee.io/photos/photoswipe-ui-default.min.js","excerpt":"","text":"/*! PhotoSwipe Default UI - 4.1.2 - 2017-04-05 * http://photoswipe.com * Copyright (c) 2017 Dmitry Semenov; */ !function(a,b){\"function\"==typeof define&&define.amd?define(b):\"object\"==typeof exports?module.exports=b():a.PhotoSwipeUI_Default=b()}(this,function(){\"use strict\";var a=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=this,w=!1,x=!0,y=!0,z={barsSize:{top:44,bottom:\"auto\"},closeElClasses:[\"item\",\"caption\",\"zoom-wrap\",\"ui\",\"top-bar\"],timeToIdle:4e3,timeToIdleOutside:1e3,loadingIndicatorDelay:1e3,addCaptionHTMLFn:function(a,b){return a.title?(b.children[0].innerHTML=a.title,!0):(b.children[0].innerHTML=\"\",!1)},closeEl:!0,captionEl:!0,fullscreenEl:!0,zoomEl:!0,shareEl:!0,counterEl:!0,arrowEl:!0,preloaderEl:!0,tapToClose:!1,tapToToggleControls:!0,clickToCloseNonZoomable:!0,shareButtons:[{id:\"facebook\",label:\"Share on Facebook\",url:\"https://www.facebook.com/sharer/sharer.php?u=\"},{id:\"twitter\",label:\"Tweet\",url:\"https://twitter.com/intent/tweet?text=&url=\"},{id:\"pinterest\",label:\"Pin it\",url:\"http://www.pinterest.com/pin/create/button/?url=&media=&description=\"},{id:\"download\",label:\"Download image\",url:\"\",download:!0}],getImageURLForShare:function(){return a.currItem.src||\"\"},getPageURLForShare:function(){return window.location.href},getTextForShare:function(){return a.currItem.title||\"\"},indexIndicatorSep:\" / \",fitControlsWidth:1200},A=function(a){if(r)return!0;a=a||window.event,q.timeToIdle&&q.mouseUsed&&!k&&K();for(var c,d,e=a.target||a.srcElement,f=e.getAttribute(\"class\")||\"\",g=0;g-1&&(c.onTap(),d=!0);if(d){a.stopPropagation&&a.stopPropagation(),r=!0;var h=b.features.isOldAndroid?600:30;s=setTimeout(function(){r=!1},h)}},B=function(){return!a.likelyTouchDevice||q.mouseUsed||screen.width>q.fitControlsWidth},C=function(a,c,d){b[(d?\"add\":\"remove\")+\"Class\"](a,\"pswp__\"+c)},D=function(){var a=1===q.getNumItemsFn();a!==p&&(C(d,\"ui--one-slide\",a),p=a)},E=function(){C(i,\"share-modal--hidden\",y)},F=function(){return y=!y,y?(b.removeClass(i,\"pswp__share-modal--fade-in\"),setTimeout(function(){y&&E()},300)):(E(),setTimeout(function(){y||b.addClass(i,\"pswp__share-modal--fade-in\")},30)),y||H(),!1},G=function(b){b=b||window.event;var c=b.target||b.srcElement;return a.shout(\"shareLinkClick\",b,c),!!c.href&&(!!c.hasAttribute(\"download\")||(window.open(c.href,\"pswp_share\",\"scrollbars=yes,resizable=yes,toolbar=no,location=yes,width=550,height=420,top=100,left=\"+(window.screen?Math.round(screen.width/2-275):100)),y||F(),!1))},H=function(){for(var a,b,c,d,e,f=\"\",g=0;g"},{"title":"","date":"2020-02-18T16:15:29.342Z","updated":"2019-11-26T09:54:19.000Z","comments":true,"path":"photos/photoswipe.css","permalink":"https://cungudafa.gitee.io/photos/photoswipe.css","excerpt":"","text":"/*! PhotoSwipe main CSS by Dmitry Semenov | photoswipe.com | MIT license */ /* Styles for basic PhotoSwipe functionality (sliding area, open/close transitions) */ /* pswp = photoswipe */ .pswp { display: none; position: absolute; width: 100%; height: 100%; left: 0; top: 0; overflow: hidden; -ms-touch-action: none; touch-action: none; z-index: 1500; -webkit-text-size-adjust: 100%; /* create separate layer, to avoid paint on window.onscroll in webkit/blink */ -webkit-backface-visibility: hidden; outline: none; } .pswp * { -webkit-box-sizing: border-box; box-sizing: border-box; } .pswp img { max-width: none; } /* style is added when JS option showHideOpacity is set to true */ .pswp--animate_opacity { /* 0.001, because opacity:0 doesn't trigger Paint action, which causes lag at start of transition */ opacity: 0.001; will-change: opacity; /* for open/close transition */ -webkit-transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); } .pswp--open { display: block; } .pswp--zoom-allowed .pswp__img { /* autoprefixer: off */ cursor: -webkit-zoom-in; cursor: -moz-zoom-in; cursor: zoom-in; } .pswp--zoomed-in .pswp__img { /* autoprefixer: off */ cursor: -webkit-grab; cursor: -moz-grab; cursor: grab; } .pswp--dragging .pswp__img { /* autoprefixer: off */ cursor: -webkit-grabbing; cursor: -moz-grabbing; cursor: grabbing; } /* Background is added as a separate element. As animating opacity is much faster than animating rgba() background-color. */ .pswp__bg { position: absolute; left: 0; top: 0; width: 100%; height: 100%; background: #000; opacity: 0; -webkit-transform: translateZ(0); transform: translateZ(0); -webkit-backface-visibility: hidden; will-change: opacity; } .pswp__scroll-wrap { position: absolute; left: 0; top: 0; width: 100%; height: 100%; overflow: hidden; } .pswp__container, .pswp__zoom-wrap { -ms-touch-action: none; touch-action: none; position: absolute; left: 0; right: 0; top: 0; bottom: 0; } /* Prevent selection and tap highlights */ .pswp__container, .pswp__img { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-tap-highlight-color: transparent; -webkit-touch-callout: none; } .pswp__zoom-wrap { position: absolute; width: 100%; -webkit-transform-origin: left top; -ms-transform-origin: left top; transform-origin: left top; /* for open/close transition */ -webkit-transition: -webkit-transform 333ms cubic-bezier(0.4, 0, 0.22, 1); transition: transform 333ms cubic-bezier(0.4, 0, 0.22, 1); } .pswp__bg { will-change: opacity; /* for open/close transition */ -webkit-transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); } .pswp--animated-in .pswp__bg, .pswp--animated-in .pswp__zoom-wrap { -webkit-transition: none; transition: none; } .pswp__container, .pswp__zoom-wrap { -webkit-backface-visibility: hidden; } .pswp__item { position: absolute; left: 0; right: 0; top: 0; bottom: 0; overflow: hidden; } .pswp__img { position: absolute; width: auto; height: auto; top: 0; left: 0; } /* stretched thumbnail or div placeholder element (see below) style is added to avoid flickering in webkit/blink when layers overlap */ .pswp__img--placeholder { -webkit-backface-visibility: hidden; } /* div element that matches size of large image large image loads on top of it */ .pswp__img--placeholder--blank { background: #222; } .pswp--ie .pswp__img { width: 100% !important; height: auto !important; left: 0; top: 0; } /* Error message appears when image is not loaded (JS option errorMsg controls markup) */ .pswp__error-msg { position: absolute; left: 0; top: 50%; width: 100%; text-align: center; font-size: 14px; line-height: 16px; margin-top: -8px; color: #CCC; } .pswp__error-msg a { color: #CCC; text-decoration: underline; }"},{"title":"","date":"2020-02-18T12:22:54.184Z","updated":"2020-02-18T12:22:54.184Z","comments":true,"path":"photos/ins.js","permalink":"https://cungudafa.gitee.io/photos/ins.js","excerpt":"","text":"/******/ (function(modules) { // webpackBootstrap /******/ // The module cache /******/ var installedModules = {}; /******/ /******/ // The require function /******/ function __webpack_require__(moduleId) { /******/ /******/ // Check if module is in cache /******/ if (installedModules[moduleId]) /******/ return installedModules[moduleId].exports; /******/ /******/ // Create a new module (and put it into the cache) /******/ var module = installedModules[moduleId] = { /******/ exports: {}, /******/ id: moduleId, /******/ loaded: false /******/ }; /******/ /******/ // Execute the module function /******/ modules[moduleId].call(module.exports, module, module.exports, __webpack_require__); /******/ /******/ // Flag the module as loaded /******/ module.loaded = true; /******/ /******/ // Return the exports of the module /******/ return module.exports; /******/ } /******/ /******/ /******/ // expose the modules object (__webpack_modules__) /******/ __webpack_require__.m = modules; /******/ /******/ // expose the module cache /******/ __webpack_require__.c = installedModules; /******/ /******/ // __webpack_public_path__ /******/ __webpack_require__.p = \"/dist/\"; /******/ /******/ // Load entry module and return exports /******/ return __webpack_require__(0); /******/ }) /************************************************************************/ /******/ ([ /* 0 */ /***/ function(module, exports, __webpack_require__) { 'use strict'; __webpack_require__(1); var _view = __webpack_require__(2); var _view2 = _interopRequireDefault(_view); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } /** * @name impush-client * @description 这个项目让我发家致富… * @date 2016-12-1 */ var _collection = []; var _count = 0; var searchData; function addMask(elem) { var rect = elem.getBoundingClientRect(); var style = getComputedStyle(elem, null); var mask = document.createElement('i'); mask.className = 'icon-film'; mask.style.color = '#fff'; mask.style.fontSize = '26px'; mask.style.position = 'absolute'; mask.style.right = '10px'; mask.style.bottom = '10px'; mask.style.zIndex = 1; elem.parentNode.appendChild(mask); } var createVideoIncon = function createVideoIncon() { var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]'); for (var i = 0, len = $videoImg.length; i < len; i++) { addMask($videoImg[i]); } }; var render = function render(res) { var ulTmpl = \"\"; for (var j = 0, len2 = res.list.length; j < len2; j++) { var data = res.list[j].arr; var liTmpl = \"\"; for (var i = 0, len = data.link.length; i < len; i++) { // 需要修改https://raw.githubusercontent.com/你的github名/你的github仓库名/master/min_photos/即可 var minSrc = 'https://raw.githubusercontent.com/cungudafa/img/master/min_photos/' + data.link[i]; var src = 'https://raw.githubusercontent.com/cungudafa/img/master/photos/' + data.link[i]; var type = data.type[i]; var target = src + (type === 'video' ? '.mp4' : '.jpg'); src += ''; liTmpl += '\\ \\ \\ \\ ' + data.text[i] + '\\ '; } ulTmpl = ulTmpl + '' + data.year + '年' + data.month + '月\\ ' + liTmpl + '\\ '; } document.querySelector('.instagram').innerHTML = '' + ulTmpl + ''; createVideoIncon(); _view2.default.init(); }; var replacer = function replacer(str) { var arr = str.split(\"/\"); return \"/photos/assets/ins/\" + arr[arr.length - 1]; }; var ctrler = function ctrler(data) { var imgObj = {}; for (var i = 0, len = data.length; i < len; i++) { var y = data[i].y; var m = data[i].m; var src = replacer(data[i].src); var text = data[i].text; var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m); if (imgObj[key]) { imgObj[key].srclist.push(src); imgObj[key].text.push(text); } else { imgObj[key] = { year: y, month: m, srclist: [src], text: [text] }; } } render(imgObj); }; function loadData(success) { if (!searchData) { var xhr = new XMLHttpRequest(); xhr.open('GET', './data.json?t=' + +new Date(), true); xhr.onload = function() { if (this.status >= 200 && this.status < 300) { var res = JSON.parse(this.response); searchData = res; success(searchData); } else { console.error(this.statusText); } }; xhr.onerror = function() { console.error(this.statusText); }; xhr.send(); } else { success(searchData); } } var Ins = { init: function init() { loadData(function(data) { render(data); }); } }; Ins.init(); // export default impush; /***/ }, /* 1 */ /***/ function(module, exports, __webpack_require__) { /* WEBPACK VAR INJECTION */ (function(global) { 'use strict'; var inViewport = __webpack_require__(3); var lazyAttrs = ['data-src']; global.lzld = lazyload(); // Provide libs using getAttribute early to get the good src // and not the fake data-src replaceGetAttribute('Image'); replaceGetAttribute('IFrame'); function registerLazyAttr(attr) { if (indexOf.call(lazyAttrs, attr) === -1) { lazyAttrs.push(attr); } } function lazyload(opts) { opts = merge({ 'offset': 333, 'src': 'data-src', 'container': false }, opts || {}); if (typeof opts.src === 'string') { registerLazyAttr(opts.src); } var elts = []; function show(elt) { var src = findRealSrc(elt); if (src) { elt.src = src; } elt.setAttribute('data-lzled', true); elts[indexOf.call(elts, elt)] = null; } function findRealSrc(elt) { if (typeof opts.src === 'function') { return opts.src(elt); } return elt.getAttribute(opts.src); } function register(elt) { elt.onload = null; elt.removeAttribute('onload'); elt.onerror = null; elt.removeAttribute('onerror'); if (indexOf.call(elts, elt) === -1) { inViewport(elt, opts, show); } } return register; } function replaceGetAttribute(elementName) { var fullname = 'HTML' + elementName + 'Element'; if (fullname in global === false) { return; } var original = global[fullname].prototype.getAttribute; global[fullname].prototype.getAttribute = function(name) { if (name === 'src') { var realSrc; for (var i = 0, max = lazyAttrs.length; i < max; i++) { realSrc = original.call(this, lazyAttrs[i]); if (realSrc) { break; } } return realSrc || original.call(this, name); } // our own lazyloader will go through theses lines // because we use getAttribute(opts.src) return original.call(this, name); }; } function merge(defaults, opts) { for (var name in defaults) { if (opts[name] === undefined) { opts[name] = defaults[name]; } } return opts; } // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html function indexOf(value) { for (var i = this.length; i-- && this[i] !== value;) {} return i; } module.exports = lazyload; // export default impush; /* WEBPACK VAR INJECTION */ }.call(exports, (function() { return this; }()))) /***/ }, /* 2 */ /***/ function(module, exports) { 'use strict'; var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) { // parse slide data (url, title, size ...) from DOM elements // (children of gallerySelector) var parseThumbnailElements = function parseThumbnailElements(el) { el = el.parentNode.parentNode; var thumbElements = el.getElementsByClassName('thumb'), numNodes = thumbElements.length, items = [], figureEl, linkEl, size, type, // video or not target, item; for (var i = 0; i < numNodes; i++) { figureEl = thumbElements[i]; // // include only element nodes if (figureEl.nodeType !== 1) { continue; } linkEl = figureEl.children[0]; // size = linkEl.getAttribute('data-size').split('x'); type = linkEl.getAttribute('data-type'); target = linkEl.getAttribute('data-target'); // create slide object item = { src: linkEl.getAttribute('href'), w: parseInt(size[0], 10), h: parseInt(size[1], 10) }; if (figureEl.children.length > 1) { item.title = figureEl.children[1].innerHTML; } if (linkEl.children.length > 0) { item.msrc = linkEl.children[0].getAttribute('src'); item.type = type; item.target = target; item.html = ''; if (type === 'video') { //item.src = null; } } item.el = figureEl; // save link to element for getThumbBoundsFn items.push(item); } return items; }; // find nearest parent element var closest = function closest(el, fn) { return el && (fn(el) ? el : closest(el.parentNode, fn)); }; // triggers when user clicks on thumbnail var onThumbnailsClick = function onThumbnailsClick(e) { e = e || window.event; e.preventDefault ? e.preventDefault() : e.returnValue = false; var eTarget = e.target || e.srcElement; // find root element of slide var clickedListItem = closest(eTarget, function(el) { return el.tagName && el.tagName.toUpperCase() === 'FIGURE'; }); if (!clickedListItem) { return; } // find index of clicked item by looping through all child nodes // alternatively, you may define index via data- attribute var clickedGallery = clickedListItem.parentNode, // childNodes = clickedListItem.parentNode.childNodes, // numChildNodes = childNodes.length, childNodes = document.getElementsByClassName('thumb'), numChildNodes = childNodes.length, nodeIndex = 0, index; for (var i = 0; i < numChildNodes; i++) { if (childNodes[i].nodeType !== 1) { continue; } if (childNodes[i] === clickedListItem) { index = nodeIndex; break; } nodeIndex++; } if (index >= 0) { // open PhotoSwipe if valid index found openPhotoSwipe(index, clickedGallery); } return false; }; // parse picture index and gallery index from URL (#&pid=1&gid=2) var photoswipeParseHash = function photoswipeParseHash() { var hash = window.location.hash.substring(1), params = {}; if (hash.length < 5) { return params; } var vars = hash.split('&'); for (var i = 0; i < vars.length; i++) { if (!vars[i]) { continue; } var pair = vars[i].split('='); if (pair.length < 2) { continue; } params[pair[0]] = pair[1]; } if (params.gid) { params.gid = parseInt(params.gid, 10); } return params; }; var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) { var pswpElement = document.querySelectorAll('.pswp')[0], gallery, options, items; items = parseThumbnailElements(galleryElement); // define options (if needed) options = { // define gallery index (for URL) galleryUID: galleryElement.getAttribute('data-pswp-uid'), getThumbBoundsFn: function getThumbBoundsFn(index) { // See Options -> getThumbBoundsFn section of documentation for more info var thumbnail = items[index].el.getElementsByTagName('img')[0], // find thumbnail pageYScroll = window.pageYOffset || document.documentElement.scrollTop, rect = thumbnail.getBoundingClientRect(); return { x: rect.left, y: rect.top + pageYScroll, w: rect.width }; } }; // PhotoSwipe opened from URL if (fromURL) { if (options.galleryPIDs) { // parse real index when custom PIDs are used // http://photoswipe.com/documentation/faq.html#custom-pid-in-url for (var j = 0; j < items.length; j++) { if (items[j].pid == index) { options.index = j; break; } } } else { // in URL indexes start from 1 options.index = parseInt(index, 10) - 1; } } else { options.index = parseInt(index, 10); } // exit if index not found if (isNaN(options.index)) { return; } if (disableAnimation) { options.showAnimationDuration = 0; } // Pass data to PhotoSwipe and initialize it gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options); gallery.init(); var $tempVideo; var stopVideoHandle = function stopVideoHandle() { if ($tempVideo) { $tempVideo.remove(); $tempVideo = null; } }; var changeHandle = function changeHandle() { var item = gallery.currItem; stopVideoHandle(); if (item.type === 'video') { var $ctn = item.container; var style = $ctn.getElementsByClassName('pswp__img')[0].style; var $video = document.createElement('video'); $video.setAttribute('autoplay', 'autoplay'); $video.setAttribute('controls', 'controls'); $video.setAttribute('src', item.target); $video.style.width = style.width; $video.style.height = style.height; $video.style.position = 'absolute'; $video.style.zIndex = 2; $tempVideo = $video; $ctn.appendChild($video); } }; gallery.listen('initialZoomIn', changeHandle); gallery.listen('afterChange', changeHandle); gallery.listen('initialZoomOut', stopVideoHandle); }; // loop through all gallery elements and bind events var galleryElements = document.querySelectorAll(gallerySelector); for (var i = 0, l = galleryElements.length; i < l; i++) { galleryElements[i].setAttribute('data-pswp-uid', i + 1); galleryElements[i].onclick = onThumbnailsClick; } // Parse URL and open gallery if it contains #&pid=3&gid=1 var hashData = photoswipeParseHash(); if (hashData.pid && hashData.gid) { openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true); } }; var Viewer = function() { function init() { initPhotoSwipeFromDOM('.photos'); } return { init: init }; }(); module.exports = Viewer; /***/ }, /* 3 */ /***/ function(module, exports) { /* WEBPACK VAR INJECTION */ (function(global) { module.exports = inViewport; var instances = []; var supportsMutationObserver = typeof global.MutationObserver === 'function'; function inViewport(elt, params, cb) { var opts = { container: global.document.body, offset: 0 }; if (params === undefined || typeof params === 'function') { cb = params; params = {}; } var container = opts.container = params.container || opts.container; var offset = opts.offset = params.offset || opts.offset; for (var i = 0; i < instances.length; i++) { if (instances[i].container === container) { return instances[i].isInViewport(elt, offset, cb); } } return instances[ instances.push(createInViewport(container)) - 1 ].isInViewport(elt, offset, cb); } function addEvent(el, type, fn) { if (el.attachEvent) { el.attachEvent('on' + type, fn); } else { el.addEventListener(type, fn, false); } } function debounce(func, wait, immediate) { var timeout; return function() { var context = this, args = arguments; var callNow = immediate && !timeout; clearTimeout(timeout); timeout = setTimeout(later, wait); if (callNow) func.apply(context, args); function later() { timeout = null; if (!immediate) func.apply(context, args); } }; } // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708 var contains = function() { if (!global.document) { return true; } return global.document.documentElement.compareDocumentPosition ? function(a, b) { return !!(a.compareDocumentPosition(b) & 16); } : global.document.documentElement.contains ? function(a, b) { return a !== b && (a.contains ? a.contains(b) : false); } : function(a, b) { while (b = b.parentNode) { if (b === a) { return true; } } return false; }; } function createInViewport(container) { var watches = createWatches(); var scrollContainer = container === global.document.body ? global : container; var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15); addEvent(scrollContainer, 'scroll', debouncedCheck); if (scrollContainer === global) { addEvent(global, 'resize', debouncedCheck); } if (supportsMutationObserver) { observeDOM(watches, container, debouncedCheck); } // failsafe check, every 200ms we check for visible images // usecase: a hidden parent containing eleements // when the parent becomes visible, we have no event that the children // became visible setInterval(debouncedCheck, 150); function isInViewport(elt, offset, cb) { if (!cb) { return isVisible(elt, offset); } var remote = createRemote(elt, offset, cb); remote.watch(); return remote; } function createRemote(elt, offset, cb) { function watch() { watches.add(elt, offset, cb); } function dispose() { watches.remove(elt); } return { watch: watch, dispose: dispose }; } function watchInViewport(elt, offset, cb) { if (isVisible(elt, offset)) { watches.remove(elt); cb(elt); } } function isVisible(elt, offset) { if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) { return false; } // Check if the element is visible // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js if (!elt.offsetWidth || !elt.offsetHeight) { return false; } var eltRect = elt.getBoundingClientRect(); var viewport = {}; if (container === global.document.body) { viewport = { top: -offset, left: -offset, right: global.document.documentElement.clientWidth + offset, bottom: global.document.documentElement.clientHeight + offset }; } else { var containerRect = container.getBoundingClientRect(); viewport = { top: containerRect.top - offset, left: containerRect.left - offset, right: containerRect.right + offset, bottom: containerRect.bottom + offset }; } // The element must overlap with the visible part of the viewport var visible = ( (eltRect.right > viewport.left) && (eltRect.left < viewport.right) && (eltRect.bottom > viewport.top) && (eltRect.top < viewport.bottom) ); return visible; } return { container: container, isInViewport: isInViewport }; } function createWatches() { var watches = []; function add(elt, offset, cb) { if (!isWatched(elt)) { watches.push([elt, offset, cb]); } } function remove(elt) { var pos = indexOf(elt); if (pos !== -1) { watches.splice(pos, 1); } } function indexOf(elt) { for (var i = watches.length - 1; i >= 0; i--) { if (watches[i][0] === elt) { return i; } } return -1; } function isWatched(elt) { return indexOf(elt) !== -1; } function checkAll(cb) { return function() { for (var i = watches.length - 1; i >= 0; i--) { cb.apply(this, watches[i]); } }; } return { add: add, remove: remove, isWatched: isWatched, checkAll: checkAll }; } function observeDOM(watches, container, cb) { var observer = new MutationObserver(watch); var filter = Array.prototype.filter; var concat = Array.prototype.concat; observer.observe(container, { childList: true, subtree: true, // changes like style/width/height/display will be catched attributes: true }); function watch(mutations) { // some new DOM nodes where previously watched // we should check their positions if (mutations.some(knownNodes) === true) { setTimeout(cb, 0); } } function knownNodes(mutation) { var nodes = concat.call([], Array.prototype.slice.call(mutation.addedNodes), mutation.target ); return filter.call(nodes, watches.isWatched).length > 0; } } /* WEBPACK VAR INJECTION */ }.call(exports, (function() { return this; }()))) /***/ } /******/ ]);"},{"title":"tags","date":"2020-02-13T12:24:16.000Z","updated":"2020-02-17T11:10:48.618Z","comments":true,"path":"tags/index.html","permalink":"https://cungudafa.gitee.io/tags/index.html","excerpt":"","text":""},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-02-13T11:31:02.034Z","comments":true,"path":"rss/index.html","permalink":"https://cungudafa.gitee.io/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2020-02-13T14:53:25.000Z","updated":"2020-02-13T12:51:21.175Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://cungudafa.gitee.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro"},{"title":"video","date":"2020-02-13T11:14:38.000Z","updated":"2020-02-13T12:49:46.230Z","comments":false,"path":"video/index.html","permalink":"https://cungudafa.gitee.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'http://b-ssl.duitang.com/uploads/item/201612/09/20161209121709_euSn8.jpeg', title: '浪漫医生金实福：第一部', status: '已追完', progress: 100, jp: 'https://www.hanjutv.com/player/37089.html', time: '放送时间: 2018-02-24 SUN.', desc: ' 浪漫医生金实福剧情主要是讲述了想要赢了任何人的男医生姜东柱(柳演锡饰演)和想要从别人那里获得认可的女医生尹书真(徐贤真饰演)，遇到怪才医生金实福(韩石圭饰演)后，领悟到真正的人生价值和爱情的人性故事。' }, { img : 'http://03imgmini.eastday.com/mobile/20200111/20200111114423_91553386500f0161c2233653a2ea6650_11_mwpm_03201609.jpg', title: '浪漫医生金师傅：第二部', status: '正在追', progress: 100, jp: 'https://www.hanjutv.com/player/54929.html', time: '2020-02-13 SUN.', desc: ' 该剧以位于地方城市的石垣医院为背景，讲述怪胎天才医生金师傅和热情高涨的年轻医生们之间的故事。由第一季的刘仁植导演、姜银庆编剧再次合作。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 煲剧计划 这里都是骗眼泪的地方 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }"},{"title":"","date":"2020-02-19T07:01:21.886Z","updated":"2019-11-26T09:54:19.000Z","comments":true,"path":"photos/photoswipe.min.js","permalink":"https://cungudafa.gitee.io/photos/photoswipe.min.js","excerpt":"","text":"/*! PhotoSwipe - v4.1.2 - 2017-04-05 * http://photoswipe.com * Copyright (c) 2017 Dmitry Semenov; */ !function(a,b){\"function\"==typeof define&&define.amd?define(b):\"object\"==typeof exports?module.exports=b():a.PhotoSwipe=b()}(this,function(){\"use strict\";var a=function(a,b,c,d){var e={features:null,bind:function(a,b,c,d){var e=(d?\"remove\":\"add\")+\"EventListener\";b=b.split(\" \");for(var f=0;f0&&(g=parseInt(g[1],10),g>=1&&g=1&&(i0;)Lb.pop();return F?(la=0,mb.forEach(function(a){0===la?Lb[0]=a:1===la&&(Lb[1]=a),la++})):a.type.indexOf(\"touch\")>-1?a.touches&&a.touches.length>0&&(Lb[0]=Fb(a.touches[0],Jb),a.touches.length>1&&(Lb[1]=Fb(a.touches[1],Kb))):(Jb.x=a.pageX,Jb.y=a.pageY,Jb.id=\"\",Lb[0]=Jb),Lb},Nb=function(a,b){var c,d,e,g,h=0,j=pa[a]+b[a],k=b[a]>0,l=tb.x+b.x,m=tb.x-nb.x;return c=j>da.min[a]||jda.min[a]&&(c=i.panEndFriction,h=da.min[a]-j,d=da.min[a]-oa[a]),(d0&&lf.currItem.fitRatio&&(pa[a]+=b[a]*c)):(void 0!==g&&(Ka(g,!0),$=g!==nb.x),da.min.x!==da.max.x&&(void 0!==e?pa.x=e:$||(pa.x+=b.x*c)),void 0!==g)},Ob=function(a){if(!(\"mousedown\"===a.type&&a.button>0)){if($b)return void a.preventDefault();if(!U||\"mousedown\"!==a.type){if(Eb(a,!0)&&a.preventDefault(),Da(\"pointerDown\"),F){var b=e.arraySearch(mb,a.pointerId,\"id\");b1&&!fa&&!$&&(t=s,X=!1,aa=W=!0,na.y=na.x=0,Ma(oa,pa),Ma(hb,c[0]),Ma(ib,c[1]),Gb(hb,ib,vb),ub.x=Math.abs(vb.x)-pa.x,ub.y=Math.abs(vb.y)-pa.y,ba=ca=yb(hb,ib))}}},Pb=function(a){if(a.preventDefault(),F){var b=e.arraySearch(mb,a.pointerId,\"id\");if(b>-1){var c=mb[b];c.x=a.pageX,c.y=a.pageY}}if(V){var d=Mb(a);if(ga||Y||aa)_=d;else if(tb.x!==ta.x*ra)ga=\"h\";else{var f=Math.abs(d[0].x-kb.x)-Math.abs(d[0].y-kb.y);Math.abs(f)>=gb&&(ga=f>0?\"h\":\"v\",_=d)}}},Qb=function(){if(_){var a=_.length;if(0!==a)if(Ma(hb,_[0]),jb.x=hb.x-kb.x,jb.y=hb.y-kb.y,aa&&a>1){if(kb.x=hb.x,kb.y=hb.y,!jb.x&&!jb.y&&wb(_[1],ib))return;Ma(ib,_[1]),X||(X=!0,Da(\"zoomGestureStarted\"));var b=yb(hb,ib),c=Vb(b);c>f.currItem.initialZoomLevel+f.currItem.initialZoomLevel/15&&(ka=!0);var d=1,e=Ta(),g=Ua();if(cg&&(d=(c-g)/(6*e),d>1&&(d=1),c=g+d*e);ds,s=c,Ha()}else{if(!ga)return;if(ha&&(ha=!1,Math.abs(jb.x)>=gb&&(jb.x-=_[0].x-lb.x),Math.abs(jb.y)>=gb&&(jb.y-=_[0].y-lb.y)),kb.x=hb.x,kb.y=hb.y,0===jb.x&&0===jb.y)return;if(\"v\"===ga&&i.closeOnVerticalDrag&&!Bb()){na.y+=jb.y,pa.y+=jb.y;var k=Ib();return T=!0,Da(\"onVerticalDrag\",k),Fa(k),void Ha()}Hb(Ea(),hb.x,hb.y),Y=!0,da=f.currItem.bounds;var l=Nb(\"x\",jb);l||(Nb(\"y\",jb),Na(pa),Ha())}}},Rb=function(a){if(N.isOldAndroid){if(U&&\"mouseup\"===a.type)return;a.type.indexOf(\"touch\")>-1&&(clearTimeout(U),U=setTimeout(function(){U=0},600))}Da(\"pointerUp\"),Eb(a,!1)&&a.preventDefault();var b;if(F){var c=e.arraySearch(mb,a.pointerId,\"id\");if(c>-1)if(b=mb.splice(c,1)[0],navigator.pointerEnabled)b.type=a.pointerType||\"mouse\";else{var d={4:\"mouse\",2:\"touch\",3:\"pen\"};b.type=d[a.pointerType],b.type||(b.type=a.pointerType||\"mouse\")}}var g,h=Mb(a),j=h.length;if(\"mouseup\"===a.type&&(j=0),2===j)return _=null,!0;1===j&&Ma(lb,h[0]),0!==j||ga||fa||(b||(\"mouseup\"===a.type?b={x:a.pageX,y:a.pageY,type:\"mouse\"}:a.changedTouches&&a.changedTouches[0]&&(b={x:a.changedTouches[0].pageX,y:a.changedTouches[0].pageY,type:\"touch\"})),Da(\"touchRelease\",a,b));var k=-1;if(0===j&&(V=!1,e.unbind(window,p,f),zb(),aa?k=0:sb!==-1&&(k=Ea()-sb)),sb=1===j?Ea():-1,g=k!==-1&&k20?c.lastFlickSpeed[d]=c.lastFlickOffset[d]/a:c.lastFlickSpeed[d]=0,Math.abs(c.lastFlickSpeed[d])da.min[a]?c.backAnimDestination[a]=da.min[a]:pa[a]dc.x?0:d.center.x,d.min.y=c>dc.y?a.vGap.top:d.center.y},ic=function(a,b,c){if(a.src&&!a.loadError){var d=!c;if(d&&(a.vGap||(a.vGap={top:0,bottom:0}),Da(\"parseVerticalMargin\",a)),dc.x=b.x,dc.y=b.y-a.vGap.top-a.vGap.bottom,d){var e=dc.x/a.w,f=dc.y/a.h;a.fitRatio=e1&&(c=1),a.initialZoomLevel=c,a.bounds||(a.bounds=gc())}if(!c)return;return hc(a,a.w*c,a.h*c),d&&c===a.initialZoomLevel&&(a.initialPosition=a.bounds.center),a.bounds}return a.w=a.h=0,a.initialZoomLevel=a.fitRatio=1,a.bounds=gc(),a.initialPosition=a.bounds.center,a.bounds},jc=function(a,b,c,d,e,g){b.loadError||d&&(b.imageAppended=!0,mc(b,d,b===f.currItem&&ya),c.appendChild(d),g&&setTimeout(function(){b&&b.loaded&&b.placeholder&&(b.placeholder.style.display=\"none\",b.placeholder=null)},500))},kc=function(a){a.loading=!0,a.loaded=!1;var b=a.img=e.createEl(\"pswp__img\",\"img\"),c=function(){a.loading=!1,a.loaded=!0,a.loadComplete?a.loadComplete(a):a.img=null,b.onload=b.onerror=null,b=null};return b.onload=c,b.onerror=function(){a.loadError=!0,c()},b.src=a.src,b},lc=function(a,b){if(a.src&&a.loadError&&a.container)return b&&(a.container.innerHTML=\"\"),a.container.innerHTML=i.errorMsg.replace(\"%url%\",a.src),!0},mc=function(a,b,c){if(a.src){b||(b=a.container.lastChild);var d=c?a.w:Math.round(a.w*a.fitRatio),e=c?a.h:Math.round(a.h*a.fitRatio);a.placeholder&&!a.loaded&&(a.placeholder.style.width=d+\"px\",a.placeholder.style.height=e+\"px\"),b.style.width=d+\"px\",b.style.height=e+\"px\"}},nc=function(){if(ec.length){for(var a,b=0;b"},{"title":"","date":"2020-02-18T16:15:29.333Z","updated":"2019-11-26T09:54:19.000Z","comments":true,"path":"photos/default-skin/default-skin.css","permalink":"https://cungudafa.gitee.io/photos/default-skin/default-skin.css","excerpt":"","text":"/*! PhotoSwipe Default UI CSS by Dmitry Semenov | photoswipe.com | MIT license */ /* Contents: 1. Buttons 2. Share modal and links 3. Index indicator (\"1 of X\" counter) 4. Caption 5. Loading indicator 6. Additional styles (root element, top bar, idle state, hidden state, etc.) */ /* 1. Buttons */ /* css reset */ .pswp__button { width: 44px; height: 44px; position: relative; background: none; cursor: pointer; overflow: visible; -webkit-appearance: none; display: block; border: 0; padding: 0; margin: 0; float: right; opacity: 0.75; -webkit-transition: opacity 0.2s; transition: opacity 0.2s; -webkit-box-shadow: none; box-shadow: none; } .pswp__button:focus, .pswp__button:hover { opacity: 1; } .pswp__button:active { outline: none; opacity: 0.9; } .pswp__button::-moz-focus-inner { padding: 0; border: 0; } /* pswp__ui--over-close class it added when mouse is over element that should close gallery */ .pswp__ui--over-close .pswp__button--close { opacity: 1; } .pswp__button, .pswp__button--arrow--left:before, .pswp__button--arrow--right:before { background: url(default-skin.png) 0 0 no-repeat; background-size: 264px 88px; width: 44px; height: 44px; } @media (-webkit-min-device-pixel-ratio: 1.1), (-webkit-min-device-pixel-ratio: 1.09375), (min-resolution: 105dpi), (min-resolution: 1.1dppx) { /* Serve SVG sprite if browser supports SVG and resolution is more than 105dpi */ .pswp--svg .pswp__button, .pswp--svg .pswp__button--arrow--left:before, .pswp--svg .pswp__button--arrow--right:before { background-image: url(default-skin.svg); } .pswp--svg .pswp__button--arrow--left, .pswp--svg .pswp__button--arrow--right { background: none; } } .pswp__button--close { background-position: 0 -44px; } .pswp__button--share { background-position: -44px -44px; } .pswp__button--fs { display: none; } .pswp--supports-fs .pswp__button--fs { display: block; } .pswp--fs .pswp__button--fs { background-position: -44px 0; } .pswp__button--zoom { display: none; background-position: -88px 0; } .pswp--zoom-allowed .pswp__button--zoom { display: block; } .pswp--zoomed-in .pswp__button--zoom { background-position: -132px 0; } /* no arrows on touch screens */ .pswp--touch .pswp__button--arrow--left, .pswp--touch .pswp__button--arrow--right { visibility: hidden; } /* Arrow buttons hit area (icon is added to :before pseudo-element) */ .pswp__button--arrow--left, .pswp__button--arrow--right { background: none; top: 50%; margin-top: -50px; width: 70px; height: 100px; position: absolute; } .pswp__button--arrow--left { left: 0; } .pswp__button--arrow--right { right: 0; } .pswp__button--arrow--left:before, .pswp__button--arrow--right:before { content: ''; top: 35px; background-color: rgba(0, 0, 0, 0.3); height: 30px; width: 32px; position: absolute; } .pswp__button--arrow--left:before { left: 6px; background-position: -138px -44px; } .pswp__button--arrow--right:before { right: 6px; background-position: -94px -44px; } /* 2. Share modal/popup and links */ .pswp__counter, .pswp__share-modal { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .pswp__share-modal { display: block; background: rgba(0, 0, 0, 0.5); width: 100%; height: 100%; top: 0; left: 0; padding: 10px; position: absolute; z-index: 1600; opacity: 0; -webkit-transition: opacity 0.25s ease-out; transition: opacity 0.25s ease-out; -webkit-backface-visibility: hidden; will-change: opacity; } .pswp__share-modal--hidden { display: none; } .pswp__share-tooltip { z-index: 1620; position: absolute; background: #FFF; top: 56px; border-radius: 2px; display: block; width: auto; right: 44px; -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25); box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25); -webkit-transform: translateY(6px); -ms-transform: translateY(6px); transform: translateY(6px); -webkit-transition: -webkit-transform 0.25s; transition: transform 0.25s; -webkit-backface-visibility: hidden; will-change: transform; } .pswp__share-tooltip a { display: block; padding: 8px 12px; color: #000; text-decoration: none; font-size: 14px; line-height: 18px; } .pswp__share-tooltip a:hover { text-decoration: none; color: #000; } .pswp__share-tooltip a:first-child { /* round corners on the first/last list item */ border-radius: 2px 2px 0 0; } .pswp__share-tooltip a:last-child { border-radius: 0 0 2px 2px; } .pswp__share-modal--fade-in { opacity: 1; } .pswp__share-modal--fade-in .pswp__share-tooltip { -webkit-transform: translateY(0); -ms-transform: translateY(0); transform: translateY(0); } /* increase size of share links on touch devices */ .pswp--touch .pswp__share-tooltip a { padding: 16px 12px; } a.pswp__share--facebook:before { content: ''; display: block; width: 0; height: 0; position: absolute; top: -12px; right: 15px; border: 6px solid transparent; border-bottom-color: #FFF; -webkit-pointer-events: none; -moz-pointer-events: none; pointer-events: none; } a.pswp__share--facebook:hover { background: #3E5C9A; color: #FFF; } a.pswp__share--facebook:hover:before { border-bottom-color: #3E5C9A; } a.pswp__share--twitter:hover { background: #55ACEE; color: #FFF; } a.pswp__share--pinterest:hover { background: #CCC; color: #CE272D; } a.pswp__share--download:hover { background: #DDD; } /* 3. Index indicator (\"1 of X\" counter) */ .pswp__counter { position: absolute; left: 0; top: 0; height: 44px; font-size: 13px; line-height: 44px; color: #FFF; opacity: 0.75; padding: 0 10px; } /* 4. Caption */ .pswp__caption { position: absolute; left: 0; bottom: 0; width: 100%; min-height: 44px; } .pswp__caption small { font-size: 11px; color: #BBB; } .pswp__caption__center { text-align: left; max-width: 420px; margin: 0 auto; font-size: 13px; padding: 10px; line-height: 20px; color: #CCC; } .pswp__caption--empty { display: none; } /* Fake caption element, used to calculate height of next/prev image */ .pswp__caption--fake { visibility: hidden; } /* 5. Loading indicator (preloader) You can play with it here - http://codepen.io/dimsemenov/pen/yyBWoR */ .pswp__preloader { width: 44px; height: 44px; position: absolute; top: 0; left: 50%; margin-left: -22px; opacity: 0; -webkit-transition: opacity 0.25s ease-out; transition: opacity 0.25s ease-out; will-change: opacity; direction: ltr; } .pswp__preloader__icn { width: 20px; height: 20px; margin: 12px; } .pswp__preloader--active { opacity: 1; } .pswp__preloader--active .pswp__preloader__icn { /* We use .gif in browsers that don't support CSS animation */ background: url(preloader.gif) 0 0 no-repeat; } .pswp--css_animation .pswp__preloader--active { opacity: 1; } .pswp--css_animation .pswp__preloader--active .pswp__preloader__icn { -webkit-animation: clockwise 500ms linear infinite; animation: clockwise 500ms linear infinite; } .pswp--css_animation .pswp__preloader--active .pswp__preloader__donut { -webkit-animation: donut-rotate 1000ms cubic-bezier(0.4, 0, 0.22, 1) infinite; animation: donut-rotate 1000ms cubic-bezier(0.4, 0, 0.22, 1) infinite; } .pswp--css_animation .pswp__preloader__icn { background: none; opacity: 0.75; width: 14px; height: 14px; position: absolute; left: 15px; top: 15px; margin: 0; } .pswp--css_animation .pswp__preloader__cut { /* The idea of animating inner circle is based on Polymer (\"material\") loading indicator by Keanu Lee https://blog.keanulee.com/2014/10/20/the-tale-of-three-spinners.html */ position: relative; width: 7px; height: 14px; overflow: hidden; } .pswp--css_animation .pswp__preloader__donut { -webkit-box-sizing: border-box; box-sizing: border-box; width: 14px; height: 14px; border: 2px solid #FFF; border-radius: 50%; border-left-color: transparent; border-bottom-color: transparent; position: absolute; top: 0; left: 0; background: none; margin: 0; } @media screen and (max-width: 1024px) { .pswp__preloader { position: relative; left: auto; top: auto; margin: 0; float: right; } } @-webkit-keyframes clockwise { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } @keyframes clockwise { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } @-webkit-keyframes donut-rotate { 0% { -webkit-transform: rotate(0); transform: rotate(0); } 50% { -webkit-transform: rotate(-140deg); transform: rotate(-140deg); } 100% { -webkit-transform: rotate(0); transform: rotate(0); } } @keyframes donut-rotate { 0% { -webkit-transform: rotate(0); transform: rotate(0); } 50% { -webkit-transform: rotate(-140deg); transform: rotate(-140deg); } 100% { -webkit-transform: rotate(0); transform: rotate(0); } } /* 6. Additional styles */ /* root element of UI */ .pswp__ui { -webkit-font-smoothing: auto; visibility: visible; opacity: 1; z-index: 1550; } /* top black bar with buttons and \"1 of X\" indicator */ .pswp__top-bar { position: absolute; left: 0; top: 0; height: 44px; width: 100%; } .pswp__caption, .pswp__top-bar, .pswp--has_mouse .pswp__button--arrow--left, .pswp--has_mouse .pswp__button--arrow--right { -webkit-backface-visibility: hidden; will-change: opacity; -webkit-transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); } /* pswp--has_mouse class is added only when two subsequent mousemove events occur */ .pswp--has_mouse .pswp__button--arrow--left, .pswp--has_mouse .pswp__button--arrow--right { visibility: visible; } .pswp__top-bar, .pswp__caption { background-color: rgba(0, 0, 0, 0.5); } /* pswp__ui--fit class is added when main image \"fits\" between top bar and bottom bar (caption) */ .pswp__ui--fit .pswp__top-bar, .pswp__ui--fit .pswp__caption { background-color: rgba(0, 0, 0, 0.3); } /* pswp__ui--idle class is added when mouse isn't moving for several seconds (JS option timeToIdle) */ .pswp__ui--idle .pswp__top-bar { opacity: 0; } .pswp__ui--idle .pswp__button--arrow--left, .pswp__ui--idle .pswp__button--arrow--right { opacity: 0; } /* pswp__ui--hidden class is added when controls are hidden e.g. when user taps to toggle visibility of controls */ .pswp__ui--hidden .pswp__top-bar, .pswp__ui--hidden .pswp__caption, .pswp__ui--hidden .pswp__button--arrow--left, .pswp__ui--hidden .pswp__button--arrow--right { /* Force paint & create composition layer for controls. */ opacity: 0.001; } /* pswp__ui--one-slide class is added when there is just one item in gallery */ .pswp__ui--one-slide .pswp__button--arrow--left, .pswp__ui--one-slide .pswp__button--arrow--right, .pswp__ui--one-slide .pswp__counter { display: none; } .pswp__element--disabled { display: none !important; } .pswp--minimal--dark .pswp__top-bar { background: none; }"}],"posts":[{"title":"Hexo(sakura)+gitee_github搭建个人博客（总结）","slug":"Hexo(sakura)+gitee_github搭建个人博客（总结）","date":"2020-02-23T05:54:10.000Z","updated":"2020-02-23T06:14:12.988Z","comments":true,"path":"post/ffa5.html","link":"","permalink":"https://cungudafa.gitee.io/post/ffa5.html","excerpt":"","text":"一、前言问1：为什么要博客？ 答1：①简历上增添一笔色彩；②计算机专业有属于自己的博客挺重要的，无论是学习记录还是记录生活；③博客汇友，又扩展一个学习圈；④疫情期间，我有大把时间填坑踩坑，鼓捣鼓捣~🎨 问2：为什么要选择Hexo，而不是WordPress或者线上平台csdn、cnblog、简书等等？ 答2：① WordPress 是基于php的博客搭建，需要 云服务器，Hexo是将博客转为网页html形式，可以免费发布在github（Pages）/国内gitee（Pages），学生党很亲和🙋‍♂️🙋‍♀️；② 线上平台功能很完善，但也有广告，固定布局等限制，用过就知道有利有弊吧~ 问3：用Hexo搭建/维护博客费时吗？ 答3：①我自己折腾了一个周，因为我选用的主题sakura比较心水（花里胡哨）吧，大多数时间都在升级页面去了 ；② 维护是hexo clean &amp;&amp; hexo g &amp;&amp;hexo d三连，加上我的博客是csdn线上和hexo（gitee端）双线发布，导出导入，不算复杂吧。 教程：基于Gitee+Hexo搭建个人博客demo：可以去瞧瞧，传送门系列学习记录：sakura专栏 二、搭建历程1.环境 Win10 （os系统） Node （hexo 运行环境） npm （环境组建） Git （发布管理项目） VScode （任意，我觉得挺好用🀄~） sakura（主题）2.主题2.1简介 快速链接1：WordPress 主题 Sakura 本主题由WordPress-sakura主题移植过来，目前还没有完整开发功能，Hexo-Next和Yilia主题更为完善，当然，博主选择这款主题肯定是被吸引点吸引的啦~ 快速链接2：唯美主题hexo-sakura使用教程 这是移植主题作者开发时的备忘录。 快速链接3：hexo-sakura使用教程 这是前人给的细节教程 既然铺路石都到这里了，我们上手更为easy了！ 先po一个本主题使用者wallleap的推荐视频，视频前半段为sakura主题：[video(video-wRsVmWkj-1582431181984)(type-bilibili)(url-https://player.bilibili.com/player.html?aid=74851669)(image-https://ss.csdn.net/p?http://i0.hdslb.com/bfs/archive/58ca59207e8c1f7465b04137f218eb0a3bef907c.jpg)(title-视频：五款好用的hexo主题推荐)] 2.2主题特性首页： 首页大屏视频 随机封面图 Lazyload图片懒加载 前端主题切换 Valine评论： QQ/Gravatar 头像 评论插图 用户 UA 及 IP 定位 每日诗词 文章： 文章目录压缩（随机编号或拼音） 不蒜子数字和访问量统计 Mac 风格代码块 支持文章置顶和文章打赏 支持 MathJax TOC 目录 时间轴式的归档页 可设置复制文章内容时追加版权信息 可设置阅读文章时做密码验证 其他： 定制个人logo live2d看板娘 天气插件 botui机器人对话 DaoVoice在线通讯 相册 Aplayer/HermitX 支持（音乐播放） CDN 优化 PicGo+github图床 neat压缩 2.3demo首页-轮播图首页-博客文章列表 标签归档-时光轴 文章文章-私密音乐板块分享板块相册板块留言板友人帐板块友人帐-友链更多模块开发中~ cungudafa的博客：快速传送门更多参考：洪卫的博客 3.总结Hexo-sakura版本的确是吃螃蟹的人啦，各网站Hexo的教程很多，但sakura（hexo）主题适配和花里胡哨目前还算比较新的教程，放在专栏里啦！ 有兴趣的话可以参考：cungudafa 的 sakura专栏 这里都是我自己折腾的学习记录，如果有帮助，那就点个赞吧！💖遇到问题可以留言哦~💌 我在hexo-sakura原主题上也丰富了很多，需要源码套餐也可以留言💌🉑","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://cungudafa.gitee.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"cungudafa"},{"title":"毕业季，同窗去哪儿？","slug":"毕业季，同窗去哪儿？","date":"2020-02-20T09:54:10.000Z","updated":"2020-02-23T05:55:15.221Z","comments":true,"path":"post/b240.html","link":"","permalink":"https://cungudafa.gitee.io/post/b240.html","excerpt":"","text":"正值毕业季，同窗好友们大部分都签约工作了；还有的准研究生们，在今天2.20日也查询到自己考研成绩，希望大家都心想事成，去到满意的地方，开始新的生活。这两天班长做了一个小统计，毕业去向表（大致是姓名和目前状态签约XXX，考研XXX） 嗯，都是听过或没听过名字的公司或学校名！一个校园内，我们很近；天南海北，我们很远！ 我们都来自重庆交通大学-物联网工程专业，我们大多数的选择去到了上海、杭州、深圳、四川、重庆。地图上的距离好像也不是那么远！有空，还可以聚聚~以下是地图绘制的过程~ 一、地图绘制 语言python 基于xlrd插件处理表格 百度地图api定位地点 pyecharts绘制地图 二、过程1. 基于xlrd插件处理表格表格数据大致三类：提取出表格姓名和已签约公司或考研学校，将学生信息存入集合中[ [&#39;小红&#39;, &#39;四川XX集团&#39;], [&#39;小明&#39;, &#39;广州XX电子有限公司&#39;],[&#39;小吴&#39;, &#39;&#39;], [&#39;小王&#39;, &#39;重庆大学&#39;]] #!/usr/bin/env python3 # -*- coding:utf-8 -*- import xlrd def read_xsls(xlsx_path): list = [] # 打开excel文件，创建一个workbook对象,book对象也就是fruits.xlsx文件,表含有sheet名 rbook = xlrd.open_workbook(xlsx_path) # sheets方法返回对象列表,[&lt;xlrd.sheet.Sheet object at 0x103f147f0&gt;] rbook.sheets() # xls默认有3个工作簿,Sheet1,Sheet2,Sheet3 rsheet = rbook.sheet_by_index(0) # 取第一个工作簿 # 循环工作簿的所有行 for row in rsheet.get_rows(): student_column = row[0] # 姓名所在的列 student_value = student_column.value # 姓名名 if student_value != &#39;姓名&#39;: # 排除第一行 state_column = row[3] # 公司所在的列 state_value = state_column.value sign = str(state_value)[0:2] if sign == &#39;签约&#39;: company = str(state_value)[2:] list.append([student_value, company]) # 打印 print(student_value, &quot;\\t&quot;, company) if sign == &#39;考研&#39;: school = str(state_value)[2:] list.append([student_value, school]) # 打印 print(student_value, &quot;\\t&quot;, school) if sign == &#39;求职&#39;: list.append([student_value, &#39;&#39;]) print(student_value, &quot;\\t&quot;, state_value) return list if __name__ == &#39;__main__&#39;: xlsx_path = &#39;./data.xlsx&#39; studentlist = read_xsls(xlsx_path) print(&quot;读取学生信息：&quot;, studentlist) 2. 百度地图api定位地点首先需要在百度地图注册账号获得ak（appkey）应用秘钥，步骤： 进入控制台-》应用管理-》创建应用 强调：选择浏览器端（python采用request访问机制，模拟浏览器进行请求定位） 白名单：* （所有域名可使用此ak秘钥） 获得你的ak秘钥：百度api-python使用如下：采取requests模拟浏览器访问api获得返回值 #!/usr/bin/env python3 # -*- coding:utf-8 -*- import json import requests import urllib.parse url = &#39;http://api.map.baidu.com/geocoding/v3/&#39; ak = &quot;36RTGvTpxEdBHAZL817U5PSIGffRmwOe&quot;#你的ak秘钥 def getGPS(addr): data1 = { &quot;address&quot;: addr } data2 = { &#39;output&#39;: &#39;json&#39;, &#39;ak&#39;: ak } query_string1 = urllib.parse.urlencode(data1) query_string2 = urllib.parse.urlencode(data2) getUrl = url + &#39;?&#39; + query_string1 + &#39;&amp;&#39; + query_string2 result = (json.loads(requests.get(getUrl).text)[&quot;result&quot;])[ &quot;location&quot;] # {&#39;lng&#39;: XX.XXXXXXXXXXX, &#39;lat&#39;: XX.XXXXXXXXXXXXXX} lng = result[&quot;lng&quot;] lat = result[&quot;lat&quot;] print((lng, lat)) return lng, lat getGPS(&quot;重庆交通大学&quot;) 返回经纬度：(106.54271560556826, 29.65925719891873) 3. pyecharts绘制地图安装echarts和中国地图： pip install pyecharts pip install echarts-countries-pypkg pip install echarts-china-provinces-pypkg pip install echarts-china-cities-pypkg使用方法： #!/usr/bin/env python3 # -*- coding:utf-8 -*- import urllib.parse from pyecharts.charts import Geo from pyecharts import options as opts from pyecharts.globals import ChartType, SymbolType from pyecharts.types import LineStyle def draw_geo(): g = Geo() g.add_schema(maptype=&quot;china&quot;) # 加入自定义的点，格式为 g.add_coordinate(&#39;geo&#39;, 106.54271560556826, 29.65925719891873) # 为自定义的点添加属性 g.add(&#39;geo&#39;, [(&#39;geo&#39;, 51)], type_=ChartType.EFFECT_SCATTER,) g.set_series_opts(label_opts=opts.LabelOpts(is_show=False)) g.set_global_opts(title_opts=opts.TitleOpts(title=&quot;自定义点&quot;)) # 在 html(浏览器) 中渲染图表 g.render(&#39;render.html&#39;) print(&quot;绘图成功保存在render.html&quot;) draw_geo() 效果图： 三、完整代码#!/usr/bin/env python3 # -*- coding:utf-8 -*- import xlrd import json import requests import urllib.parse from pyecharts.charts import Geo from pyecharts import options as opts from pyecharts.globals import ChartType, SymbolType from pyecharts.types import LineStyle url = &#39;http://api.map.baidu.com/geocoding/v3/&#39; ak = &quot;36RTGvTpxEdBHAZL817U5PSIGffRmwOe&quot; # 获取经纬度方法 def getGPS(addr): data1 = { &quot;address&quot;: addr } data2 = { &#39;output&#39;: &#39;json&#39;, &#39;ak&#39;: ak } query_string1 = urllib.parse.urlencode(data1) query_string2 = urllib.parse.urlencode(data2) getUrl = url + &#39;?&#39; + query_string1 + &#39;&amp;&#39; + query_string2 result = (json.loads(requests.get(getUrl).text)[&quot;result&quot;])[ &quot;location&quot;] # {&#39;lng&#39;: XX.XXXXXXXXXXX, &#39;lat&#39;: XX.XXXXXXXXXXXXXX} lng = result[&quot;lng&quot;] lat = result[&quot;lat&quot;] #print((lng, lat)) return lng, lat # 读取表格 def read_xsls(xlsx_path): list = [] # 打开excel文件，创建一个workbook对象,book对象也就是fruits.xlsx文件,表含有sheet名 rbook = xlrd.open_workbook(xlsx_path) # sheets方法返回对象列表,[&lt;xlrd.sheet.Sheet object at 0x103f147f0&gt;] rbook.sheets() # xls默认有3个工作簿,Sheet1,Sheet2,Sheet3 rsheet = rbook.sheet_by_index(0) # 取第一个工作簿 # 循环工作簿的所有行 for row in rsheet.get_rows(): student_column = row[0] # 姓名所在的列 student_value = student_column.value # 姓名名 if student_value != &#39;姓名&#39;: # 排除第一行 state_column = row[3] # 公司所在的列 state_value = state_column.value sign = str(state_value)[0:2] if sign == &#39;签约&#39;: company = str(state_value)[2:] list.append([student_value, company]) # 打印 #print(student_value, &quot;\\t&quot;, company) if sign == &#39;考研&#39;: school = str(state_value)[2:] list.append([student_value, school]) # 打印 #print(student_value, &quot;\\t&quot;, school) if sign == &#39;求职&#39;: list.append([student_value, &#39;&#39;]) #print(student_value, &quot;\\t&quot;, state_value) return list # 批量标经纬度 def get_positions(list): list_GPS = [] for item in list: place = item[1] # print(place) if len(place) != 0: lng, lat = getGPS(place) list_GPS.append([item[0], item[1], lng, lat]) # print(list_GPS) return list_GPS # 绘图 def draw_geo(list_GPS): g = Geo() g.add_schema(maptype=&quot;china&quot;) for item in list_GPS: # 加入自定义的点，格式为 g.add_coordinate(item[0][0:1], item[2], item[3]) # 为自定义的点添加属性 g.add(item[0][0:1], [(item[0][0:1], item[1])], type_=ChartType.EFFECT_SCATTER,) g.set_series_opts(label_opts=opts.LabelOpts(is_show=False), linestyle_opts=opts.LineStyleOpts(2)) g.set_global_opts(title_opts=opts.TitleOpts(title=&quot;物联网1601班&quot;)) # 在 html(浏览器) 中渲染图表 g.render(&#39;render.html&#39;) print(&quot;绘图成功保存在render.html&quot;) if __name__ == &#39;__main__&#39;: xlsx_path = &#39;./data.xlsx&#39; studentlist = read_xsls(xlsx_path) print(&quot;读取学生信息：&quot;, studentlist) list_GPS = get_positions(studentlist) print(&quot;获取学生信息有效定位：&quot;, list_GPS) draw_geo(list_GPS) 效果：如果还需要美化，可以修改g.set_series_opts()这一部分哦！ 最后，","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"pyecharts","slug":"pyecharts","permalink":"https://cungudafa.gitee.io/tags/pyecharts/"}],"author":"cungudafa"},{"title":"Hexo-SEO搜索引擎优化（sitemap）","slug":"Hexo-SEO搜索引擎优化（sitemap）","date":"2020-02-19T14:54:10.000Z","updated":"2020-02-23T05:54:20.044Z","comments":true,"path":"post/e7a5.html","link":"","permalink":"https://cungudafa.gitee.io/post/e7a5.html","excerpt":"","text":"一、提交站点地图的作用假如你在百度上搜索信息：hexo（sakura）博客： 会返回n多条搜索结果，来源于不同的平台推送， 但是每条结果都会有不同的匹配度，按搜索引擎排序规则进行排序。 作为站长，如何让你的文章也能被其他人百度搜索到，谷歌搜索到，且尽量能把排名靠前一点呢？问：搜索引擎是如何获取这些信息的呢？ 答：搜索引擎通过蜘蛛抓爬的方式来收录各网站信息。 首先，站长必须知道的两个定义：站点地图（sitemap）和搜索引擎优化（SEO） sitemap的意思就是网站地图，又称站点地图。sitemap文件中包含了我们网站中所有的有效链接（和RSS订阅的功能有异曲同工之妙），便于搜索引擎的蜘蛛抓爬以及收录。 如果没有sitemap地图的话，那么搜索引擎蜘蛛需要一个个的抓取网站的链接；我们的网站添加了sitemap文件之后，搜索引擎蜘蛛可以直接抓取sitemap文件中的链接。等于一键告诉百度：“你问的问题，我能解答！” sitemap在SEO（Search Engine Optimization：汉译为搜索引擎优化）过程中有着十分重要的地位，同时也能限制蜘蛛对某些特定目录的爬取。 二、具体步骤 hexo安装插件（一个是通用站点地图的（谷歌，Bing…），后者是百度站点地图特有的） npm install hexo-generator-sitemap --save npm install hexo-generator-baidu-sitemap --save 然后在站点配置文件_config.xml 中添加： # 自动生成sitemap sitemap: path: sitemap.xml baidusitemap: path: baidusitemap.xmlhexo生成时会在public下面生成sitemap.xml以及baidusitemap.xml自动生成。 接下来参考： 谷歌认证 百度认证","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"SEO","slug":"SEO","permalink":"https://cungudafa.gitee.io/tags/SEO/"}],"author":"cungudafa"},{"title":"Github+Hexo博客增添相册功能","slug":"Github+Hexo博客增添相册功能","date":"2020-02-18T17:14:10.000Z","updated":"2020-02-19T10:56:40.260Z","comments":true,"path":"post/2b2b.html","link":"","permalink":"https://cungudafa.gitee.io/post/2b2b.html","excerpt":"","text":"前言：hexo的sakura主题默认是不含有相册页面的,如果想添加此页面需自行编写效果图预览，思路： 不能把所有图片都放在source静态资源下，一是数据量太大，增加Hexo的负担（所以我们把图片放在github），二是加载高清大图片资源缓慢（所以我们用python对图片进行批量压缩处理），这样加载呈现压缩图，点击才加载原图。 本文参考于Hexo+Github实现相册功能作者：LawLite，原文主要是思路，实践是有坑的，这又是一篇填坑的文章。 一、图片的处理 首先资源图片是是存放在GitHub上,你在github准备一个仓库。我gihub名为cungudafa，仓库名为img，这里找到你的克隆地址，我的地址为：https://github.com/cungudafa/img.git 本地准备一个文件夹来存储和管理图片(Git管理，需要提前安装) 在电脑上随便一个位置创建一个新的文件夹，这里我创建文件夹名称叫Blog_Album 然后打开git，cd到此文件夹执行git clone https://github.com/cungudafa/img.git命令克隆github上仓库。 git clone https://github.com/你的github名/仓库名.git 克隆完毕在Blog_Album目录下就会有img这个文件夹（以下img都指这个目录也指我的github仓库名），里面有.git文件和其他图片资源。（我们后序用脚本快速处理相册，会使用到这个.git） 在img文件夹内新建一个文件夹/photos 在这里存放你需要放在博客中的图片。（存放名称格式如下：2020-02-02_discriptionofyourpic.jpg；最前面是日期，然后用_进行分隔；后面是图片的描述信息，注意不要包含_和.符号，最好也不要用中文命名） 附：python脚本（需要有python环境哦）快速处理图片命名：（下载ImageRename.py，在cmd中运行python ImageRename.py,能快速在名称前加上最新一次修改日期） Hexo中我们的相册是采用ins样式显示的，为了快速加载显示图片，我们还需要制作图片的压缩图和图片的序列data.json。同样这里才用一个Python小脚本对图片进行压缩编辑，并且上传到自己的GitHub。 下载脚本ImageProcess.py和tool.py文件至此文件夹内（Blog_Album\\img） 说明：ImageProcess为裁剪方法，tools工具类；还创建了min_photos文件夹存放缩略图；json由tools脚本生成的，后面hexo用到的。 运行tool.py脚本要安装python环境哦！(python tool.py 或者用Edit with IDLE也可以)如果执行tool.py的时候如果没有PIL库的话会报错，安装即可。安装PIL只需在cmd中执行：pip install Pillow就可以了。 其中，tools由LawLite大牛编写，这里引用；其中包含压缩图片，裁剪图片，github提交，json处理四个部分。（gihub提交部分需要把git.exe的位置（例：D:\\mydownload\\Git\\bin）添加到path环境变量中去；由于我们是克隆的img项目，此时用到的就是.git提交，非常方便了！） 运行效果： 已上传内容： 说明：执行后会生成data.json文件，此文件存储了图片的链接，名称和简介。 二、博客页面 修改themes\\sakura\\languages\\zh-cn.yml的photo：图集为相册 photos: 相册 修改配置themes\\sakura\\_config.yml修改 图集: {path: /tags/图集/, fa: fa-photo }改为或添加相册 相册: {path: /photos/, fa: fa-photo } 在博客根目录下添加photo页面hexo n page photos，会在source下创建以下目录： 把data.json复制到\\photos下，为了方便，也可以修改tools.py的大约135行位置处，以后在运行脚本时，直接保存到此处： ``` # 这里可以直接修改到你的hexo资源目录 #with open(&quot;data.json&quot;,&quot;w&quot;) as fp: with open(&quot;D:/myworkspace/1GitHub_cungudafa/MyWeb/source/photos/data.json&quot;,&quot;w&quot;) as fp: json.dump(final_dict, fp) json.dump(final_dict, fp) ``` 在photos中的 index.md 加载相册内容部分。 说明：原作者用的index.ejs（主题yilia），我修改到index.md中（主题是sakura），由此生成index.html；如果需要修改样式或添加内容，改这里即可。 因为相册渲染用不到sakura主题，所以还需要额外添加css文件和js文件，我的样式链接js_css，将js和css中的内容也复制到MyWeb\\source\\photos下； 说明： （1）assets目录下放的是一张empty.png图片，原作者在ins.js中引用了此图片也没有特别说明，我的链接里给出来了，补坑； （其次，原作者的assets和photos同级目录，我放在photos目录里，特别修改了这两个位置，下载我的js已经修改过了。） 特别修改： （2）自己动手，修改ins.js里大约在119行左右的链接修改为你的GitHub的仓库地址：（我的示例：cungudafa/img修改为你的github名/你的github仓库名） // 需要修改https://raw.githubusercontent.com/你的github名/你的github仓库名/master/min_photos/即可 var minSrc = &#39;https://raw.githubusercontent.com/cungudafa/img/master/min_photos/&#39; + data.link[i]; var src = &#39;https://raw.githubusercontent.com/cungudafa/img/master/photos/&#39; + data.link[i]; 注意点：确保你的图片地址是正确的，否则加载不出来，检测方法可以将选择一个图片地址看能不能再浏览器中打开。如图是点击download下载后的链接，是https://raw.githubusercontent.com 开头的，不是图片的存储地址，否则加载不出。 hexo clean &amp;&amp;hexo g &amp;&amp;hexo s直接生成photos\\index.html到这里，博客相册功能已经实现了，本文已经结束！点击可查看效果：我的相册 现在有个问题是不能点击查看大图！坑二：作者用的主题融合了photoswipe插件功能，其他主题或者任意html要想使用，还得单独导入相关css和js。 三、其他配置 下载样式文件（我的img图库已经很大了，不方便下载，这里给一个前人的下载链接） 1.1 photos目录下添加photoswipe.css、photoswipe-ui-default.min.js、photoswipe.min.js， 1.2 photos目录下新建default-skin目录，添加如下文件： 1.3 在source\\photos\\index.md相册文件前加上样式： &lt;link rel=&quot;stylesheet&quot; href=&quot;./ins.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./photoswipe.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./default-skin/default-skin.css&quot;&gt; &lt;script src=&quot;./photoswipe.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./photoswipe-ui-default.min.js&quot;&gt;&lt;/script&gt; 查看大图：（手机端也适应哦！） 如果想要全局都使用photoswipe效果的话，可以把js和css配置在theme主题中，在head、footer分别加上相应引入，额外还要添加一些配置哦：photoswipe 移动端PC端兼容图片相册预览 。 现在项目相册部分完美！接下来是视频部分~ 踩坑、填坑、学习记录 走起 ending 更多小王的技术博客:cungudafa-csdn","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"图集","slug":"图集","permalink":"https://cungudafa.gitee.io/tags/%E5%9B%BE%E9%9B%86/"}],"author":"cungudafa"},{"title":"Hexo（sakura）添加天气小插件，修改访问路径","slug":"Hexo（sakura）添加天气小插件，修改访问路径","date":"2020-02-17T12:19:10.000Z","updated":"2020-02-17T12:29:10.375Z","comments":true,"path":"post/9958.html","link":"","permalink":"https://cungudafa.gitee.io/post/9958.html","excerpt":"","text":"@[TOC] 一、添加天气小插件首先去中国天气官网：https://cj.weather.com.cn/plugin/pc，配置自己的插件：（tips：免费的，但需要注册账号） 选择自定义插件 自定义样式 生成代码，复制粘贴到 themes/sakura/layout.ejs即可 &lt;!-- weather --&gt; &lt;script type=&quot;text/javascript&quot;&gt; WIDGET = {FID: &#39;yqRrzxwtvs&#39;} &lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;https://apip.weatherdt.com/float/static/js/r.js?v=1111&quot;&gt;&lt;/script&gt; 二、修改文章生成链接形式 示例：同一篇文章的搜索地址第一种中文版：http://cungudafa.gitee.io/2020/02/17/Hexo%EF%BC%88sakura%EF%BC%89%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6+%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0第二种随机数字加代码重命名版：https://cungudafa.gitee.io/post/73fa.html第三种中文转拼音版：https://cungudafa.gitee.io/2020/02/17/hexo-sakura-she-zhi-wen-zhang-zhi-ding-si-mi-wen-zhang/ 1.随机编号主题默认的文章链接配置是（中文版） premalink: :year/:month/:day/:title这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。 首先在根目录下安装hexo-abbrlink插件： npm install hexo-abbrlink --save 修改主配置文件 增添：启用算法生成不重复文件编号 ## 启用算法生成不重复文件编号 abbrlink: alg: crc16 #算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制 修改：permalink: post/:abbrlink.html（此处可以自己设置，也可以直接使用 :/abbrlink）permalink: post/:abbrlink.html 运行效果为随机数字和字母：生成文章的链接格式就会是如下样例（官方样例）: crc16 &amp; hex https://post.zz173.com/posts/66c8.html crc16 &amp; dec https://post.zz173.com/posts/65535.html crc32 &amp; hex https://post.zz173.com/posts/8ddf18fb.html crc32 &amp; dec https://post.zz173.com/posts/1690090958.html生成完后，原md文件的Front-matter 内会增加abbrlink 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。 2.拼音版 安装插件 npm i hexo-permalink-pinyin --save 主文件配置（把之前的abbrlink修改回来） permalink: :year/:month/:day/:title/ # 中文链接转拼音 # https://github.com/viko16/hexo-permalink-pinyin permalink_pinyin: enable: true separator: &#39;&#39; # 拼音之间的间隔符default: &#39;-&#39; 修改完成如下： 运行效果为汉字转拼音： 以上两种修改路径的方法自选一种就好了，卸载插件是： npm install hexo-abbrlink --save npm uninstall hexo-permalink-pinyin --save删掉主配置文件无关配置即可。","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://cungudafa.gitee.io/tags/%E5%89%8D%E7%AB%AF/"}],"author":"cungudafa"},{"title":"Hexo（sakura）添加RSS订阅","slug":"Hexo（sakura）添加RSS订阅","date":"2020-02-17T12:19:10.000Z","updated":"2020-02-17T12:30:31.552Z","comments":true,"path":"post/8e37.html","link":"","permalink":"https://cungudafa.gitee.io/post/8e37.html","excerpt":"","text":"一、什么是RSS订阅首先你得需要一个RSS阅读器，大家推荐的叫：“inoreader”，宇宙第一阅读器，中文支持也挺好。（没有PC端，支持网页和chrome插件）。注册，登录，复制atom.xml地址到inoreader搜索框查询，可直接订阅：以后在左侧就可以快速找到你得订阅啦！ 一键订阅 RSS 至 Inoreader，支持 RSSHub（微博、简书、知乎、B站等） [浏览器小书签] 如何把自己的网站博文也制作成atom.xml格式可订阅信息呢： 简易信息聚合是“Really Simple Syndication”或“Richsite summary”(网站内容摘要)的中文名字。是站点用来和其他站点之间共享内容的一种简易方式。英文缩写为RSS技术。 RSS是一种信息聚合的技术，是某一站点和其他站点之间共享内容的一种简易信息发布与传递的方式，使得一个网站可以方便的调用其他提供RSS订阅服务的网站内容，从而形成非常高效的信息聚合，让网站发布的内容在更大的范围内传播。他是一种用于共享新闻和其他WEB内容的数据交换规范，也是使用最广泛的一种扩展性标识语言。 二、sakura配置RSSHexo主题比较通用的配置步骤 安装插件 npm install hexo-generator-feed 主配置_config.yml文末添加 # Extensions ## Plugins: http://hexo.io/plugins/ #RSS订阅 plugin: hexo-generator-feed #Feed Atom feed: type: atom #RSS的类型(atom/rss2) path: atom.xml #文件路径,默认是atom.xml/rss2.xml limit: 20 #展示文章的数量,使用0或则false代表展示全部 hub: content: #在RSS文件中是否包含内容 ,有3个值 true/false默认不填为false content_limit: 140 #指定内容的长度作为摘要,仅仅在上面content设置为false和没有自定义的描述出现 content_limit_delim: &#39; &#39; #上面截取描述的分隔符,截取内容是以指定的这个分隔符作为截取结束的标志.在达到规定的内容长度之前最后出现的这个分隔符之前的内容,，防止从中间截断. order_by: -date icon: #icon.png 主题配置themes\\sakura\\_config.yml文末添加 # 简易信息聚合,站点共享 rss: /atom.xml 运行效果（就是把首页的推送内容转换成短小的快速标签，能通过RSS查看工具快速访问最新的博客）","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://cungudafa.gitee.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"动画","slug":"动画","permalink":"https://cungudafa.gitee.io/tags/%E5%8A%A8%E7%94%BB/"}],"author":"cungudafa"},{"title":"程序媛交友","slug":"程序媛交友","date":"2020-02-16T09:54:10.000Z","updated":"2020-02-19T02:38:41.331Z","comments":true,"path":"post/adab.html","link":"","permalink":"https://cungudafa.gitee.io/post/adab.html","excerpt":"","text":"个人资料姓名：小王 :) 昵称：cungudafa 性别：女 邮箱：cungudafa@163.com 常驻博客：CSDN-cungudafa 个人博客：姑的小屋 ，欢迎来访哦！ 项目仓库： github-cungudafa 码云—cungudafa Tips：学弟学妹们，大部分作业参考，切记不可Ctrl+cv哦！（面试会吃亏~） 学习经历目前在读大四物联网工程专业程序媛一枚 学习路线： c++/c#/Python/Java MySQL/SqlServer Linux/ Javaweb/Android/WeApp Pr 数据结构/数据库原理 专业经验一部分是前后端 SSM JavaWeb BootStrap+LayUI+vue Vue+Springboot前后端分离 二部分是嵌入式 Linux RaspberryPi 三部分是杂类 云服务器搭建 python爬虫 微信小程序（不太精） 面试经验 目前，小王签订了物联网及智能家居方向的offer，2020年7月将去上有天堂下有苏杭的杭州打拼，一路上可能会很难，好在还可以认识很多有趣的人。 ！！！建议考研！！！ 目前阶段 补知识，博客会发一些好玩有趣的东西⊙▽⊙ 大四毕设准备中（==人体姿态==学习相关~） 图源：电影《芳华》片段 如果对之前的文章有异议，或优化，都可以留言私信，看见一定回。共同进步，加油！！ 文末彩蛋很多人问过，头像是不是本人；这里安利：我的女神： :) 韩孝周 :) :) 小王 :) 有人说我头大? 我第一个不服(ง •̀_•́)ง 共同进步！","categories":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.gitee.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.gitee.io/tags/%E7%94%9F%E6%B4%BB/"}],"author":"cungudafa"},{"title":"Hexo（sakura）引入fancybox图集和b站视频链接","slug":"Hexo（sakura）引入fancybox图集和b站视频链接","date":"2020-02-15T14:48:10.000Z","updated":"2020-02-17T12:32:58.107Z","comments":true,"path":"post/61cf.html","link":"","permalink":"https://cungudafa.gitee.io/post/61cf.html","excerpt":"","text":"本文因为hexo格式原因，会吃掉视频和图片，完整博文点击这里查看 参考：hexo-sakura主题配置–hojun 一、在Hexo中插入哔哩哔哩视频 效果： 步骤： 个人插件hexo-tag-bili中文文档，用来在文章或单页面中插入B站外链视频 2.1安装 npm i hexo-tag-bili --save 2.2在Hexo博客的文章或者单页面中使用以下标签语法插入视频 {% bili video_id %} 或 {% bili video_id page %} 注意是：视频id和页数 例如： 如果视频网址如：https://www.bilibili.com/video/==av24897960==在文章中插入的标签语法为：=={% bili 24897960 %}== 如果视频网址如（第二页）：https://www.bilibili.com/video/==av24897960/?p=2==在文章中插入的标签语法为：=={% bili 24897960 2 %}== 原理：把视频id和页数转换为视频帧插入html中： &lt;iframe src=&quot;//player.bilibili.com/player.html?aid=24897960&amp;amp;page=2&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;&quot; style=&quot;position:absolute; width:100%;height:100%; left:0;top:0&quot;&gt;&lt;/iframe&gt; 二、在Hexo中插入fancybox图片查看 效果： 步骤： fancybox官网 hojun大佬制作fancybox插件时的记录视频 有兴趣的话可以看看，暴力抄袭者可以直接看后文。 hexo-tag-fancybox_img插件使用说明 2.1安装： npm i hexo-tag-fancybox_img --save （fancybox是类jQuery语言，为了避免jQuery使用与fancybox冲突需要在主题的head.ejs中引入三句css和js） （比较方便的是：在sakura主题中自带了fancybox.css和js） 2.2用法：在Hexo博客的文章或者单页面中使用以下标签语法插入图片以及描述{% fb_img src [caption] %} (图集名称+路径+图片命名) 举例：现有图片路径https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg{% gallery https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg sakura %} 原理就是把以上转换为图片，再加上data-fancybox属性，即可显示图集： &lt;a data-fancybox=&quot;gallery&quot; href=&quot;https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg&quot;&gt;&lt;/a&gt; &lt;a data-fancybox=&quot;gallery&quot; href=&quot;https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg&quot;&gt;&lt;/a&gt; 三、总结视频用：https://www.bilibili.com/video/av24897960（仅限哔哩哔哩） {% bili 24897960 %}图片图集用： {% fb_img https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg sakura %}","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"图集","slug":"图集","permalink":"https://cungudafa.gitee.io/tags/%E5%9B%BE%E9%9B%86/"},{"name":"悦读","slug":"悦读","permalink":"https://cungudafa.gitee.io/tags/%E6%82%A6%E8%AF%BB/"}],"author":"姑"},{"title":"Hexo（sakura）主题Mashiro大佬同款LOGO修改方法","slug":"Hexo（sakura）主题Mashiro大佬同款LOGO修改方法","date":"2020-02-15T10:31:10.000Z","updated":"2020-02-17T11:23:16.671Z","comments":true,"path":"post/58d.html","link":"","permalink":"https://cungudafa.gitee.io/post/58d.html","excerpt":"","text":"sakura主题Mishiro大佬的博客：樱花家的白猫本文转载于雾时之森，稍加修改。 首先找到一款你想要的字体，我这里用的是 kitty原始猫咪中文智能手机字体。由于中文字体包都很大不利于WEB环境，这里我们需要使用 Fontmin 从字体包里提取出我们要使用的字体。 下载 Fontmin客户端 和 你要用的字体包 挑选出需要的字：（字体包提前重命名为logo） 生成简要型字体样式 在themes\\sakura\\source\\fonts\\下新建文件夹LOGO，文件复制到此处 在文件themes\\sakura\\layout\\_partial\\head.ejs合适位置添加： &lt;!-- 自定义logo --&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/logo.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/fonts/LOGO/logo.css&quot;&gt; 修改文件themes\\sakura\\layout\\_partial\\header.ejs第4-11行：修改后： &lt;span class=&quot;site-title&quot;&gt; &lt;span class=&quot;logolink logo&quot;&gt; &lt;a href=&quot;/&quot;&gt; &lt;ruby&gt; &lt;span class=&quot;sakuraso&quot;&gt;姑&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;の&lt;/span&gt; &lt;span class=&quot;shironeko&quot;&gt;小屋&lt;/span&gt; &lt;rp&gt;&lt;/rp&gt; &lt;rt class=&quot;logo&quot;&gt;&lt;%= theme.prefixName %&gt;&lt;/rt&gt; &lt;rp&gt;&lt;/rp&gt; &lt;/ruby&gt; &lt;/a&gt; &lt;/span&gt; &lt;/span&gt; 在css下新建动画效果：（注意这是两个不同的文件哦，之前在head都引入过了。） .logo { font-family: &#39;logo&#39;, &#39;Merriweather Sans&#39;, Helvetica, Tahoma, Arial, &#39;PingFang SC&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, &#39;WenQuanYi Micro Hei&#39;, sans-serif; } .logolink .sakuraso { background-color: rgba(255, 255, 255, .5); border-radius: 5px; color: #464646; height: auto; line-height: 25px; margin-right: 0; padding-bottom: 0px; padding-top: 1px; text-size-adjust: 100%; width: auto } .logolink a:hover .sakuraso { background-color: orange; color: #fff; } .logolink a:hover .shironeko, .logolink a:hover rt { color: orange; } .logolink.logo a { color: #464646; float: left; font-size: 25px; font-weight: 800; height: 56px; line-height: 56px; padding-left: 6px; padding-right: 15px; padding-top: 11px; text-decoration-line: none; } .logolink.logo .sakuraso,.logolink.logo .no { font-size: 25px; border-radius: 9px; padding-bottom: 2px; padding-top: 5px; } .logolink.logo .no { display: inline-block; margin-left: 5px; } .logolink a:hover .no { -webkit-animation: spin 1.5s linear infinite; animation: spin 1.5s linear infinite; } .logolink ruby { ruby-position: under; -webkit-ruby-position: after; } .logolink ruby rt { font-size: 12px; transform: translateY(-15px); opacity: 0; transition-property: opacity; transition-duration: 0.5s, 0.5s; } .logolink a:hover ruby rt { opacity: 1 } 运行效果： 欢迎访问我的博客：https://cungudafa.gitee.io","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://cungudafa.gitee.io/tags/%E5%89%8D%E7%AB%AF/"}],"author":"cungudafa"},{"title":"Hexo-neat插件优化提升访问效率","slug":"Hexo-neat插件优化提升访问效率","date":"2020-02-15T08:06:23.000Z","updated":"2020-02-17T03:25:34.384Z","comments":true,"path":"post/733a.html","link":"","permalink":"https://cungudafa.gitee.io/post/733a.html","excerpt":"","text":"一、neat插件简介对于任何一个网站来说，优化页面的访问速度是必须的，个人来说，只要加载页面十秒以上或长时间处于空白或加载状态，我会立刻关掉此页面的。你又能容忍几秒呢？ 问：那么怎么提高hexo这个静态博客的页面加载速度呢？ 答： 可以从以下的几个方面去入手： 将js渲染文件尽可能放置到（&lt;/body&gt;之前），因为html页面是自上而下（阻塞式）加载的，如果放在（&lt;/header&gt;前）会渲染完页面再显示内容，渲染画面是很费时的。 尽量避免去引用访问速度非常低下的cdn或者图片，可以改用访问速度更快的cdn，或者将难以迅速加载的图片保存到自己的站点目录下，以免在加载图片时耗费了大量的时间，最后还加载不出来。 Github配置cdn和私人picGo图床教程 对页面的静态资源进行压缩，包括css、js和html等文件。我们自己添加的css和js文件为了可读性，往往会有很多换行和空格，这些对于浏览器来无用，甚至还会降低渲染页面的速度。至于html文件，由于Markdown转成html的bug，会导致页面存在大量的空白，如果你查看下页面的源代码，就会发现这些大量的空白符，十分难看。这也会造成页面渲染的性能问题。 二、使用教程 安装插件 npm install hexo-neat --save 主配置_config.yml文末添加：（其中exclude板块是特别添加，针对你的静态资源进行筛选，筛选规则见下文易错配置） # hexo-neat # md博文压缩 neat_enable: true # 压缩html（ejs，swig等也属于html格式片段） neat_html: enable: true exclude: # 压缩css neat_css: enable: true exclude: - &#39;*.min.css&#39; - &#39;**/*.min.css&#39; - &#39;jquery.fancybox.min.css&#39; - &#39;**/live2d-widget/waifu.css&#39; # 压缩js neat_js: enable: true mangle: true #打印日志 output: compress: exclude: #排除文件 - &#39;*.min.js&#39; - &#39;**/*.min.js&#39; - &#39;jquery.fancybox.min.js&#39; - &#39;**/live2d-widget/*.js&#39; - &#39;**/live2d-widget/*.min.js&#39; 运行（因为mangle: true #打印日志,我们能看到运行流程）【INFO neat the html:xxxx.md】先压缩md文件的换行和空白 注意md中不要带特殊标签&lt;&gt;的颜表情&lt;(￣ˇ￣)/、&lt;(ˉ^ˉ)&gt;等，因为压缩转换为html后会变成&lt;div &gt;&lt; (￣ˇ￣)/&lt;/div&gt;，转义失败！！！问：我是怎么发现的呢？ 答：这在sakura主题中，原作者的source\\links\\index.md中就用了颜文字&lt;(￣︶￣)，微微一笑，挖坑，这里补坑了啊。 【INFO neat the html: xxxx.ejs】压缩ejs配置文件（这里也有很多换行和空格），这是html片段格式文件。如果配置了RSS订阅，这里还会atom.xml生成;本文里它无关紧要了。现在是neat工作最重要的部分之一：压缩js和css。这一部分最重要，因为sakura主题作者留了几个坑，不同引入js也需要灵活的设置exclude。最后是（hexo generate）将md文章转换成html语言格式的过程。 三、灵活exclude配置（易错） md压缩、html压缩 已经压缩过的css和js不用压缩：剔除exclude（*.min.css和 * .min.js） 特殊名字xx.xx.min.js的需要单独列出来（这里引用了fancybox图片弹窗效果，从压缩名单里单独剔除） 深目录的，需要单独列出来：（这里我引用了live2d看板娘的动画）单用**/*.min.js深目录跳过已压缩文件不行，这部分只好全部跳过压缩了： 如果你和我一样用的sakura主题，那么在themes\\sakura\\layout\\_partial\\aplayer.ejs中，在34和35行中间添加一个&gt;反括号。 &lt;meting-js &lt;% for (i in theme.aplayer) {%&gt; &lt;%- i %&gt;=&quot;&lt;%- theme.aplayer[i] %&gt;&quot; &lt;% } %&gt; &gt; &lt;/meting-js&gt;说明一下，这是aplayer音乐的标签&lt;meting-js i =&quot;aplayer[i] &quot;&gt; &lt;/meting-js&gt; 一共有i项歌单，循环打印歌单信息，对，sakura原作者忘记加&lt;/meting-js&gt;前的反括号了。 不加报错如下： 大概就是这样啦，在日志里找找错误的点，修改一下就好了。现在压缩后的页面加载速度起飞了呢。~","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/tags/%E6%8A%80%E6%9C%AF/"},{"name":"web","slug":"web","permalink":"https://cungudafa.gitee.io/tags/web/"}],"author":"姑"},{"title":"Github+PicGo配置私人图床","slug":"Github+PicGo配置私人图床","date":"2020-02-14T12:50:10.000Z","updated":"2020-02-15T08:39:29.524Z","comments":true,"path":"post/2103.html","link":"","permalink":"https://cungudafa.gitee.io/post/2103.html","excerpt":"","text":"一、什么是图床图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。 简单来说就是：在文章中引用指定网址显示图片。平常我们都是在网络上复制粘贴网络图片的地址，太out了，如何快速引用本地图片呢？？？ 二、配置教程1.获取Token github云端仓库位置： 延续上一次cdn的仓库失败。（建议新建一个仓库，发布过release版本号的仓库会使用异常） 进入设置Setting 选择开发者设置Developer setting 选择个人数据帧Personal access tokens，生成新的数据帧 Generate new token 命名为picgo（图床），赋予仓库权限 最后点击Generate token即可看到显示的token页面，==它只会显示一次，关闭页面后再打开这个页面就不会显示了。== 复制token值粘贴到文本文档中，先保存下来，后面配置PicGo要用到。2.本地安装图片上传工具 首先下载PicGo，图片上传工具PicGo下载地址:https://github.com/Molunerfinn/PicGo/releases 如果下载速度非常慢的话，备用地址：传送门 密钥：n5wu 安装配置PicGo 设定仓库名：这个是刚刚第一步所新建仓库的名称，我的为cdn，此处填写格式username/repo。 设定分支名：master，采用默认分支即可 设定Token：此处填写上一步得到的Token，添加到输入框即可。 指定存储路径：自定义，例：images/，相当于在刚刚新建的仓库下新建了一个文件夹。 设定自定义域名：格式：https://cdn.jsdelivr.net/gh/username/repo，username为GitHub用户名，repo为新建的仓库，用于存储图片 三、上传方法上传后，云端图片显示：5. 使用方法：选择相册，可复制、修改链接、删除图片（不能删除github上的图片，需要手动删除）：最终在md使用链接时出现错误，原因是我的cdn发布过release版本号，最有效的解决办法就是新建一个仓库，重新配置本地picgo的名称就好，此时相册显示也正常。md显预览也正常。ps.在vscode中点击右上角可分屏查看，快捷键ctrl+shift+v可快速预览Markdown文章。","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"私人图床","slug":"私人图床","permalink":"https://cungudafa.gitee.io/tags/%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/"}],"author":"cungudafa"},{"title":"Hexo（sakura）文章增添字数统计和阅读时长功能","slug":"Hexo（sakura）增添字数统计和阅读时长功能","date":"2020-02-14T05:14:10.000Z","updated":"2020-02-17T11:23:34.158Z","comments":true,"path":"post/8c48.html","link":"","permalink":"https://cungudafa.gitee.io/post/8c48.html","excerpt":"","text":"一、文章增添字数统计和阅读时长功能1. 安装hexo-wordcount先安装相关插件，终端输入以下命令： npm install hexo-wordcount --save2. 文件配置(3步) 2.1在theme\\sakura\\layout\\_partial\\下创建==word.ejs==文件（显示样式）： &lt;div style=&quot;margin-top:10px;&quot;&gt; &lt;span class=&quot;post-time&quot;&gt; &lt;span class=&quot;post-meta-item-icon&quot;&gt; &lt;i class=&quot;fa fa-keyboard-o&quot;&gt;&lt;/i&gt; &lt;span class=&quot;post-meta-item-text&quot;&gt; 字数统计: &lt;/span&gt; &lt;!-- 安装插件npm install hexo-wordcount --save --&gt; &lt;span class=&quot;post-count&quot;&gt;&lt;%= wordcount(post.content) %&gt;字&lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&quot;post-time&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;span class=&quot;post-meta-item-icon&quot;&gt; &lt;i class=&quot;fa fa-hourglass-half&quot;&gt;&lt;/i&gt; &lt;span class=&quot;post-meta-item-text&quot;&gt; 阅读时长: &lt;/span&gt; &lt;span class=&quot;post-count&quot;&gt;&lt;%= min2read(post.content) %&gt;分&lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/div&gt;2.2在\\themes\\sakura\\layout\\_widget\\==common-article.ejs==文章标题中合适位置添加：（添加在&lt;/head&gt;标签前） &lt;!-- 开始添加字数统计--&gt; &lt;% if(theme.word_count &amp;&amp; !post.no_word_count){%&gt; &lt;%- partial(&#39;_partial/word&#39;) %&gt; &lt;% } %&gt; &lt;!-- 添加完成 --&gt;2.3在MyWeb\\themes\\sakura\\_config.yml配置文末添加： # 是否开启字数统计 #不需要使用，直接设置值为false，或注释掉 word_count: true 运行效果由图片所示 二、修复作者头像和链接显示问题在_post目录写md文章时，应该加上作者信息：author（名称），authorLink（链接），avatar（头像），authorAbout（简介） 在\\themes\\sakura\\layout\\_widget\\==common-article.ejs==文章标题中可修改样式： author: 姑 authorLink: https://cungudafa.gitee.io avatar: https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg authorAbout: 姑，一个学习记录者 title: Hexo增添字数统计和阅读时长功能 date: 2020-02-14 13:14:10 tag: wordcount categories: 技术 comment: true description: 统计全文字数，分析阅读时长。 photos:","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://cungudafa.gitee.io/tags/%E6%96%87%E7%AB%A0/"}],"author":"姑"},{"title":"2020年2月4日情人节随笔","slug":"2020年2月4日情人节随笔","date":"2020-02-13T14:59:10.000Z","updated":"2020-02-17T03:25:10.843Z","comments":true,"path":"post/ff18.html","link":"","permalink":"https://cungudafa.gitee.io/post/ff18.html","excerpt":"","text":"疫情期间，姑已经在家呆了二十天了，可是为国家省心的好孩子。 明天就是2月14号了，如何度过这个西方的浪漫节日呢？ 当然，不建议出门聚会哦！ 划重点： 你会如何选择在家度过美好的一天呢？ 美食party（自制火锅，家庭烤肉)(烘焙蛋糕，布丁甜点…） 甜甜的韩剧/美剧《爱的迫降》–蝉联电视剧话题性冠军一个月！ 点击观看第一集 在家法则：能躺下就不要坐着，煲剧ing~ 2020年2月13日 22:55:30 姑 对你说: 晚安海绵宝宝，晚安小蜗，晚安派大星，晚安章鱼哥，晚安珊迪，晚安蟹老板，晚安皮老板，晚安泡芙老师，晚安唔西迪西，晚安玛卡巴卡，晚安依古比古，晚安汤姆布利波，晚安小点点，晚安叮叮车，晚安哈呼呼，晚安小仙女。 ​​​","categories":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.gitee.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://cungudafa.gitee.io/tags/%E9%9A%8F%E7%AC%94/"}],"author":"cungudafa"},{"title":"Hexo（sakura）背景动画、壁纸、通讯栏（自定义样式）","slug":"Hexo（sakura）背景动画、壁纸、通讯栏（自定义样式）","date":"2020-02-13T10:19:10.000Z","updated":"2020-02-17T11:24:12.046Z","comments":true,"path":"post/771.html","link":"","permalink":"https://cungudafa.gitee.io/post/771.html","excerpt":"","text":"一、丰富背景样式1. 浮层样式集合（花瓣飘落、文字，爱心，连线，飘动的彩带）修改\\Sakura\\layout\\_partial目录下的==footer.ejs== 说明：加在footer而不是header是提高页面加载速度，以下cdn都引用于walllweap大神的素材库 &lt;!--浏览器搞笑标题--&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/wallleap/cdn@latest/js/hititle.js&quot;&gt;&lt;/script&gt; &lt;!-- 🌸飘落 --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/wallleap/cdn@latest/js/sakura.js&quot;&gt;&lt;/script&gt; &lt;!-- 雪花飘落 --&gt; &lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/snow1.js&quot;&gt;&lt;/script&gt; --&gt; &lt;!-- // 文字 --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/wallleap/cdn/js/shehuizhuyi.js&quot;&gt;&lt;/script&gt; &lt;!-- // 烟花 --&gt; &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/fireworks.js&quot;&gt;&lt;/script&gt; &lt;!-- // 星星跟随坠落 --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/cursor.js&quot;&gt;&lt;/script&gt; &lt;!-- // 爱心 --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/wallleap/cdn/js/love.js&quot;&gt;&lt;/script&gt; &lt;!-- // 连线 --&gt; &lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/gh/wallleap/cdn/js/canvas-nest.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js&quot;&gt;&lt;/script&gt; --&gt; &lt;!-- 样式二（飘动的彩带） --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/gh/wallleap/cdn@latest/js/piao.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;!--背景切换--&gt; &lt;script src=&quot;//instant.page/3.0.0&quot; type=&quot;module&quot; defer integrity=&quot;sha384-OeDn4XE77tdHo8pGtE1apMPmAipjoxUQ++eeJa6EtJCfHlvijigWiJpD7VDPWXV1&quot;&gt;&lt;/script&gt;2. 背景切换和访问量统计背景切换（pages功能）和访问量统计（不蒜子网页计数）不蒜子网页计数使用教程： &gt;http://busuanzi.ibruce.info/ ``` &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; ```&lt;footer id=&quot;colophon&quot; class=&quot;site-footer&quot; role=&quot;contentinfo&quot;&gt; &lt;div class=&quot;site-info&quot;&gt; &lt;div class=&quot;footertext&quot;&gt; 。。。。。 &lt;/div&gt; &lt;div class=&quot;footer-device&quot;&gt; &lt;p style=&quot;font-family: &#39;Ubuntu&#39;, sans-serif;&quot;&gt; &lt;span style=&quot;color: #b9b9b9;&quot;&gt;Theme &lt;a href=&quot;https://github.com/honjun/hexo-theme-sakura&quot; target=&quot;_blank&quot; style=&quot;color: #b9b9b9;;text-decoration: underline dotted rgba(0, 0, 0, .1);&quot;&gt;Sakura&lt;/a&gt; &lt;i class=&quot;iconfont icon-sakura rotating&quot; style=&quot;color: #ffc0cb;display:inline-block&quot;&gt;&lt;/i&gt; by &lt;a href=&quot;https://2heng.xin/&quot; target=&quot;_blank&quot; style=&quot;color: #b9b9b9;;text-decoration: underline dotted rgba(0, 0, 0, .1);&quot;&gt;Mashiro&lt;/a&gt;&amp;&lt;a href=&quot;https://www.hojun.cn/&quot; target=&quot;_blank&quot; style=&quot;color: #b9b9b9;;text-decoration: underline dotted rgba(0, 0, 0, .1);&quot;&gt;Hojun&lt;/a&gt;, Powered by Hexo, Hosted by Coding Pages&lt;/a&gt; &lt;/span&gt; &lt;/p&gt; &lt;/div&gt; &lt;!-- &lt;i class=&quot;fa fa-fire&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; --&gt; &lt;span style=&quot;color: #ccc;padding-left: 20px;&quot;&gt; &lt;i class=&quot;fa fa-clock-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; &lt;span id=&quot;time&quot; align=&quot;center&quot;&gt;载入时间中...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime() { var grt= new Date(&quot;2020-02-11 17:20:00&quot;);//在此处修改你的建站时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = &quot;0&quot; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = &quot;0&quot; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = &quot;0&quot; + snum;} document.getElementById(&quot;time&quot;).innerHTML = &quot;小站已经苟活 &quot;+ dnum +&quot; 天 &quot;+hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; } setInterval(&quot;createtime()&quot;,250); &lt;/script&gt; &lt;!--不蒜子网页计数器--&gt; &lt;span style=&quot;color:#ccc;padding-left: 20px;&quot;&gt;&lt;i class=&quot;fa fa-eye&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;访问量: &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; &lt;/span&gt; &lt;/div&gt;&lt;!-- .site-info --&gt; &lt;!--壁纸切换--&gt; &lt;div class=&quot;skin-menu no-select&quot; id=&quot;mainskin&quot; style=&quot;position: fixed&quot;&gt; &lt;div class=&quot;theme-controls row-container&quot;&gt; &lt;ul class=&quot;menu-list&quot;&gt; &lt;li id=&quot;white-bg&quot;&gt; &lt;i class=&quot;fa fa-television&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;sakura-bg&quot;&gt; &lt;i class=&quot;iconfont icon-sakura&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;gribs-bg&quot;&gt; &lt;i class=&quot;fa fa-slack&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;KAdots-bg&quot;&gt; &lt;i class=&quot;iconfont icon-dots&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;totem-bg&quot;&gt; &lt;i class=&quot;fa fa-optin-monster&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;pixiv-bg&quot;&gt; &lt;i class=&quot;iconfont icon-pixiv&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;bing-bg&quot;&gt; &lt;i class=&quot;iconfont icon-bing&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;dark-bg&quot;&gt; &lt;i class=&quot;fa fa-moon-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;font-family-controls row-container&quot;&gt; &lt;button type=&quot;button&quot; class=&quot;control-btn-serif selected&quot; data-mode=&quot;serif&quot; onclick=&quot;mashiro_global.font_control.change_font()&quot;&gt;Serif&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;control-btn-sans-serif&quot; data-mode=&quot;sans-serif&quot; onclick=&quot;mashiro_global.font_control.change_font()&quot;&gt;Sans Serif&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;canvas id=&quot;night-mode-cover&quot;&gt;&lt;/canvas&gt; &lt;div class=&quot;changeSkin-gear no-select&quot;&gt; &lt;div class=&quot;keys&quot; id=&quot;setbtn&quot;&gt; &lt;span id=&quot;open-skinMenu&quot;&gt; 切换壁纸 | SCHEME TOOL &amp;nbsp;&lt;i class=&quot;iconfont icon-gear inline-block rotating&quot;&gt;&lt;/i&gt; &lt;/span&gt;&lt;/div&gt; &lt;/div&gt;&lt;!--skin.end--&gt; &lt;/footer&gt; 二、在线通讯Hexo+DaoVoice实现网页在线通讯功能 首先在DaoVoice官网上注册一个账号 在应用设置，安装到网站，仅匿名用户下获得id，我们是采用js语言，选择对应复制修改界面样式： 在sakura\\_config.yml中末尾加上： # Online contact ##在线聊天 daovoice: true daovoice_app_id: f6b2a0b1 ##这里替换成你DaoVoice上的appid 在\\sakura\\layout\\_partial目录下的==footer.ejs==末尾加上：(依然是加快网站访问速度，将head的引用加在了foot中) &lt;% if (theme.daovoice){ %&gt; &lt;script&gt;(function(i,s,o,g,r,a,m){i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)})(window,document,&quot;script&quot;,(&#39;https:&#39; == document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;//widget.daovoice.io/widget/f6b2a0b1.js&quot;,&quot;daovoice&quot;) daovoice(&#39;init&#39;, { app_id: &quot;&lt;%= theme.daovoice_app_id%&gt;&quot; }); daovoice(&#39;update&#39;); &lt;/script&gt; &lt;% } %&gt; 不同的主题配置格式和位置有所不同，还要注意其中的id数字。 三连访问： hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 发送信息： 站内查看访问者具体信息： 绑定的邮箱会接收到相应信息： 绑定微信（在daovoice的右上角）关注公众号后打开小程序，就可以实时收发消息，有新的消息也会通过微信通知。 演示页面：https://cungudafa.gitee.io/","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://cungudafa.gitee.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"动画","slug":"动画","permalink":"https://cungudafa.gitee.io/tags/%E5%8A%A8%E7%94%BB/"}],"author":"cungudafa"},{"title":"Botui搭建js聊天机器人","slug":"Botui搭建js聊天机器人","date":"2020-02-13T10:14:10.000Z","updated":"2020-02-19T05:23:30.256Z","comments":true,"path":"post/81c1.html","link":"","permalink":"https://cungudafa.gitee.io/post/81c1.html","excerpt":"","text":"一、Botui简介一款自动回复文字、图片、视频的JS聊天机器人框架BotUI，可以自由设置多种选项、触发关键词、输入框等内容，聊天内容或范围也可以自由设置，回复内容可以是文字、图片（GIF亦可）、视频，我在博客中引用了此框架。可点击查看me？试试看。 项目地址：https://botui.org 二、使用教程Botui是结合Vue和Botui.js的自动回复界面：模拟对话：在html中使用直接引入vue和js即可，使用教程；这里我是基于Hexo界面（Sakura）主题，融合vue到botui.js中了： 在主目录\\source\\下新建目录about，新建index.md（sakura特点是将index.md文件直接转换成about\\index.html）index.md关键代码是： &lt;bot-ui&gt;&lt;/botui&gt; &lt;script src=&quot;/js/botui.js&quot;&gt;&lt;/script&gt; &lt;script&gt; bot_ui_ini() &lt;/script&gt;完整代码： --- title: about date: 2020-2-12 22:14:36 keywords: 关于 description: comments: false photos: https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/about.jpg --- {% raw %} [さくら荘のcungudafa] 与&nbsp; cungudafa&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini() {% endraw %} 修改引入的sakura/js/botui.js即可修改对话 代码片较长，这里直接在gitee仓库中查看： /js/botui.js 之前用sakura原版botui.js,出现了编码格式不一致中文乱码的情况，后来修改后手动保存为UTF-8编码格式，已解决问题。 三、演示效果https://cungudafa.gitee.io/about/","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"自动回复机器人","slug":"自动回复机器人","permalink":"https://cungudafa.gitee.io/tags/%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E6%9C%BA%E5%99%A8%E4%BA%BA/"}],"author":"姑"},{"title":"Hexo（sakura）添加live2d看板动画（可对话，换装互动）","slug":"Hexo（sakura）添加live2d看板动画（可对话，换装互动）","date":"2020-02-12T12:18:10.000Z","updated":"2020-02-17T11:23:50.326Z","comments":true,"path":"post/d214.html","link":"","permalink":"https://cungudafa.gitee.io/post/d214.html","excerpt":"","text":"一、live2d简介Live2D是一种应用于电子游戏的绘图渲染技术，技术由日本Cybernoids公司开发。通过一系列的连续图像和人物建模来生成一种类似三维模型的二维图像，对于以动画风格为主的冒险游戏来说非常有用，缺点是Live 2D人物无法大幅度转身，开发商正设法让该技术可显示360度图像。 示例：原博大大官网根据鼠标热键进行互动) 二、使用教程 hexo-helper-live2d中文文档 下载（博客主目录，git bash here） npm install --save hexo-helper-live2d 下载模型大模型：https://github.com/summerscar/live2dDemo小模型：https://github.com/EYHN/hexo-helper-live2d 在主目录下新建目录live2d_models/,将需要的模型复制到此处 请向主目录的 _config.yml 文件末尾粘贴： live2d: ##自定义看板娘动画 enable: true scriptFrom: local ##主目录 pluginRootPath: live2d_models/ ##模型目录 pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-koharu ##对应的模型名称 display: position: left ##居右 width: 80 ##宽度 height: 120 ##高度 mobile: show: true ##移动端是否显示 react: opacity: 0.7 发布hexook！简单版的看板娘弄好了，接下来是加强版： 换装互动：https://github.com/stevenjoezhang/live2d-widget 三、加强版看板娘 卸载live2d npm uninstall hexo-helper-live2d 下载大神优化版live2d-widget；其次， 在主目录\\themes\\sakura\\source目录下新建目录==live2d-widget==；最后，将下载内容解压到该目录下。 修改==autoload.js==文件，将大神路径改为绝对路径说明：这个绝对路径是编译后 根目录 位置在themes/sakura/source// 注意：live2d_path 参数应使用绝对路径 //const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;; const live2d_path = &quot;/live2d-widget/&quot;; 修改\\MyWeb\\themes\\sakura\\layout\\_partial目录下的==head.ejs==&lt;!--自定义看板娘--&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;/&gt; next主题需要修改两处，可参考这里。 在\\MyWeb\\_config.yml文末添加 live2d: ##自定义看板娘动画 enable: true运行效果： 想修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js 、 waifu-tips.json 和 waifu.css。其实看板娘可以侧边隐藏，对样本的修改影响也不大。","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"动画","slug":"动画","permalink":"https://cungudafa.gitee.io/tags/%E5%8A%A8%E7%94%BB/"}],"author":"cungudafa"},{"title":"Ps抠图（小白教程）","slug":"Ps抠图（小白教程）","date":"2020-02-12T09:14:10.000Z","updated":"2020-02-23T06:13:06.632Z","comments":true,"path":"post/2f1b.html","link":"","permalink":"https://cungudafa.gitee.io/post/2f1b.html","excerpt":"","text":"今天看见一个帖子有萌新😳问：有必要掌握Ps和Pr技能吗？答：我认为一些基本技能：Ps抠图，Pr剪切视频音频处理是很有必要的。 在日常生活中，无论是 PPT制作 还是 前端 使用中，png格式的透明背景图片是很有必要的。 请评价一下如下两张图的视觉感受： 当然，大多数人都会觉得第二张图的视觉效果更好一点。 问：为什么非要png格式的图片呢？ 答： png是一种无损压缩的位图片形格式。其设计目的是为了替代GIF和TIFF文件格式，同时增加一些GIF文件格式所不具备的特性。 png格式是非失真性压缩的，允许使用类似于GIF格式的调色板技术，支持真彩色图像，并具备阿尔法通道（半透明）等特性。 png占内存多，jpg占内存少 png是无损压缩，jpg则牺牲了图片质量 在ps中png可为透明背景，而jpg显然是不行的 PNG格式可编辑。如图片中有字体等，可利用PS再做更改。JPG格式不可编辑。 对于两种格式的解析度,PNG高于JPG PNG不适用任何场合，因为它的体积很大，不利用显示，完全用于编辑者作为以后更改图片时做的备份之用。JPG格式用于很多场合。 下面是Ps演示教程，大佬可以跳过，小白可以看看😛 演示图（任意格式）： 选中图片，右键选择用Ps打开——Ps版本（2015版） 在左侧找到魔法笔，右键可以选择快速选择工具，上方可以选择选择+和选择- 抠图（快速选择工具勾选我们需要的轮廓）用上方可以选择-——剔除多余的部分 鼠标长按可连续勾选，每次鼠标勾选完毕后，取消最新部分勾选快捷键ctrl加z 键盘ctrl和+将图片放大，剔除和补充细节部分 百万年薪抠图师就是扣细节：🤣根据需要细细的抠图，慢工出细活😎 ctrl加-回到原始图像大小，鼠标右键选择通过拷贝的图层在左侧可以看到多出一个图层1，取消掉背景图层的可视化 预览抠图，如果还不满意，打开背景可视化，ctrl加z直接回到抠图模式，补充或删减 tips：可以右键选择羽化，可以调整抠图轮廓的边缘渐变透明，使抠图更加柔和。 在右侧选中最终满意的图层，右键选择快速导出为PNG 最终效果，棒棒哒！(～￣▽￣)～","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Ps","slug":"Ps","permalink":"https://cungudafa.gitee.io/tags/Ps/"}],"author":"cungudafa"},{"title":"Valine - 一款快速、简洁且高效的无后端评论系统","slug":"Valine - 一款快速、简洁且高效的无后端评论系统。","date":"2020-02-12T09:14:10.000Z","updated":"2020-02-17T03:26:29.050Z","comments":true,"path":"post/45da.html","link":"","permalink":"https://cungudafa.gitee.io/post/45da.html","excerpt":"","text":"@[TOC] 一、Valine简介Valine - 一款快速、简洁且高效的无后端评论系统。Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。 理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo、Ghost 等博客程序在使用Valine。更新-自定义样式： 二、使用方法1.获取 APP ID 和 APP KEY 在Leancloud用邮箱注册登录需要实名制认证，邮箱认证。 创建Valine应用命名为 Valine，方案选择开发版，即可以在一定的用量限制下免费运行。 进入创建好的应用&gt;设置&gt;选择应用 Key，就能获取到 App ID 和 App Key。 为了您的数据安全，请填写应用&gt;设置&gt;安全设置中的Web 安全域名： 2.配置Sakura 编辑 sakura/_config.yml，找到对应的模块，修改配置如下： valine: true v_appId: cBzr9TtJ0xY0s6f3H8bpmB3M-gzGzoHsz v_appKey: 3opMyv2Vyx3mHa0IWitRGSoi 重新发布Hexo测试进入helloworld文章，发布评论：leancode也会相应记录一条数据： 深度美化MyWeb\\themes\\sakura\\layout\\_partial目录下，修改comment.ejs:原样式： &lt;% if (theme.valine &amp;&amp; post.comments) { %&gt; &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt; &lt;script&gt; window.onload = function(){ var valine = new Valine(); valine.init({ el: &#39;#vcomments&#39;, appId: &quot;&lt;%= theme.v_appId %&gt;&quot;, appKey: &quot;&lt;%= theme.v_appKey %&gt;&quot;, path: window.location.pathname, placeholder: &quot;你是我一生只会遇见一次的惊喜 ...&quot; }) } &lt;/script&gt; &lt;% } %&gt; 可根据需要修改。 valine的原作者暂时还没有对hexo（sakura）主题进行配置， 这里是原作者已更新的Hexo支持的主题 三、sakura配置valine1. 基本使用 以下配置全参考于：valine原作者配置hexo-theme-yilia主题 在前两步的基础上，修改sakura主题配置：（加了enable标志和其他属性）（之前一直用mm头像，现在改为小怪物） # Valine ##极简留言功能 # You can get your appid and appkey from https://leancloud.cn # more info please open https://valine.js.org valine: enable: true ##打开valine评论功能true appId: cBzr9TtJ0xY0s6f3H8bpmB3M-gzGzoHsz appKey: 3opMyv2Vyx3mHa0IWitRGSoi notify: false #评论mail回复提醒 verify: true #验证码 visitor: false #统计阅读量 avatar: monsterid # Gravatar style : mp/identicon/monsterid/wavatar/retro/hide guest_info: nick #,mail,link # custom comment header pageSize: 10 palaceholder: 你是我一生只会遇见一次的惊喜 # Comment Box placeholder 修改头部的声明：themes\\sakura\\layout\\_partial\\head.ejs（v_appId改为appId） mashiro_option.v_appId = &quot;&lt;%= theme.valine.appId %&gt;&quot;;// mashiro_option.v_appKey = &quot;&lt;%= theme.valine.appKey %&gt;&quot;;修改样式：themes\\sakura\\layout\\_partial\\comment.ejs（注意判断标准为theme.valine.enable，加入了邮箱审核标准，未填写邮箱不能评论。） &lt;% if (theme.valine.enable &amp;&amp; post.comments) { %&gt; &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt; &lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Valine({ el: &#39;#vcomments&#39;, appId: &quot;&lt;%= theme.valine.appId %&gt;&quot;, appKey: &quot;&lt;%= theme.valine.appKey %&gt;&quot;, path: window.location.pathname, notify: false, verify: true, avatar: &#39;monsterid&#39;,//小怪物头像 placeholder: &quot;你是我一生只会遇见一次的惊喜 ...&quot; }); document.body.addEventListener(&#39;click&#39;, function(e) { if (e.target.classList.contains(&#39;vsubmit&#39;)) { const email = document.querySelector(&#39;input[type=email]&#39;); const nick = document.querySelector(&#39;input[name=nick]&#39;); const reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/; if (!email.value || !nick.value || !reg.test(email.value)) { const str = `&lt;div class=&quot;valert txt-center&quot;&gt;&lt;div class=&quot;vtext&quot;&gt;请填写正确的昵称和邮箱！&lt;/div&gt;&lt;/div&gt;`; const vmark = document.querySelector(&#39;.vmark&#39;); vmark.innerHTML = str; vmark.style.display = &#39;block&#39;; setTimeout(function() { vmark.style.display = &#39;none&#39;; vmark.innerHTML = &#39;&#39;; }, 2500); } } }); &lt;/script&gt; &lt;% } %&gt;运行效果：自定义的邮箱审核机制：verify: true：自带验证机制： 2.修改头像其中未知名头像都是小怪物（==avatar: ‘monsterid’==），更多头像选择mp/identicon/monsterid/wavatar/retro/hide如何使用自定义头像呢？ Valine 目前使用的是Gravatar 作为评论列表头像。 请自行登录或注册Gravatar，然后修改自己的头像。 评论的时候，留下在Gravatar注册时所使用的邮箱即可。(任何gravator的网站，留邮箱即显示头像，全球化，很nice哦!) 附：在sakura主题中，themes\\sakura\\source\\js\\sakura-app.js第1100行也有类似部分；在head.ejs中，sakura作者注明过这段sakura-app.js作用于php，这里暂未使用，如果有需要用到时同样修改： 3.样式diy美化样式+今日诗词+修复评论框位置： 样式美化参考：https://immmmm.com/valine-diy（必须在Valin.js之后）可以先注释掉app.css中的样式（第7-14行，或者搜索veditor） 今日诗词是引入的一个接口，导入placeholder，参考今日诗词 （需要jQuery哦~） 修复评论框的位置：官方版本点击回复时都是跳回到页面上方的评论框进行回复，评论框是固定不动的，比较合理的是：点哪条的回复，评论框就显示在此条评论下方。避免页面跳上跳下。完整代码： &lt;% if (theme.valine.enable &amp;&amp; post.comments) { %&gt; &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt; &lt;!-- 先引入样式,从footer提前 --&gt; &lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt; &lt;!-- 评论框美化 --&gt; &lt;style&gt; .v .vwrap{padding: 0 0 44px;} .v .veditor{min-height: 10rem; background-image: url(https://cdn.jsdelivr.net/gh/cungudafa/img/images/girls2.png); background-size: contain; background-repeat: no-repeat; background-position: right; background-color: rgba(255,255,255,0); resize: none;} .v .vwrap .vedit{padding-top:20px;} .v .vwrap .vheader{width: 80%;bottom:0;position: absolute;background: #fff7f7f7;} .v .vinput{padding:10px 15px; text-align: center;} .v .vwrap .vheader .vinput{border-bottom:0px} .v .vwrap .vedit .vctrl{margin-top:-44px;right:0;position:absolute;margin-right:-3px;} .v .vwrap .vcontrol{position:absolute;right:0;bottom:0;width:20%;padding-top:0px;} .v .vwrap .vcontrol .col.col-20, .v .vwrap .vedit .vctrl span.vpreview-btn{display: none} .v .vwrap .vcontrol .col.col-80{width: 100%;} .v .vbtn.vsubmit{border-radius: 0;padding: 0;color: #fff;line-height: 44px;width:100%;border: none;background:#ff9999;} .v .vlist .vcard .vhead .vsys{background: #fff7f7f7;} @media screen and (max-width: 520px){ .v .vwrap .vheader .vinput{width: 33.33%;padding:10px 5px;} } &lt;/style&gt; &lt;script&gt; new Valine({ el: &#39;#vcomments&#39;, appId: &quot;&lt;%= theme.valine.appId %&gt;&quot;, appKey: &quot;&lt;%= theme.valine.appKey %&gt;&quot;, path: window.location.pathname, notify: false, verify: true, avatar: &#39;monsterid&#39;,//小怪物头像 placeholder: &quot;你是我一生只会遇见一次的惊喜 ...&quot; }); // 自定义邮箱审核规则 document.body.addEventListener(&#39;click&#39;, function(e) { if (e.target.classList.contains(&#39;vsubmit&#39;)) { const email = document.querySelector(&#39;input[type=email]&#39;); const nick = document.querySelector(&#39;input[name=nick]&#39;); const reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/; if (!email.value || !nick.value || !reg.test(email.value)) { const str = `&lt;div class=&quot;valert text-center&quot;&gt;&lt;div class=&quot;vtext&quot;&gt;请填写正确的昵称和邮箱！&lt;/div&gt;&lt;/div&gt;`; const vmark = document.querySelector(&#39;.vmark&#39;); vmark.innerHTML = str; vmark.style.display = &#39;block&#39;; setTimeout(function() { vmark.style.display = &#39;none&#39;; vmark.innerHTML = &#39;&#39;; }, 2500); } } }); // 点击回复直接评论,官方版本点击回复时都是跳回到页面上方的评论框进行回复，评论框是固定不动的 // 参考https://immmmm.com/valine-diy $(document).ready(function(){ //$(&#39;.vemoji-btn&#39;).text(&#39;😀&#39;); $(&quot;#vcomments&quot;).on(&#39;click&#39;, &#39;span.vat&#39;,function(){ $(this).parent(&#39;div.vmeta&#39;).next(&quot;div.vcontent&quot;).after($(&quot;div.vwrap&quot;)); $(&#39;textarea#veditor&#39;).focus(); }) }) &lt;/script&gt; &lt;!-- 今日诗词：随机返回一句古诗词名句的接口，宅到用来做 Valine 的 placeholder 显示内容 --&gt; &lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; jinrishici.load(function(result) { var jrsc_plac = result.data.content + &quot;\\n「&quot; + result.data.origin.title + &quot;」&quot; + result.data.origin.dynasty + &quot; · &quot; + result.data.origin.author document.getElementById(&quot;veditor&quot;).setAttribute(&quot;placeholder&quot;,jrsc_plac); }); &lt;/script&gt; &lt;% } %&gt;","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"评论","slug":"评论","permalink":"https://cungudafa.gitee.io/tags/%E8%AF%84%E8%AE%BA/"}],"author":"cungudafa"},{"title":"Github+jsDelivr搭建自己的免费cdn","slug":"Github+jsDelivr搭建自己的免费cdn","date":"2020-02-12T02:19:10.000Z","updated":"2020-02-17T03:25:20.885Z","comments":true,"path":"post/2a9.html","link":"","permalink":"https://cungudafa.gitee.io/post/2a9.html","excerpt":"","text":"一、简介CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。 放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。 二、内容存储1. 新建Github\\cdn仓库命名为cdn，公开访问权限获取仓库地址 2. 克隆仓库到本地在本地目录右键 Git Bash Here，执行以下命令： git clone https://github.com/cungudafa/cdn.git 第一次应该是空目录，以后有素材文件，这一步就比较关键（以免替覆盖掉之前的素材） 3. 上传资源 现有img和js素材，复制到cdn目录下（支持20M以内的图片、视频、js、css等） 在本地git仓库目录下右键 Git Bash Here，执行以下命令： git status //查看状态 git add . //添加所有文件到暂存区 git commit -m &#39;第一次提交&#39; //把文件提交到仓库 git push //推送至远程仓库 也可以用Git Gui上传，上传成功后在浏览器可查看https://github.com/cungudafa/cdn 4. 发布资源 点击release自定义发布的版本号 自定义版本号我上传了两次图片，我这里发布了两个版本：（1.6和2.0版本） 三、jsDelivr引用 原理：将github上的资源转为快速访问网址https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径 例如： https://cdn.jsdelivr.net/gh/cungudafa/cdn@1.6/img/custom/cungudafa.jpghttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/img/custom/cungudafa.jpg第一次1.6版本没有发布图片，在2.0版本有发布图片。 版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源//完全省略该版本以获取最新版本https://cdn.jsdelivr.net/gh/user/repo/filehttps://cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg 其他资源填写路径即可：// 加载任何Github发布、提交或分支https://cdn.jsdelivr.net/gh/user/repo@version/filehttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/js/lib.min.jshttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0.1/img/custom/HanHyoJoo.gif 除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：// 使用版本范围而不是特定版本https://cdn.jsdelivr.net/gh/user/repo@version/filehttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2/img/custom/cungudafa.jpghttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/img/custom/cungudafa.jpghttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0.1/img/custom/cungudafa.jpg 压缩版// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成https://cdn.jsdelivr.net/gh/user/repo@version/file/file.min.jshttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/js/InsightSearch.jshttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/js/InsightSearch.min.js 目录// 在末尾添加 / 以获取资源目录列表https://cdn.jsdelivr.net/gh/user/repo@version/file/https://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0.1/img/custom/","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"cdn","slug":"cdn","permalink":"https://cungudafa.gitee.io/tags/cdn/"}],"author":"cungudafa"},{"title":"Gitee+Hexo搭建个人博客","slug":"基于Gitee+Hexo搭建个人博客","date":"2020-02-11T08:02:11.954Z","updated":"2020-02-19T14:44:34.386Z","comments":true,"path":"post/e27b.html","link":"","permalink":"https://cungudafa.gitee.io/post/e27b.html","excerpt":"","text":"前言：之前学习云服务器时搭建过个人网站，现在我的云服务器停止维护了，现就博客模块（基于Gitee+Hexo搭建个人博客），之前有很多在github上用Hexo模板或express模板搭建个人博客的教程，但访问速度原因，现就码云进行实操并记录搭建过程。 一、准备 node.js下载，官网：https://nodejs.org/zh-cn/Git下载，官网：https://git-scm.com/根据提示安装即可。（ps.我的安装记录及cnpm镜像源更换参考） 查看node.js版本git版本 二、hexo博客模板 hexo中文官网：https://hexo.io/zh-cn/ 新建一个MyWeb目录，这个目录很重要，将来会存储你所有博客的markdown文件以及生成的html文件，==慎重选择==。 选中MyWeb目录，右键点击Git Bsah Here 安装hexo npm install hexo-cli -g 如果网速慢，可以采取cnpm安装 初始化hexo模板 hexo init 目录分析： 安装完成后的目录：) 其中，目录MyWeb\\source\\_posts下存放都为makedown（md）格式文件 运行hexo 常用hexo三句话： hexo clean # 清空已有hexo网站文件 hexo generate(or g) # 依据网页文本与新的CSS样式生成新网站文件 hexo server(or s) # 启动本地服务器，可以在localhost:4000查看网站修改效果 在浏览器输入http://localhost:4000就能查看演示样式helloworld页面： 一般默认的是一个landscape主题，后期当提交新文章或者新的样式修改时，往往都是先从本地查看结果无误后再部署到Gitee Page。 主题下载 官网主题：https://hexo.io/themes/推荐两款： Sakura 非常炫，缺点加载慢 https://github.com/honjun/hexo-theme-sakura Next 功能集成多，简洁https://github.com/theme-next/hexo-theme-next 进入github点击下载zip：https://github.com/honjun/hexo-theme-sakura 解压文件夹，将hexo-theme-sakura-master\\themes中的主题样式复制MyWeb\\themes目录下： ) 主题配置在MyWeb主目录找到：_config.yml，记事本打开并修改默认theme: landscape为 theme: sakura # 这里需要注意:后面要有一个空格，名称要和theme下的主题目录名称相同。 重新测试运行 hexo clean hexo g hexo s 细节修改参考：sakura使用教程 三、码云配置 申请码云账户，新建仓库 注意：仓库名，公开访问权限，语言为JavaScript 获得仓库地址： 修改配置在MyWeb主目录找到：_config.yml，记事本打开并修改默认 -》其中repo后面为你的仓库地址，每个：后都有一个空格。 deploy: type: git repo: 你的项目地址 branch: master 部署博客 npm install hexo-deployer-git --save hexo g --d #一键部署 此时会弹出一个对话框，提示输入码云的账号密码。部署成功后，登陆码云。此时本地文件夹中出现有一个public文件夹，代表部署成功。 目前，查看码云中文件为： 本地多个public文件夹： 开启Page功能之前我的配置已为https，已勾选。修改位置如下图：部署成功后如图：网址为登录网址： 访问博客 https://cungudafa.gitee.io 四、博客使用 Hexo(sakura)主题简介 在博客目录的source文件中的_post文件夹中添加你要写的博客文件，文件命名为file_name.mdfile_name.md的文件开头如下: --- title: file_name tag: 标签名 categories: 分类 comment: 是否允许评论(true or false) description: 描述 --- 文档正文编写，请参照markdown语法。 示例： 发布文章并推送到gitee上推送成功：目前的内容是将md格式文件自动生成对应目录，转换成html格式显示。再点击技术文档时，没有加载index.html 手动更新Gitee端其实运行了hexo deploy(or d)应该就已经将新的网站文件（主要是网站目录下的public目录）上传到了Gitee，然而事实上上步之后直接访问网站URL会发现页面没有改变，原因在于：你、没有、更新！https://gitee.com/cungudafa/cungudafa/pages 服务中选择更新： 是的，对于免费Gitee用户而言，你会需要手动更新一下Gitee Page，然后才可以将修改真的“部署”到可访问的网站上。 再访问： 总结： 个人博客修改博客目录在source文件中的_post下，文件命名为file_name.mdfile_name.md的文件开头如下: --- title: file_name tag: 标签名 categories: 分类 #分类在sakura显示才能查看 comment: 是否允许评论(true or false) description: 描述 --- 文档正文编写，请参照markdown语法。 发布： hexo clean # 清空已有hexo网站文件 hexo g --d# 依据网页文本与新的CSS样式生成新网站文件,并一键发布 hexo s # 启动本地服务器，可以在localhost:4000查看网站修改效果 免费使用gitee还需手动更新page。 hexo博客模板样式很多，需要一次详细的修改，能为博文锦上添花！","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.gitee.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"经验分享","slug":"经验分享","permalink":"https://cungudafa.gitee.io/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"}],"author":"cungudafa"}]}
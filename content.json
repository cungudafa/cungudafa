{"meta":{"title":"cungudafa","subtitle":"姑的小屋","description":"公众号关注-IOT姑","author":"cungudafa","url":"https://cungudafa.top","root":"/"},"pages":[{"title":"分类","date":"2020-04-20T16:00:00.000Z","updated":"2020-04-21T03:05:24.294Z","comments":true,"path":"categories/index.html","permalink":"https://cungudafa.top/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2020-04-21T12:17:58.000Z","updated":"2020-04-21T12:42:49.185Z","comments":true,"path":"messageboard/index.html","permalink":"https://cungudafa.top/messageboard/index.html","excerpt":"","text":"有什么想说的? 有什么想问的?"},{"title":"留言板","date":"2020-04-21T12:17:58.000Z","updated":"2020-04-22T14:26:37.412Z","comments":true,"path":"comment/index.html","permalink":"https://cungudafa.top/comment/index.html","excerpt":"","text":"有什么想说的? 有什么想问的?"},{"title":"about","date":"2020-02-12T14:14:36.000Z","updated":"2020-04-23T01:09:51.932Z","comments":false,"path":"about/index.html","permalink":"https://cungudafa.top/about/index.html","excerpt":"","text":"[姑の小屋] 与&nbsp; cungudafa&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"音乐","date":"2020-02-13T15:14:28.000Z","updated":"2020-04-21T15:41:21.113Z","comments":false,"path":"music/index.html","permalink":"https://cungudafa.top/music/index.html","excerpt":"","text":""},{"title":"视频","date":"2020-04-21T11:11:06.000Z","updated":"2020-04-21T11:00:53.848Z","comments":true,"path":"movies/index.html","permalink":"https://cungudafa.top/movies/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-02-13T15:11:06.000Z","updated":"2020-04-22T14:35:23.810Z","comments":true,"path":"links/index.html","permalink":"https://cungudafa.top/links/index.html","excerpt":"","text":"申请友链格式 必填项： name: 名称link: 地址avatar: 头像descr: 描述 选填项： # 边框大小 默认为0 width: 0px# 边框颜色 默认淡蓝色 #49b1f5color: &quot;#49b1f5&quot;# name的颜色namecolor: &quot;#ff6699&quot;# descr的颜色descolor: &quot;#ff6699&quot;# 背景颜色background: 0 友链须知 请先添加本站链接，在本站留言，待站长审核通过即添加友链。 拒绝广告站，技术博客优先~ 对于取消本站链接或死链，站长会定期移除。 本站信息 name: cungudafalink: https:&#x2F;&#x2F;cungudafa.top&#x2F;avatar: https:&#x2F;&#x2F;cungudafa.top&#x2F;img&#x2F;avatar.pngdescr: 一个学习记录者！#以下内容如果存在的情况下width: 1px #(代表边框的大小border-width)color: &quot;#ff9999&quot;"},{"title":"shuoshuo","date":"2020-04-23T01:38:42.810Z","updated":"2020-04-23T01:38:42.810Z","comments":false,"path":"shuoshuo/index.html","permalink":"https://cungudafa.top/shuoshuo/index.html","excerpt":"","text":"说说 视频 sakura主题改为butterfly主题 强肝了一天，我累了 2020年4月21日 Valine更新了 有很多新功能，也有不足，尝鲜体验 2020年4月16日 chrome老提醒不安全 原因是首页封面显示时引用了http的图片，修改即可 所以，不要在photos设置http不安全图片哦！ 2020年3月23日 纪念一下 cungudafa.blog.csdn.net 诞生 cungudafa命名的博客域名通过啦 2020年3月17日 确定工作啦！就等顺利毕业咯~ 7月底去宁波，12月去杭州，有缘相聚！ 2020年3月17日 今天把所有的css和js放在github上做cdn静态资源加速了，口头计算，主页加载速度从10s变为4s，超nice~ 2020年3月6日 valine系统在1点到7点是休眠的哦，可以用Daovoice进行留言哦！ valine必填昵称和邮箱，会优先拉取qq头像哦！ 2020年3月6日 微信公众号--“IOT姑”诞生了！接头暗号是：cungudafa（微信号） 欢迎大家扫码关注哦~ 多多提改进意见哦~ 2020年3月5日 sakura首页的 是有录音的哦，有人发现吗？ 2020年3月3日 想要开学，想吃火锅，想吃烧烤，想吃蟹肉煲，想吃鸡脚米线，想喝奶茶~ 2020年2月25日 武汉加油！中国加油！ 2020年2月25日 第一个说说 2020年2月25日"},{"title":"tags","date":"2020-02-13T12:24:16.000Z","updated":"2020-04-21T07:56:42.516Z","comments":true,"path":"tags/index.html","permalink":"https://cungudafa.top/tags/index.html","excerpt":"","text":""},{"title":"photos","date":"2020-04-22T16:00:18.225Z","updated":"2020-04-22T16:00:18.225Z","comments":false,"path":"photos/index.html","permalink":"https://cungudafa.top/photos/index.html","excerpt":"","text":"hyo 韩孝周"},{"title":"","date":"2020-04-23T01:49:23.545Z","updated":"2020-04-23T01:49:23.545Z","comments":true,"path":"shuoshuo/shuoshuo.css","permalink":"https://cungudafa.top/shuoshuo/shuoshuo.css","excerpt":"","text":"#shuoshuo_content { background-color: #fff; padding: 10px; min-height: 500px; } /* shuo */ body.theme-dark .cbp_tmtimeline::before { background: RGBA(255, 255, 255, 0.06); } ul.cbp_tmtimeline { padding: 0; } .cbp_tmtimeline { margin: 30px 0 0 0; padding: 0; list-style: none; display: inline; position: relative; } /* The line */ .cbp_tmtimeline:before { content: ''; position: absolute; top: 0; bottom: 0; width: 4px; background: RGBA(0, 0, 0, 0.02); left: 80px; margin-left: 10px; } /* The date/time */ .cbp_tmtimeline > li .cbp_tmtime { display: block; /* width: 29%; */ /* padding-right: 110px; */ max-width: 70px; position: absolute; } .cbp_tmtimeline > li .cbp_tmtime span { display: block; text-align: right; } .cbp_tmtimeline > li .cbp_tmtime span:first-child { font-size: 0.9em; color: #bdd0db; } .cbp_tmtimeline > li .cbp_tmtime span:last-child { font-size: 1.2em; color: #9BCD9B; } .cbp_tmtimeline > li:nth-child(odd) .cbp_tmtime span:last-child { color: RGBA(255, 125, 73, 0.75); } div.cbp_tmlabel > p { margin-bottom: 0; } /* Right content */ div class.cdp_tmlabel > li .cbp_tmlabel { margin-bottom: 0; } .cbp_tmtimeline > li .cbp_tmlabel { margin: 0 0 45px 65px; background: #9BCD9B; color: #fff; padding: .8em 1.2em .4em 1.2em; /* font-size: 1.2em; */ font-weight: 300; line-height: 1.4; position: relative; border-radius: 5px; transition: all 0.3s ease 0s; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15); cursor: pointer; display: block; } .cbp_tmlabel:hover { /* transform:scale(1.05); */ transform: translateY(-3px); z-index: 1; box-shadow: 0 15px 32px rgba(0, 0, 0, 0.15) !important } .cbp_tmtimeline > li:nth-child(odd) .cbp_tmlabel { background: RGBA(255, 125, 73, 0.75); } /* The triangle */ .cbp_tmtimeline > li .cbp_tmlabel:after { right: 100%; border: solid transparent; content: \" \"; height: 0; width: 0; position: absolute; pointer-events: none; border-right-color: #9BCD9B; border-width: 10px; top: 4px; } .cbp_tmtimeline > li:nth-child(odd) .cbp_tmlabel:after { border-right-color: RGBA(255, 125, 73, 0.75); } p.shuoshuo_time { margin-top: 10px; border-top: 1px dashed #fff; padding-top: 5px; } /* Media */ @media screen and (max-width: 65.375em) { .cbp_tmtimeline > li .cbp_tmtime span:last-child { font-size: 1.2em; } } .shuoshuo_author_img img { border: 1px solid #ddd; padding: 2px; float: left; border-radius: 64px; transition: all 1.0s; } .avatar { border-radius: 100% !important; -moz-border-radius: 100% !important; box-shadow: inset 0 -1px 0 3333sf; -webkit-box-shadow: inset 0 -1px 0 3333sf; -webkit-transition: 0.4s; -webkit-transition: -webkit-transform 0.4s ease-out; transition: transform 0.4s ease-out; -moz-transition: -moz-transform 0.4s ease-out; } .avatar:hover { -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); -o-transform: rotateZ(360deg); -ms-transform: rotateZ(360deg); transform: rotateZ(360deg); } /* end */ .photos-btn-wrap { border-bottom: 1px solid #e5e5e5; margin-bottom: 20px; } .photos-btn { font-size: 16px; color: #333; margin-bottom: -4px; padding: 5px 8px 3px; } .photos-btn.active { color: #08c; border: 1px solid #e5e5e5; border-bottom: 5px solid #fff; }"},{"title":"","date":"2020-04-22T16:32:40.171Z","updated":"2020-04-22T16:32:40.171Z","comments":true,"path":"photos/bg/img.css","permalink":"https://cungudafa.top/photos/bg/img.css","excerpt":"","text":".gallery { display: flex; flex-wrap: wrap; width: 100%; overflow: hidden; max-width: 1300px; margin: auto; } .gallery__strip { min-height: 100vh; } .gallery__strip__wrapper { flex: 0 0 100%; justify-content: flex-end; background: #222; border-right: 2px solid #333; position: relative; } @media (min-width: 500px) { .gallery__strip__wrapper { flex: 0 0 50%; } } @media (min-width: 950px) { .gallery { height: 100vh; } .gallery__strip.one { animation: 60s move-it ease alternate infinite 5s; transform: translateY(2%); } .gallery__strip.three { animation: 70s move-it ease alternate infinite 6s; transform: translateY(2%); } .gallery__strip.two { animation: 58s move-it-2 ease alternate infinite 5s; transform: translateY(-50%); } .gallery__strip.four { animation: 65s move-it-2 ease alternate infinite 5.5s; transform: translateY(-50%); } .gallery__strip:hover { animation-play-state: paused; } .gallery__strip__wrapper { flex: 0 0 25%; } } .photo { position: relative; text-align: right; padding-bottom: 3rem; } .photo__image img { width: 90%; transform: translateX(30%); transition: 1s cubic-bezier(0.19, 1, 0.22, 1) 0.2s; } .photo__name { text-transform: uppercase; font-size: 40px; letter-spacing: 2px; color: transparent; -webkit-text-stroke-width: 1px; -webkit-text-stroke-color: white; margin-top: -25px; transition: 0.4s ease-in-out 0.4s; position: relative; width: 100%; } .photo:hover .photo__image img { transform: translateX(0%); } .photo:hover .photo__name { color: #fff; } @keyframes move-it { 0%, 90%, 100% { transform: translateY(2%); } 45% { transform: translateY(-50%); } } @keyframes move-it-2 { 0%, 90%, 100% { transform: translateY(-50%); } 45% { transform: translateY(5%); } }"},{"title":"背景图片","date":"2020-04-23T03:02:42.478Z","updated":"2020-04-23T03:02:42.478Z","comments":false,"path":"photos/bg/index.html","permalink":"https://cungudafa.top/photos/bg/index.html","excerpt":"","text":""},{"title":"","date":"2020-04-23T03:00:17.039Z","updated":"2020-04-23T03:00:17.039Z","comments":true,"path":"photos/bg/style.css","permalink":"https://cungudafa.top/photos/bg/style.css","excerpt":"","text":"body { background: #222; font-family: \"Fira Sans\", sans-serif; padding-right: 2rem; } * { box-sizing: border-box; } .gallery { display: flex; flex-wrap: wrap; width: 100%; overflow: hidden; max-width: 1300px; margin: auto; } .gallery__strip { min-height: 100vh; } .gallery__strip__wrapper { flex: 0 0 100%; justify-content: flex-end; background: #222; border-right: 2px solid #333; position: relative; } @media (min-width: 500px) { .gallery__strip__wrapper { flex: 0 0 50%; } } @media (min-width: 950px) { .gallery { height: 100vh; } .gallery__strip.one { animation: 60s move-it ease alternate infinite 5s; transform: translateY(2%); } .gallery__strip.three { animation: 70s move-it ease alternate infinite 6s; transform: translateY(2%); } .gallery__strip.two { animation: 58s move-it-2 ease alternate infinite 5s; transform: translateY(-50%); } .gallery__strip.four { animation: 65s move-it-2 ease alternate infinite 5.5s; transform: translateY(-50%); } .gallery__strip:hover { animation-play-state: paused; } .gallery__strip__wrapper { flex: 0 0 25%; } } .photo { position: relative; text-align: right; padding-bottom: 3rem; } .photo__image img { width: 90%; transform: translateX(30%); transition: 1s cubic-bezier(0.19, 1, 0.22, 1) 0.2s; } .photo__name { text-transform: uppercase; font-size: 40px; letter-spacing: 2px; color: transparent; -webkit-text-stroke-width: 1px; -webkit-text-stroke-color: white; margin-top: -25px; transition: 0.4s ease-in-out 0.4s; position: relative; width: 100%; } .photo:hover .photo__image img { transform: translateX(0%); } .photo:hover .photo__name { color: #fff; } @keyframes move-it { 0%, 90%, 100% { transform: translateY(2%); } 45% { transform: translateY(-50%); } } @keyframes move-it-2 { 0%, 90%, 100% { transform: translateY(-50%); } 45% { transform: translateY(5%); } }"}],"posts":[{"title":"hexo（butterfly）蝴蝶主题+个性美化","slug":"hexo（butterfly）蝴蝶主题+个性美化","date":"2020-04-23T06:20:10.000Z","updated":"2020-04-23T06:37:39.999Z","comments":true,"path":"post/6c36.html","link":"","permalink":"https://cungudafa.top/post/6c36.html","excerpt":"","text":"一、前言这两天心血来潮给自己的hexo网站换了主题，从sakura到butterfly了， 原sakura主题全部内容放到：http://cungudafa.gitee.io（ps.sakura主题后面作者好像又有更新，我就不更新啦~） 现目前主题butterfly：http://cungudafa.top 简单说一下butterfly的优点： 界面是我的新宠了 很多设置优化都单独封装在yml配置了（配置很方便，加载很nice，主题更新也方便） 友链单独封装yml文件，不用写index.md了 不蒜子统计（这些都是sakura没有完善的，我很心水。） tags页面之前我在sakura也是仿这个写的，太卑微了吧。 动态目录响应和相关文章推荐(这个可以设置插件，心动) 大招在支持黑夜模式和繁简体字转换 友链和sakura出入不大，参考优化了一下也是美丽许多！（优化步骤见后文） 相册页面 （可）内部的图片展示效果我还在优化中，想自定义css。二、蝴蝶主题1.快速入门 首先，非常感谢主题作者：JerryC 大佬，使用教程可以参考文档，当然如果遇到什么问题，也可以留言，我也尽最大努力帮助大家优化自己的网站。 主页：如何开始你的hexo-theme-butterfly呢？ 官方教程：快速开始1. 第一次使用，一定要仔细阅读参考文档，配置好你的config和source。2.其次，还有很多功能是需要安装插件的，申请app_id的都要按照规范做。3.最后，注意细节是否有空格，名称路径是否出错。 Hexo+Butterfly+Github+Coding搭建个人博客这篇文章指出需要安装： npm install cheerio --save 你是否安装可以查看根目录下的package.json，参考我的： &#123; \"name\": \"hexo-site\", \"version\": \"0.0.0\", \"private\": true, \"scripts\": &#123; \"build\": \"hexo generate\", \"clean\": \"hexo clean\", \"deploy\": \"hexo deploy\", \"server\": \"hexo server\" &#125;, \"hexo\": &#123; \"version\": \"4.2.0\" &#125;, \"dependencies\": &#123; \"cheerio\": \"^1.0.0-rc.3\", \"hexo\": \"^4.0.0\", \"hexo-abbrlink\": \"^2.0.5\", \"hexo-algolia\": \"^1.3.1\", \"hexo-blog-encrypt\": \"^3.0.12\", \"hexo-deployer-git\": \"^2.1.0\", \"hexo-generator-archive\": \"^1.0.0\", \"hexo-generator-baidu-sitemap\": \"^0.1.6\", \"hexo-generator-category\": \"^1.0.0\", \"hexo-generator-feed\": \"^2.2.0\", \"hexo-generator-index-pin-top\": \"^0.2.2\", \"hexo-generator-json-content\": \"^4.1.6\", \"hexo-generator-searchdb\": \"^1.3.0\", \"hexo-generator-sitemap\": \"^2.0.0\", \"hexo-generator-tag\": \"^1.0.0\", \"hexo-neat\": \"^1.0.4\", \"hexo-permalink-pinyin\": \"^1.1.0\", \"hexo-related-popular-posts\": \"^4.0.0\", \"hexo-renderer-ejs\": \"^1.0.0\", \"hexo-renderer-marked\": \"^2.0.0\", \"hexo-renderer-pug\": \"^1.0.0\", \"hexo-renderer-stylus\": \"^1.1.0\", \"hexo-server\": \"^1.0.0\", \"hexo-tag-bili\": \"^1.0.0\", \"hexo-tag-fancybox_img\": \"^1.0.1\", \"hexo-wordcount\": \"^6.0.1\" &#125;&#125; 2.valine评论移植如果你之前有过主题，可不可以把评论也搬过来呢？ 当然是可以的！ 注意把yml配置的链接路径对应上（这是访问路径）因为在leancloud存储里是域名和链接页面的路径，只要路径一样就可以显示之前主题的留言啦！leancloud显示是从域名拼接路径，就像这样，（这样设置的确可以在两个域名都显示同一组评论，不过valine-admin（zhaojun版）返回邮件的地址只有一个哦！最好还是再建立一个leancloud后台容器！） 在页面中，渲染样式是根据主题来设置的！！！（注意links\\index.md的type是link）解释一下：type: link是从全局渲染data\\link.yml友链内容到links\\index.md中 这里需要把link.yml改为links.yml即这个内容文件时\\links\\index.html页面所用 同时修改flink.pug引用link.yml为links.yml （即：site.data.link改为site.data.links）总结：valine评论移植，只要相对路径搞好，就可。3.文章移植我以前设置的是hexo-abbrlink插件——随机访问路径，这里在主配置文件下不用修改，但是，在文章里注意这个abbrlink的地址也要写过来哦！ sakura到butterfly的区别是（作者信息没有了，首图top_img还有cover封面的覆盖图，根据之前的教程设置吧——主题页面。） ---abbrlink: '44e8'title: 微信公众号（二）扩展分享tags: - 微信公众号categories: 技术comment: truedescription: 'cungudafa:在学习中的小王呀'top_img: https://img-blog.csdnimg.cn/20200306151717593.pngcover: https://img-blog.csdnimg.cn/20200306151717593.pngdate: 2020-03-06 16:54:10--- 同理，文章的相对路径没变的话，以前的评论也可以拉取过来哦！ 三、个性美化以下页面需要在目录显示，请设置butterfly.yml如果需要中英文设置，请在主题themes\\Butterfly\\languages 设置。 menu: 主页: / || fa fa-home 博文||fa fa-graduation-cap: - 归档 || /archives/ || fa fa-folder-open - 分类 || /categories/ || fa fa-archive - 标签 || /tags/ || fa fa-tags 生活||fa fa-diamond: - 说说 || /shuoshuo/ || fa fa-comments-o - 相册 || /photos/ || fa fa-camera-retro #- 音乐 || /music/ || fa fa-music #- 视频 || /movies/ || fa fa-video-camera 友链: /links/ || fa fa-link 留言板: /comment/ || fa fa-paper-plane #留言板: /messageboard/ || fa fa-paper-plane 关于: /about/ || fa fa-heart 1.boyui对话框式简介页面 css和官网一致。 你可以下载我的botui.js，然后修改后文（你想要显示的）内容即可。 修改你要显示的页面，加上css和js引用，标签是：&lt;bot-ui&gt;&lt;/botui&gt;source\\about\\index.md我这个外框直接从sakura移植过来的，具体也贴出来了，方便copy！---title: aboutdate: 2020-2-12 22:14:36keywords: 关于description: comments: falsetop_img: https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/about.jpg---&lt;!-- https://www.bootcdn.cn/botui/ --&gt;&lt;link href=\"https://cdn.bootcss.com/botui/0.3.9/botui-theme-default.css\" rel=\"stylesheet\"&gt;&lt;link href=\"https://cdn.bootcss.com/botui/0.3.9/botui.min.css\" rel=\"stylesheet\"&gt;&#123;% raw %&#125;&lt;!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 --&gt;&lt;div class=\"entry-content\"&gt; &lt;div class=\"moe-mashiro\" style=\"text-align:center; font-size: 50px; margin-bottom: 20px;\"&gt;[姑の小屋]&lt;/div&gt; &lt;div id=\"hello-mashiro\" class=\"popcontainer\" style=\"min-height: 300px; padding: 2px 6px 4px; background-color: rgb(36, 200, 255); border-radius: 10px;\"&gt; &lt;center&gt; &lt;p&gt; &lt;/p&gt; &lt;h4&gt; 与&amp;nbsp;&lt;ruby&gt; cungudafa&amp;nbsp;&lt;rp&gt; （&lt;/rp&gt; &lt;rt&gt; 真（ま）白（しろ）&lt;/rt&gt; &lt;rp&gt; ）&lt;/rp&gt; &lt;/ruby&gt; 对话中...&lt;/h4&gt; &lt;p&gt; &lt;/p&gt; &lt;/center&gt; &lt;bot-ui&gt;&lt;/botui&gt; &lt;/div&gt;&lt;/div&gt;&lt;!--&lt;script src=\"https://cungudafa.gitee.io/js/botui.js&gt;&lt;/script&gt;--&gt;&lt;script src=\"/js/third-party/botui.js\"&gt;&lt;/script&gt;&lt;script&gt;bot_ui_ini()&lt;/script&gt;&#123;% endraw %&#125; 2.说说动态页面这个功能我也是从我之前的 sakura主题 搬过来的静态的样式css，稍加修改。 source\\shuoshuo\\index.md ---title: shuoshuotype: shuoshuonoDate: 'true'comments: 'false'top_img: https://cdn.jsdelivr.net/gh/cungudafa/img/images/food.jpg---&lt;link rel=\"stylesheet\" href=\"https://gitee.com/cungudafa/source/raw/master/css/shuoshuo.css\"&gt;&lt;p&gt;&lt;/p&gt;&lt;div class=\"photos-btn-wrap\"&gt; &lt;!-- &lt;a class=\"photos-btn\" href=\"http://cungudafa.top/photos/\"&gt;Photos&lt;/a&gt; --&gt; &lt;a class=\"photos-btn active\" href=\"\"&gt;说说&lt;/a&gt; &lt;a class=\"photos-btn\" href=\"https://space.bilibili.com/430247358\"&gt;视频&lt;/a&gt;&lt;/div&gt;&lt;div id=\"primary\" class=\"content-area\" style=\"\"&gt; &lt;main id=\"main\" class=\"site-main\" role=\"main\"&gt; &lt;div id=\"shuoshuo_content\"&gt; &lt;ul class=\"cbp_tmtimeline\"&gt; &lt;li&gt; &lt;span class=\"shuoshuo_author_img\"&gt;&lt;img src=\"https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg\" class=\"avatar avatar-48\" width=\"48\" height=\"48\"&gt;&lt;/span&gt; &lt;div class=\"cbp_tmlabel\" href=\"\"&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;sakura主题改为butterfly主题&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;强肝了一天，我累了&lt;p&gt; &lt;p&gt;&lt;/p&gt; &lt;p class=\"shuoshuo_time\"&gt;&lt;i class=\"fa fa-clock-o\"&gt;&lt;/i&gt; 2020年4月21日 &lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;span class=\"shuoshuo_author_img\"&gt;&lt;img src=\"https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg\" class=\"avatar avatar-48\" width=\"48\" height=\"48\"&gt;&lt;/span&gt; &lt;div class=\"cbp_tmlabel\" href=\"\"&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;第一个说说&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p class=\"shuoshuo_time\"&gt;&lt;i class=\"fa fa-clock-o\"&gt;&lt;/i&gt; 2020年2月25日 &lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; 针对静态说说不能在线发布的问题，Uncle_drew 研究的gtalk在线发布https://cndrew.cn/shuoshuo/，这是另一款评论后台，防止和valine评论冲突，用了两个后台。 3.友链页面优化默认：优化： 参考链接：Hexo关于Butterfly的一些小修改 我直接将修改步骤再贴一遍，如果觉得好用，记得去上面链接的原博留言打卡，谢！ 修改themes\\Butterfly\\layout\\flink.pug渲染样式（ctrl+/注释掉原来的内容，将下面添加进去：） #page .flink#article-container each i in site.data.links h2= i.class_name .post-cards .md-links each item in i.link_list .md-links-item(style= item.color ? `--primary-color:$&#123;item.color&#125;;border-width:$&#123;item.width&#125;;border-style:$&#123;item.style&#125;;animation: $&#123;item.custom&#125; $&#123;item.time&#125; infinite alternate; background:$&#123;item.background&#125;` : 'border-width:0px;border-style:solid;animation: link_custom 0s infinite alternate;background:0') a.customcolor(href=item.link title=item.name target=\"_blank\" rel=item.remove ? \"external nofollow\" : \"\" style=item.namecolor ? `--namecolor:$&#123;item.namecolor&#125;` : '') if theme.lazyload.enable img.lazyload(data-src=item.avatar onerror=`this.onerror=null;this.src='` + url_for(theme.lodding_bg.flink) + `'` alt=item.name,style=item.rotate ? `--primary-rotate:$&#123;item.rotate&#125;;--autotime:$&#123;item.autotime&#125;;` : '--primary-rotate:0deg' class=item.autorotate ? `$&#123;item.autorotate&#125;` : '') else img(src=item.avatar onerror=`this.onerror=null;this.src='` + url_for(theme.lodding_bg.flink) + `'` alt=item.name ) .md-links-title= item.name .md-links-des= item.descr != page.content if page.comments !== false include includes/comments/index.pug 添加css样式，外链（ctrl+F全局搜索 css: ，并添加外链 ） - https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/flink.min.css 使用方法：在link.yml里写： name: 姓名 link: 地址 avatar: 头像 descr: 描述 # 边框大小 默认为0 width: 0px # 边框样式 默认 solid style: solid # 边框颜色 默认淡蓝色 #49b1f5 color: \"#49b1f5\" # 自动旋转 可选值 flash（闪现） link_custom（单色呼吸灯） link_custom1（彩色呼吸灯） custom: link_custom # 动画时长设定，默认为0 time: 4s # name的颜色 namecolor: \"#ff6699\" # descr的颜色 descolor: \"#ff6699\" # 背景颜色 background: 0 # 鼠标悬停旋转角度 rotate: 360deg # 自动旋转 latuo左旋转 rauto右旋转 autorotate: \"lauto\" # 旋转的周期（时长） autotime: 0s #移除此链接的权重 0为否 非0为移除 remove: 0 篇幅蛮大的了，作为一次换主题的笔记吧，方便我以后查看，嘿嘿~ 欢迎大家多多指教！ 如果这篇文章不见了，那去csdn看看，https://blog.csdn.net/cungudafa/article/details/105699384","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://cungudafa.top/tags/hexo/"},{"name":"butterfly","slug":"butterfly","permalink":"https://cungudafa.top/tags/butterfly/"},{"name":"个性美化","slug":"个性美化","permalink":"https://cungudafa.top/tags/%E4%B8%AA%E6%80%A7%E7%BE%8E%E5%8C%96/"}]},{"title":"Valine-1.4.4新版本尝鲜+个性制定（表情包、qq头像、UI样式）","slug":"Valine-1.4.4新版本尝鲜+个性制定（表情包、qq头像、UI样式）","date":"2020-04-21T09:14:10.000Z","updated":"2020-04-23T00:48:48.674Z","comments":true,"path":"post/8202.html","link":"","permalink":"https://cungudafa.top/post/8202.html","excerpt":"","text":"一、前言大晚上又魔改评论系统了，2020年4月16日01:56:39把新版本的自定义图片改出来了，2333，valine的新版本变化蛮大的。 二、尝鲜1.4.4 强势来袭，尝鲜加体验。文末给出个性定制的方法，skr~~官方更新文档： v1.4.0~1.4.4, 2020-04-11A 新的SDK加载逻辑A新增图片表情 –》算是优化了1.3.10中的表情，个性表情需自改，我在后文中给出方法A 新增截图粘贴上传 –》点赞 , 直接截屏就可以ctrl+v上传A 新增图片拖拽至评论框上传A 新增对MathJax的支持A 新增对KaTex的支持A 新增评论框楼内回复 –》我怀疑作者大大看了我这篇文章《Valine–修复评论者昵称跳转外链出错》A 新增对夜间模式的支持 #221A 全新的评论区UI界面 –》修改了提交框的位置，emmm，diy样式的话需要重新修改哦A 新增对zh-CN/zh-TW/en/jp等多国语言的支持F 修复回复评论时评论数据需要刷新才会显示的Bug #257 –》点赞F 修复表情和预览只能点开不能收回的Bug #254 –》点赞F 修复Edge浏览器识别为Chrome的Bug #250F 修复Storage is not defined的Bug #242F 修复可能存在的xss漏洞 #218F 修复分页Bug #196F 修复点击展开更多击穿Bug #180F 修复个别UA识别失败的BugF 修复回复评论后评论数变为1的Bug #264U 表情图片懒加载 #261U 删除验证码 #207 –》撤销了数学计算验证（惋惜）U 删除自带的邮件提醒 #20 –》撤销了leacloud自带邮箱提示（不过我们都用的zhaojun云引擎吧，不影响）U 代码逻辑优化 注: MathJax 和 KaTex 需要当前页面已加载并配置好相关的资源文件. 三、个性定制 前面先给出一个 Valine1.3.10版的使用和个性定制教程 1. 大佬版1.3.10版之前的valine评论系统是开源的，可以使用node进行编译，生成自定义的valine.min.js，再放在github上调用。 可参考：valine-plus，不过这都是老版本了，大佬请自行斟酌，npm肯定比修改js省心。 2.“傻瓜”版参考我的样式： 自定义背景 增添个性表情 根据邮箱拉取qq头像 引入一言api diy魔改样式 我的样式参考模板cungudafa版：https://cungudafa.top/js/Valine144.min.js 如果感觉还ok，请直接引用我的样式，不用客气哦~不要白嫖了，要记得留言点赞，哈哈哈，让我知道我们有共同的欣赏水平~ 如果你有更多的想法，可以看看后面一版，我魔改的记录。 3.平民版 下载Valine1.4.4.min.js 到本地我的主题目录：themes\\sakura\\source\\js\\Valine.min.js 官方：unpkg.com/valine@1.4.4/dist/Valine.min.js cungudafa版：https://cungudafa.top/js/Valine144.min.js请下载我的版本，修改后的哦！ 修改为本地引用我的评论样式引入在themes\\sakura\\layout\\_partial\\comment.ejs &lt;script src=\"../js/Valine.min.js\"&gt;&lt;/script&gt; 如果你是在footer.ejs，注意相对路径只有一个点 &lt;script src=\"./js/Valine.min.js\"&gt;&lt;/script&gt; 主要个性定制 （1）自定义背景记住，修改样式 一定要在 引入Valine144.min.js之后： 修改background-image 的url对应你的图片， 今日诗词，可选部分 &lt;% if (theme.valine.enable &amp;&amp; post.comments) &#123; %&gt;&lt;div id=\"vcomments\"&gt;&lt;/div&gt;&lt;!-- 先引入样式,从footer提前 --&gt;&lt;script src=\"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;!-- &lt;script src=\"//unpkg.com/valine/dist/Valine.min.js\"&gt;&lt;/script&gt; --&gt;&lt;script src=\"../js/Valine144.min.js\"&gt;&lt;/script&gt;&lt;!-- 评论框美化 --&gt;&lt;style&gt; .v .veditor&#123;min-height: 10rem; background-image: url(https://cdn.jsdelivr.net/gh/cungudafa/img/images/girls2.png); background-size: contain; background-repeat: no-repeat; background-position: right; background-color: rgba(255,255,255,0); resize: none;&#125;&lt;/style&gt;&lt;script&gt; new Valine(&#123; el: '#vcomments', lang: 'zh-cn', admin_email: 'cungudafa@163.com',//博主邮箱 appId: \"&lt;%= theme.valine.appId %&gt;\", appKey: \"&lt;%= theme.valine.appKey %&gt;\", path: window.location.pathname, comment_count: true, //notify: false, // 邮件提醒!使用第三方就不要添加这个!! //verify: true, //验证码 avatar: 'monsterid',//小怪物头像 placeholder: \"你是我一生只会遇见一次的惊喜 ...\" &#125;);&lt;/script&gt;&lt;!-- 今日诗词：随机返回一句古诗词名句的接口，宅到用来做 Valine 的 placeholder 显示内容 --&gt;&lt;script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt; jinrishici.load(function(result) &#123; var jrsc_plac = result.data.content + \"\\n「\" + result.data.origin.title + \"」\" + result.data.origin.dynasty + \" · \" + result.data.origin.author; document.getElementById(\"veditor\").setAttribute(\"placeholder\",jrsc_plac); &#125;)&lt;/script&gt;&lt;% &#125; %&gt; （2）增添个性表情1.4+版本显示标签名，不是图片，感觉nice~，当然后期需要特殊处理一下。 注意在1.4.4版本中表情调用接口是https://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/要个性化显示表情包，需要重定向图片接口重定向第一处： 表情选择（y.DEFAULT_EMOJI_CDN+o，可关键词搜索一下） 这里简单做了个正则筛选，如果图片路径o包含https://开头，则是自定义表情，不添加默认接口y.DEFAULT_EMOJI_CDN 重定向第二处： 评论区表情显示（关键词：r.DEFAULT_EMOJI_CDN+(o.data[t]||e)） 这里简单做了个正则筛选，如果图片路径(o.data[t]||e)包含https://开头，则是自定义表情，不添加默认接口r.DEFAULT_EMOJI_CDN下载我的 https://cungudafa.top/js/Valine144.min.js是修改后的了。 手动增添一个表情参考：Uncle_drew -《valine添加自定义表情》 修改valine.min.js, 或者直接下载我修改后的js这里是关键字 + 表情链接：（只要你想，使劲往里怼~） function(e,t)&#123;e.exports=&#123; 傲娇:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409103906.webp\", 开心:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409104757.webp\", 扣手手:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130304.webp\", 仙女下凡:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130301.webp\", 得瑟:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130258.webp\", 揉左脸:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130254.webp\", 揉右脸:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130249.webp\", 滑稽:\"https://cdn.jsdelivr.net/gh/moezx/cdn@3.1.9/img/Sakura/images/smilies/icon_huaji.gif\", smile:\"e3/2018new_weixioa02_org.png\", 直接用别人家的接口第一步修改CDN接口：这里用xaoxuu整理的表情 t.DEFAULT_EMOJI_CDN=\"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/valine/\",//默认头像接口\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/\", 第二步修改和增添表情图片： 原样式： function(e,t)&#123;e.exports=&#123;smile:\"e3/2018new_weixioa02_org.png\",lovely:\"09/2018new_keai_org.png\",happy:\"1e/2018new_taikaixin_org.png\",clap:\"6e/2018new_guzhang_thumb.png\",whee:\"33/2018new_xixi_thumb.png\",haha:\"8f/2018new_haha_thumb.png\",\"laugh and cry\":\"4a/2018new_xiaoku_thumb.png\",wink:\"43/2018new_jiyan_org.png\",greddy:\"fa/2018new_chanzui_org.png\",awkward:\"a3/2018new_heixian_thumb.png\",sweat:\"28/2018new_han_org.png\",\"pick nose\":\"9a/2018new_wabi_thumb.png\",hum:\"7c/2018new_heng_thumb.png\",angry:\"f6/2018new_nu_thumb.png\",grievance:\"a5/2018new_weiqu_thumb.png\",poor:\"96/2018new_kelian_org.png\",disappoint:\"aa/2018new_shiwang_thumb.png\",sad:\"ee/2018new_beishang_org.png\",tear:\"6e/2018new_leimu_org.png\",\"no way\":\"83/2018new_kuxiao_org.png\",shy:\"c1/2018new_haixiu_org.png\",dirt:\"10/2018new_wu_thumb.png\",\"love you\":\"f6/2018new_aini_org.png\",kiss:\"2c/2018new_qinqin_thumb.png\",amorousness:\"9d/2018new_huaxin_org.png\",longing:\"c9/2018new_chongjing_org.png\",desire:\"3e/2018new_tianping_thumb.png\",\"bad laugh\":\"4d/2018new_huaixiao_org.png\",blackness:\"9e/2018new_yinxian_org.png\",\"laugh without word\":\"2d/2018new_xiaoerbuyu_org.png\",titter:\"71/2018new_touxiao_org.png\",cool:\"c4/2018new_ku_org.png\",\"not easy\":\"aa/2018new_bingbujiandan_thumb.png\",think:\"30/2018new_sikao_org.png\",question:\"b8/2018new_ningwen_org.png\",\"no idea\":\"2a/2018new_wenhao_thumb.png\",dizzy:\"07/2018new_yun_thumb.png\",bomb:\"a2/2018new_shuai_thumb.png\",bone:\"a1/2018new_kulou_thumb.png\",\"be quiet\":\"b0/2018new_xu_org.png\",\"shut up\":\"62/2018new_bizui_org.png\",stupid:\"dd/2018new_shayan_org.png\",\"surprise \":\"49/2018new_chijing_org.png\",vomit:\"08/2018new_tu_org.png\",cold:\"40/2018new_kouzhao_thumb.png\",sick:\"3b/2018new_shengbing_thumb.png\",bye:\"fd/2018new_baibai_thumb.png\",\"look down on\":\"da/2018new_bishi_org.png\",\"white eye\":\"ef/2018new_landelini_org.png\",\"left hum\":\"43/2018new_zuohengheng_thumb.png\",\"right hum\":\"c1/2018new_youhengheng_thumb.png\",crazy:\"17/2018new_zhuakuang_org.png\",\"scold \":\"87/2018new_zhouma_thumb.png\",\"hit on face\":\"cb/2018new_dalian_org.png\",wow:\"ae/2018new_ding_org.png\",fan:\"86/2018new_hufen02_org.png\",money:\"a2/2018new_qian_thumb.png\",yawn:\"55/2018new_dahaqian_org.png\",sleepy:\"3c/2018new_kun_thumb.png\",sleep:\"e2/2018new_shuijiao_thumb.png\",\"watermelon \":\"01/2018new_chigua_thumb.png\",doge:\"a1/2018new_doge02_org.png\",dog:\"22/2018new_erha_org.png\",cat:\"7b/2018new_miaomiao_thumb.png\",thumb:\"e6/2018new_zan_org.png\",good:\"8a/2018new_good_org.png\",ok:\"45/2018new_ok_org.png\",yeah:\"29/2018new_ye_thumb.png\",\"shack hand\":\"e9/2018new_woshou_thumb.png\",bow:\"e7/2018new_zuoyi_org.png\",come:\"42/2018new_guolai_thumb.png\",punch:\"86/2018new_quantou_thumb.png\"&#125;&#125; 修改为新接口图片：（我的valine已修改过~，以后需要自增加表情的话，在第一部分增加即可） function(e,t)&#123; e.exports=&#123; 傲娇:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409103906.webp\", 开心:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409104757.webp\", 扣手手:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130304.webp\", 仙女下凡:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130301.webp\", 得瑟:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130258.webp\", 揉左脸:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130254.webp\", 揉右脸:\"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130249.webp\", 滑稽:\"https://cdn.jsdelivr.net/gh/moezx/cdn@3.1.9/img/Sakura/images/smilies/icon_huaji.gif\", &#125;; function aru(str)&#123; return \"aru/aru-\" + str + \".gif\"; &#125; function tieba(str)&#123; return \"tieba/tieba-\" + str + \".png\"; &#125; function qq(str) &#123; return \"qq/qq-\" + str + \".gif\"; &#125; //e.exports = &#123;&#125;; for (var i = 1; i &lt; 54; i++) &#123; e.exports['tieba-' + i] = tieba(i); &#125; for (var i = 1; i &lt; 101; i++) &#123; e.exports['qq-' + i] = qq(i); &#125; for (var i = 1; i &lt; 116; i++) &#123; e.exports['aru-' + i] = aru(i); &#125; &#125;, 最好是自己整理一下喜欢的评论表情（qq，贴吧，b站都是经典的参考表情，不知道会不会侵权哈，自己整理素材存放到github上最好！） （3） 根据邮箱拉取qq头像在我的valine里这里也已经修改过了，这里记录一下方便查找： 参考我修改1.3.10版：Valine-实现QQ邮箱识别生成头像地址（完美解决头像问题）新版本里也没有加，qq拉取部分有所更新 var qq_img = E.cdn+(0,s.default)(t.get(\"mail\"))+E.params;if (t.get(\"mail\").indexOf(\"@qq.com\") &gt;= 0) &#123; var prefix = t.get(\"mail\").replace(/@.*/, \"\");//前缀 var pattern = /^\\d+$/g; //正则表达式 var result = prefix.match(pattern);//match 是匹配的意思 if (result !== null) &#123; qq_img = \"//q1.qlogo.cn/g?b=qq&amp;nk=\" + prefix + \"&amp;s=100\"; &#125;&#125;&lt;img class=\"vimg\" src=\"'+(qq_img)+'\"&gt; （4）diy魔改样式改了这么多js，终于到css了，是diy还是魔改看你的心情啦！ 我是直接在页面F12修改好了复制到style里去的，其实我不咋会前端，2333。 &lt;!-- 评论框美化 --&gt;&lt;style&gt; .v .veditor&#123;min-height: 10rem; background-image: url(https://cdn.jsdelivr.net/gh/cungudafa/img/images/girls2.png); background-size: contain; background-repeat: no-repeat; background-position: right; background-color: rgba(255,255,255,0); resize: none;&#125; .v .vwrap&#123;padding: 0 0 44px;&#125; .v .vwrap .vedit&#123;padding-top:20px;&#125; .v .vwrap .vheader&#123;width: 80%;bottom:0;position: absolute;background: #fff7f7f7;&#125; .v .vinput&#123;padding:10px 15px; text-align: center;&#125; .v .vwrap .vheader .vinput&#123;border-bottom:0px&#125; .v .vwrap .vedit .vctrl&#123;margin-top:-44px;right:0;position:absolute;margin-right:-3px;&#125; .v .vwrap .vrow&#123;position:absolute;right:0;bottom:0;width:20%;padding-top:0px;&#125; .v .vrow &#123;font-size: 0;padding: 0px 0;&#125; .v .vicon &#123;margin-right: 15px;&#125; .v .vrow .vcol.vcol-30&#123;display: none&#125; .v .vedit .vctrl span.vpreview-btn&#123;display: none&#125; .v .vrow .vcol.vcol-70&#123;width: 100%;&#125; .v .vsubmit.vbtn&#123;border-radius: 0;padding: 0;color: #fff;line-height: 44px;width:100%;border: none;background:#ff9999;&#125; .v .vcards .vcard .vh .vhead .vsys&#123;background: #fff7f7f7;&#125; .v .vcards .vcard .vh .vmeta .vat&#123;font-size: 12px;display: block;margin-left: 15px;float: right;color: #fff;background-color: #ff9999;line-height: 20px;padding: 0 6px;border-radius: 3px;&#125; @media screen and (max-width: 520px)&#123; .v .vwrap .vheader .vinput&#123;width: 33.33%;padding:10px 5px;&#125; &#125;&lt;/style&gt; ending~ 撒花。 Valine官方文档变化挺大的，不再维护了是遗憾吧，总之感谢作者大大的开源，大家都多去支持一下。 Uncle_drew -《valine添加自定义表情》这一版是1.4.1，参考，点赞！！ Valine - 一款快速、简洁且高效的无后端评论系统入门使用教程 Valine-实现QQ邮箱识别生成头像地址（完美解决头像问题）这一条新版本里也没有加，qq拉取部分有所更新 Valine–修复评论者昵称跳转外链出错 wpac_init = window.wpac_init || []; wpac_init.push({widget: 'Comment', id: 23889}); (function() { if ('WIDGETPACK_LOADED' in window) return; WIDGETPACK_LOADED = true; var mc = document.createElement('script'); mc.type = 'text/javascript'; mc.async = true; mc.src = 'https://embed.widgetpack.com/widget.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling); })(); Comments System WIDGET PACK","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"valine","slug":"valine","permalink":"https://cungudafa.top/tags/valine/"},{"name":"美化","slug":"美化","permalink":"https://cungudafa.top/tags/%E7%BE%8E%E5%8C%96/"},{"name":"表情包","slug":"表情包","permalink":"https://cungudafa.top/tags/%E8%A1%A8%E6%83%85%E5%8C%85/"}]},{"title":"毕设毕设中~","slug":"手语识别毕设","date":"2020-03-17T11:05:10.000Z","updated":"2020-04-21T11:06:02.722Z","comments":true,"path":"post/c55e.html","link":"","permalink":"https://cungudafa.top/post/c55e.html","excerpt":"","text":"毕设中呀！可能个人网站更新不及时~ 抱歉 技术转csdn-cungudafa csdn-cungudafa 生活记录转公众号【IOT姑】","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"机器视觉","slug":"机器视觉","permalink":"https://cungudafa.top/tags/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/"}]},{"title":"读手语图像识别论文笔记","slug":"读手语图像识别论文笔记","date":"2020-03-07T09:05:10.000Z","updated":"2020-04-21T11:06:34.534Z","comments":true,"path":"post/7035.html","link":"","permalink":"https://cungudafa.top/post/7035.html","excerpt":"","text":"1.手语识别背景​ 根据世卫组织最近的一项报道表明，在全球有超过10亿的残疾人，就聋哑人占残疾人口的10%。截止2013年末，据第六次全国人口普查我国总人口数，及第二次全国残疾人抽样调查我国的残疾人口达8502万人，其中听力残疾2054万人，语言残疾130万人，这些人中只有少部分只听力或语言障碍，大多数人完全失去了与健康人类正常沟通的能力，手语则是他们唯一的交流方式。手语是聋哑人和听障人群的日常交流中自然发展出来的语言，是聋哑人间的主要沟通媒介。手语是一种肢体语言，它主要以手势表达信息，通过手的手形、位置、朝向和运动轨迹即可以传递一个手语，在个别情况下，表情、眼神、唇动和身体姿态也辅助参与到手语的表达上。 ​ 由于手语不是一门大众化的语言，在听觉正常的人中只有极少数人会使用或理解手语，即使在聋哑人群体中，标准化手语的普及率也很低，不同聋哑人群体使用的手语往往有很大区别，存在很严重的方言现象，由于环境差异，可能会有使用不同的表达方式，所以手势通常是一个不太明确的概念，有时手势表达的含义在不同情境下承载的信息是不同的。那么将手语转换成声音和图像并被人们轻易理解就变得很有实用价值，使正常人能通过机器的翻译“看懂”手语，利用相关语音识别合成技术将文字或语音合成出手语，帮助聋哑人“听出”声音。 2.国内外现状​ 从研究方法与技术应用中将手语识别技术大致分为两大主流：基于数据手套的手语识别和基于视觉的手语识别。基于数据手套的手语识别系统其实是一个多传感器融合系统，通过对手的角度信息、运动轨迹与时序信息融合处理来分类识别的系统。该系统能精确获取手的信息且识别性高，适合种类多的手语识别；但是使用时需要穿戴笨重的传感设备，这严重影响了人机交换的易用性和自然性，并且设备成本高，在实际生产生活中使用非常不便，难以批量使用。相对而言，基于视觉的手语识别是利用摄像头获取手语的二维图像或者视频，然后利用图像处理，机器学习等先关领域的算法进行手语的识别，该系统更加贴近社会的需求，最适合人机交互。但相对的，该模式手语识别系统很难实现手语特征提取的精确性以及很难有统一的手语识别方法等。因此通过视觉的手语识别系统存在识别率低、实时性差、适用性低的缺陷。 ​ 对手语识别技术的研究最早产生于国外，1983年，美国电话电报公司的G.J.Grimes取得了“数字数据输入手套接口设备”的专利。该设备能识别72个单字字母，被认定是最早进行手语识别研究的人。1995年，美国麻省理工学院对本国连续手语识别进行研究。提取手语的手形、方向与运动轨迹作为多特征，然后利用隐马尔可夫进行跟踪识别。识别时要求佩戴有色手套。对组成的40个连续句子进行试验验证，正确率为91.3%。随后对句子给予相应语法约束后，识别率达到98%。2010年，日本Morpho公司研究出一项通过人脸寻找附近的手势进行动作识别，并对电视进行控制的人机交互技术。随后推出一款名为3D手势遥控器，利用手势的动作来达到遥控的功能。 ​ 目前，国内对基于视觉的手语识别研究还较少，主要集中在对简单的手势识别研究上。1995年，哈尔滨工业大学的吴江琴、高文对手语识别系统进行了分析与研究，提出了利用数据手套采集手语的方向、位置、形状等信息，通过人工神经网络和隐马尔科夫相结合的方法实现手语识别方法，从而实现了对13个静态手势的识别以及简单的动作识别。2009年，西安建筑大学的郭彩龙等人针对如何提高手语识别率，通过研究图像的傅里叶描述子的平移、缩放、旋转不变性的特征，研究出一种基于傅里叶描绘子的中国静态识别算法。采用Sobe检测边缘，随后获取边缘的傅里叶系数作为特征量，最后利用欧式距离的模板匹配算法进行识别，识别率达到96.2%。2013年，西南科技大学的林水强等人针对如何实现自然手语识别交互，提出一种基于几何特征的手势识别方法。采用多序列背景模型、肤色跟踪与几何形状相结合的分割算法提取手势。随后利用动态帧方法获取多个几何特征用于决策树进行分类识别。对规定的6种手势进行测试，合格率达94%。 图中只记录了部分相关研究。 3.关键词按手语类型分类： ​ 静态手语识别、孤立词手语识别、大规模连续动作手语识别 按研究方式分类： ​ 基于数据手套和传感器识别系统、基于视觉图像处理识别系统 上述涉及相关算法： ​ 隐形马尔科夫算法(HMM)、人工神经网络、傅里叶描述子算法、Sobe边缘检测、欧式距离、决策树、肤色聚类算法与Harr特征检测算法、人体骨骼匹配算法、KNN临近算法 3.1特征值 隐形马尔科夫算法(HMM) 隐马尔可夫模型（Hidden Markov Model，HMM）是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。其难点是从可观察的参数中确定该过程的隐含参数。然后利用这些参数来作进一步的分析，例如模式识别。是在被建模的系统被认为是一个马尔可夫过程与未观测到的（隐藏的）的状态的统计马尔可夫模型。 傅里叶描述子算法 傅立叶描述子是分析和识别物体形状的重要方法之一。利用基于曲线多边形近似的连续傅立叶变换方法 计算傅立叶描述子，并通过形状的主方向消除边界起始点相位影响的方法，定义了新的具有旋转、平移和尺度不变 性的归一化傅立叶描述子。与使用离散傅立叶变换和模归一化的传统傅立叶描述子相比，新的归一化傅立叶描述 子同时保留了模与相位特性，因此能够更好地识别物体的形状。 图片源文链接:OpenCV-python提取特征（批量处理数据） Sobe边缘检测 索贝尔算子（Sobel operator）是图像处理中的算子之一，主要用于边缘检测。在技术上，它是一离散型差分算子，用来运算图像亮度函数的梯度之近似值 。在图像的任何一点使用此算子，将会产生对应的梯度矢量或是其法矢量。 opencv sobe 边缘检测算子 肤色聚类算法与Harr特征检测算法 肤色检测算法：RGB、Ycrcb之cr分量+otsu阈值化、YCrCb、HSV、基于椭圆皮肤模型的皮肤检测opencv自带肤色检测类AdaptiveSkinDetector等都是设定皮肤颜色的范围，再将其过滤出来，不同的是过滤的过程在不同的颜色空间下进行的。 Haar分类器实际上是Boosting算法的一个应用，Haar分类器用到了Boosting算法中的AdaBoost算法，只是把AdaBoost算法训练出的强分类器进行了级联，并且在底层的特征提取中采用了高效率的矩形特征和积分图方法 人体骨骼匹配算法 基于骨架匹配的轮廓线提取方法可以生成静态图像中人体的轮廓线图。在图像中找到可以表征人体骨架的骨架关键点,通过骨架关键点,利用图像中各像素点所包含的边缘信息,结合人体形态学先验知识,构建了隐马尔科夫模型来匹配人体上对应骨架关键点的边缘关键点,少量的边缘关键点即可生成人体大致轮廓。 3.2分类决策 欧式距离 欧式距离也称欧几里得距离，是最常见的距离度量，衡量的是多维空间中两个点之间的绝对距离。也可以理解为：m维空间中两个点之间的真实距离，或者向量的自然长度（即该点到原点的距离）。在二维和三维空间中的欧氏距离就是两点之间的实际距离。 这里引用是用保存的已知手势特征点和预测手势图像特征点求取欧式距离再取均值，欧式距离越小，手势匹配度越高。 人工神经网络 人工神经网络，也就是ANN（Artificial Neural Network），它是模拟人类大脑处理信息的生物神经网络所产生出来的一种计算模型。而它主要用于机器学习的研究与调用，例如语音识别，计算机图像处理，NLP等。 通过前面不同手势保存的特征点，对不同手势进行学习，由已知手势预测新的手势。 决策树 决策树是一种机器学习的方法。决策树的生成算法有ID3, C4.5和C5.0等。决策树是一种树形结构，其中每个内部节点表示一个属性上的判断，每个分支代表一个判断结果的输出，最后每个叶节点代表一种分类结果。 KNN临近算法 近算法，或者说K最近邻(kNN，k-NearestNeighbor)分类算法是数据挖掘分类技术中最简单的方法之一。所谓K最近邻，就是k个最近的邻居的意思，说的是每个样本都可以用它最接近的k个邻居来代表。 引用： [1] 江勇军. 基于Kinect的孤立词手语识别系统研究[D]. 2015. [2] 刘伟康. 基于Kinect的静态数字手语识别研究及系统实现[D]. 2016. [3] 孙丽娟. 基于边缘梯度方向直方图的中国静态手语识别[D]. 2009. [4] 武红娇. 复杂背景下的静态手语识别技术研究[D]. [5] 韩宁江. 基于深度学习的手语识别方法研究[D].","categories":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.top/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"知网论文","slug":"知网论文","permalink":"https://cungudafa.top/tags/%E7%9F%A5%E7%BD%91%E8%AE%BA%E6%96%87/"},{"name":"悦读","slug":"悦读","permalink":"https://cungudafa.top/tags/%E6%82%A6%E8%AF%BB/"},{"name":"文章","slug":"文章","permalink":"https://cungudafa.top/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"在线论文正确打开方式","slug":"在线论文查看正确打开方式","date":"2020-03-06T10:05:10.000Z","updated":"2020-04-21T11:05:16.209Z","comments":true,"path":"post/6874.html","link":"","permalink":"https://cungudafa.top/post/6874.html","excerpt":"","text":"一篇在csdn审核不通过的文章23333 打开手机支付宝，搜索并关注公众号“浙江图书馆”， 免费申请读书证； 具体教程参考链接：如何免费下载中国知网文献 登录浙江省图书馆官网，在网站底部快速链接，比如中国知网，可免费下载论文； 下载的论文格式为caj格式，查看工具CAJViewer下载：在知网官网底部，安装即可。 具体教程参考链接：caj格式的文件怎么打开","categories":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.top/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"知网论文","slug":"知网论文","permalink":"https://cungudafa.top/tags/%E7%9F%A5%E7%BD%91%E8%AE%BA%E6%96%87/"},{"name":"免费","slug":"免费","permalink":"https://cungudafa.top/tags/%E5%85%8D%E8%B4%B9/"}]},{"title":"微信公众号（二）扩展分享","slug":"微信公众号（二）扩展分享","date":"2020-03-06T08:54:10.000Z","updated":"2020-04-21T11:05:51.990Z","comments":true,"path":"post/44e8.html","link":"","permalink":"https://cungudafa.top/post/44e8.html","excerpt":"","text":"前面一篇文章，我已经：微信公众号（一）基本功能实现 一、管理用具1.每个人必须收藏的网站图片中的各网址，你可能听说过，也可能没听说过；但我保证，每一个网站都是大V吐血推荐的。（可输入网址看看，你会发现新大陆！） 了解更多参考：cungudafa推荐好用工具分享记得点赞哦！ 2.浏览器插件新媒体管家 官网：xmt.cn 根据官网引导安装浏览器插件官网有教学视频，这里bilibili前辈也给出了详细的：教学视频。 这个应用分为两步管理和图文编辑： （1）应用管理（不用在每个网站单独注册，用管家账号就能登录使用）好用指数🏆🏆🏆🏆🏆运营辅助:（营销日历和素材热点，小白见了只能：“哇，双击666”）账号管理：（一天之内免登陆，竟然没有接入csdn，差评！） （2）优化微信公众号很多小细可以在之前的视频讲解里可以看到，这里单独说一下：图文编辑模块之前用的135虽好，但界面太过复杂，插件真香： 除此之外，推荐插件工具：壹伴 二、运营学习说道这一块，我还是一个小白，从头开始学习！ 前辈在视频里讲的是：从知乎免费引流课（我）代（自）表（己）这里简单归纳了一下，如图： 多平台引流 在知乎上看了大量关于微信公众号和运营的知识，学问很大。 如何给网站取名让更多人感兴趣搜索到，公众号内容定位，推广。 有一句话：“如何打败你的竞争对手，就是先关注50-100个公众号！” 我想：这意思是–知己知彼百战百胜。我目前不谋求盈利，算是自己的一点一点积累吧，学无止境。 很多人都强调，命名！！！！我的命名不是跟随站长查询的主流，而是一个对我有意义的名字：cungudafa（图中平台搜索“cungudafa”，你都可以发现我的轨迹，哈哈哈） cungudafa励志做一个代码搬运工： 学习记录在csdn 代码存放在github或gitee 知乎会回答问题（都可以留言哦） 公众号、b站、网站都是分享平台（欢迎去我的网站和微信公众号踩踩）哈哈，作为一个妥妥的码农，当然代码是根本，图中黄色星标是我活动轨迹最频繁的地方！小灯是我正在扩展的地方！如果我俩有缘，有幸在其他平台也能遇见你哦~ 最后第一张图补充完整图片：","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"微信公众号","slug":"微信公众号","permalink":"https://cungudafa.top/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"}]},{"title":"微信公众号（一）基本功能实现","slug":"微信公众号（一）基本功能实现","date":"2020-03-05T10:54:10.000Z","updated":"2020-04-21T11:05:40.446Z","comments":true,"path":"post/98ec.html","link":"","permalink":"https://cungudafa.top/post/98ec.html","excerpt":"","text":"一、注册 在微信公众号平台申请注册 信息填写（邮箱和密码对应一个账号） 选择个人订阅号个人选1，企业选2,3类型不可更改哦！选择主体类型：也是个人。根据要求：验证邮箱、身份证号、微信、管理员联系方式。 公众号信息：账号名称查重、功能介绍（如果想不出退出了，下次直接登录补充信息，不是基本信息再填写了哦！）就大功告成了！ 二、基本设置1. 公众号设置 设置-》公众号设置-》修改头像（一月可修改5次） 名称一年可修改两次 微信号（可以用此搜索到你的，我的是cungudafa）一年修改一次 简介一月修改5次 功能设置 更多详细介绍参考： 2. 回复设置功能设置-》回复设置 2.1 被关注回复参考效果：设置：参考链接 2.2 收到消息回复参考效果：设置： 2.3 关键词回复参考效果：设置：回复文字：（最常用的，平常关注公众号都是为了某盘链接嘛，直接复制粘贴到此处就行）回复图文、视频都后面说；多条回复，就是可以发送文字和图片，根据情况设置。 3. 新建图文素材管理-》素材管理：新建图文消息关注公众号，可以预览： 4. 菜单栏设置功能设置-》自定义菜单勾选历史消息列表！（当然也可以跳转自定义页面模板，这里先简单适用，后期再配置）设置好了，就会跳转到链接：菜单示例： 5. 新建文章、群发首页-》新建群发模板库导入、自建图文、转载（需要在其他公众号申请白名单）注意这里一天最多群发一次，那么需要群发多篇文章（在左侧添加，建议先创建好图文，再群发哦！珍惜群发机会~） 6. 图文排版引导图、二维码图、背景图、标题图，每一点都值得我们美化哦！ 图文排版可以用在线排版工具——135编辑器或者秀米编辑器，也可以使用chrome插件——新媒体管家和壹伴编辑插件。 重要的一点：图文如何编辑得漂亮视频教程：135编辑器的使用 嗯，第一次用135写文，精心挑选布置了好久，做好了2,3个模板，以后都粘贴复制好了！后面有用到更好的排版工具再分享。 到这里，公众号的基本使用功能已经完全具备了呢！ 记住一定要先预览，以免哪里没有改到位，再发布试试~哈哈哈，关注我就可以看到前面两篇原文了！ 可以发布消息了不是唯一哦，一个优秀的公众号除了技术博文扎实，也要有一定的维护技巧呢。此文篇幅在这里，另起一文实时记录：我的公众号是 如何优化内容（点赞、评论、赞赏，图文操作细节） 引流、分析 插件使用 7. 页面模板功能-》页面模板 页面模板视频教程 修改位置：（这里由于我的文章篇幅较少，暂时还没设置，预分类：技术栈和分享专栏吧。） 长网址转短网址：新浪短网址 彩色二维码制作：草料二维码生成器","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"微信公众号","slug":"微信公众号","permalink":"https://cungudafa.top/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"}]},{"title":"（阿里云Ubantu16）nginx配置https安全访问","slug":"（阿里云Ubantu16）nginx配置https安全访问","date":"2020-03-02T05:59:10.000Z","updated":"2020-04-21T11:02:38.154Z","comments":true,"path":"post/ccbf.html","link":"","permalink":"https://cungudafa.top/post/ccbf.html","excerpt":"","text":"一、获取证书【SSL证书作用】：允许https安全访问 第一步：到官网申请免费SSL证书：阿里云免费SSL证书申请 第二步：回到控制台这里选择自助验证！自助验证会在域名下添加如下解析：点击验证后，即成功！（验证后可删除） 第三步：刷新控制台，下载SSL证书这里可选择多种类型：（这里配置在nginx）我是apache和nginx环境，要单独处理一下端口号的问题。 查看443端口是否被占用：lsof -i:443 (第一个是阿里云解析地址不用管，后面apache2占用443端口需要关闭)关闭方法：vi /etc/apache2/ports.conf 80-&gt;82,443-&gt;442 重启Apache: sudo /etc/init.d/apache2 restart 再查看端口：（apache2已释放） 上传SSL证书在/usr/local/nginx/下，新建ssl目录，并上传两个解压文件，重命名如下： 修改Nginx安装目录下的nginx.conf，本人的安装目录在/usr/local/nginx/conf/nginx.conf，根据自己安装的目录适当修改#这句是代表 把http的域名请求转成https rewrite ^(.*) https:&#x2F;&#x2F;$server_name$1 permanent; 将以下注释#去掉，修改目录位置为证书存放的位置： 重新加载nginx配置文件 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -t 只有ok，successful才配置成功！![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302123010275.png) 重启nginx &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload 再访问域名或公网ip，就是安全地址https开头的啦~~","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://cungudafa.top/tags/nginx/"},{"name":"https","slug":"https","permalink":"https://cungudafa.top/tags/https/"},{"name":"SSL","slug":"SSL","permalink":"https://cungudafa.top/tags/SSL/"}]},{"title":"【TensorFlow&Keras】入门猫狗数据集实验--理解卷积神经网络CNN","slug":"【TensorFlow&Keras】入门猫狗数据集实验--理解卷积神经网络CNN","date":"2020-03-01T14:59:10.000Z","updated":"2020-04-21T11:02:54.316Z","comments":true,"path":"post/1d90.html","link":"","permalink":"https://cungudafa.top/post/1d90.html","excerpt":"","text":"前言 1、TensorFlow&amp;Keras环境配置 这里选择Jupyter Notebook，好处不言而喻，可上网查看，这里不赘述； 在windows10下安装Anaconda3并配置好环境，启动Anaconda Navigator，在其面板里下载配置TensorFlow、Keras、Jupyter Notebook、Vscode等库； 2、入门猫狗数据集实验 下载Kaggle狗猫数据集（mnist数据集略），按照 参考教程,完成狗猫数据集的分类实验；解释什么是overfit（过拟合），什么是数据增强？ 3、理解卷积神经网络CNN 一、环境配置1.安装anacondaanaconda和python库是类似的，如果在同一计算机安装了两个环境，注意在IDE中选择对应的编译库。（pip安装都在anaconda目录下，而不在python安装目录下） 清华下载源：https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/官方安装教程：http://docs.anaconda.com/anaconda/install/windows/ anaconda官方使用教程：http://docs.anaconda.com/anaconda/user-guide/getting-started/ 2.jupyter notebook配置2.1修改运行时工作目录jupyter默认打开的工作空间是C盘，当然，第一件事是修改工作目录了。wn10直接打开菜单目录，修改快捷键的属性即可：修改目标位置为你的工作空间（我的在D盘）和起始位置（置空）：再打开jupyter，目录显示应该在你的指定位置。 jupyter是做数据处理和图像显示比任何一款IDE都优势一些的工具： 常用指令参考：https://blog.csdn.net/5hongbing/article/details/78526196navigator使用教程：http://docs.anaconda.com/anaconda/navigator/getting-started/ 2.2添加jupyter_contrib_nbextensions插件原生jupyter是没有：自动补全代码功能+pep8+字体大小+代码行号+拼写检查+目录索引这些功能的；当然有插件能帮我们完成. 安装jupyter_contrib_nbextensions库： pip install jupyter_contrib_nbextensions -i https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F; 配置到jupyter jupyter contrib nbextension install --user --skip-running-check 重启jupyter notebook安装完成后，重新启动jupyter notebook，“Nbextensions”出现在导航栏中，勾选目录在原来的基础上勾选： “Table of Contents” 以及 “Hinterland”等，（tips:autopep8需要安装pip install autopep8）目录使用规则和Markdown相似，# 一级 ## 二级现在万事俱备了，接下来安装TensorFlow和keras。 3. 配置TensorFlow、Keras有两种方法安装： 启动Anaconda Navigator，在其面板里下载配置TensorFlow、Keras等待下载完成，测试： 在cmd中pip安装：（第一种方法虽好，但我还是热衷于命令行🥰）Files-&gt;New-&gt;Teminal命令行安装： pip install tensorflowpip install keras exp： 同理，在cmd中安装效果一样，肯定人和我的喜好一样，haha~ 二、入门实例-猫狗数据集1.制作数据集 在数据分析处理这一块，原数据模型是最值价的了，常用的是kaggle网站的数据集 从Kaggle下载猫狗数据集或者：链接：https://pan.baidu.com/s/13hw4LK8ihR6-6-8mpjLKDA 密码：dmp4 根据教程完成对猫狗数据集的处理： （1）运行程序：根据命名对图片分类：详细文件内容：图片分类： import os, shutil# The path to the directory where the original# dataset was uncompressedoriginal_dataset_dir = 'D:/python_project/kaggle_Dog&amp;Cat/train'# The directory where we will# store our smaller datasetbase_dir = 'D:/python_project/kaggle_Dog&amp;Cat/find_cats_and_dogs'os.mkdir(base_dir)# Directories for our training,# validation and test splitstrain_dir = os.path.join(base_dir, 'train')os.mkdir(train_dir)validation_dir = os.path.join(base_dir, 'validation')os.mkdir(validation_dir)test_dir = os.path.join(base_dir, 'test')os.mkdir(test_dir)# Directory with our training cat picturestrain_cats_dir = os.path.join(train_dir, 'cats')os.mkdir(train_cats_dir)# Directory with our training dog picturestrain_dogs_dir = os.path.join(train_dir, 'dogs')os.mkdir(train_dogs_dir)# Directory with our validation cat picturesvalidation_cats_dir = os.path.join(validation_dir, 'cats')os.mkdir(validation_cats_dir)# Directory with our validation dog picturesvalidation_dogs_dir = os.path.join(validation_dir, 'dogs')os.mkdir(validation_dogs_dir)# Directory with our validation cat picturestest_cats_dir = os.path.join(test_dir, 'cats')os.mkdir(test_cats_dir)# Directory with our validation dog picturestest_dogs_dir = os.path.join(test_dir, 'dogs')os.mkdir(test_dogs_dir)# Copy first 1000 cat images to train_cats_dirfnames = ['cat.&#123;&#125;.jpg'.format(i) for i in range(1000)]for fname in fnames: src = os.path.join(original_dataset_dir, fname) dst = os.path.join(train_cats_dir, fname) shutil.copyfile(src, dst)# Copy next 500 cat images to validation_cats_dirfnames = ['cat.&#123;&#125;.jpg'.format(i) for i in range(1000, 1500)]for fname in fnames: src = os.path.join(original_dataset_dir, fname) dst = os.path.join(validation_cats_dir, fname) shutil.copyfile(src, dst) # Copy next 500 cat images to test_cats_dirfnames = ['cat.&#123;&#125;.jpg'.format(i) for i in range(1500, 2000)]for fname in fnames: src = os.path.join(original_dataset_dir, fname) dst = os.path.join(test_cats_dir, fname) shutil.copyfile(src, dst) # Copy first 1000 dog images to train_dogs_dirfnames = ['dog.&#123;&#125;.jpg'.format(i) for i in range(1000)]for fname in fnames: src = os.path.join(original_dataset_dir, fname) dst = os.path.join(train_dogs_dir, fname) shutil.copyfile(src, dst) # Copy next 500 dog images to validation_dogs_dirfnames = ['dog.&#123;&#125;.jpg'.format(i) for i in range(1000, 1500)]for fname in fnames: src = os.path.join(original_dataset_dir, fname) dst = os.path.join(validation_dogs_dir, fname) shutil.copyfile(src, dst) # Copy next 500 dog images to test_dogs_dirfnames = ['dog.&#123;&#125;.jpg'.format(i) for i in range(1500, 2000)]for fname in fnames: src = os.path.join(original_dataset_dir, fname) dst = os.path.join(test_dogs_dir, fname) shutil.copyfile(src, dst) （2）统计图片数量： print('total training cat images:', len(os.listdir(train_cats_dir)))print('total training dog images:', len(os.listdir(train_dogs_dir)))print('total validation cat images:', len(os.listdir(validation_cats_dir)))print('total validation dog images:', len(os.listdir(validation_dogs_dir)))print('total test cat images:', len(os.listdir(test_cats_dir)))print('total test dog images:', len(os.listdir(test_dogs_dir))) 猫狗训练图片各1000张，验证图片各500张，测试图片各500张。 2.卷积神经网络CNN快速开发基准模型：面对一个任务，通常需要快速验证想法，并不断迭代。因此开发基准模型通常需要快速，模型能跑起来，效果比随机猜测好一些就行，不用太在意细节。至于正则化、图像增强、参数选取等操作，后续会根据需要来进行。^3 2.1 网络模型搭建model.summary()输出模型各层的参数状况 from keras import layersfrom keras import modelsmodel = models.Sequential()model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)))model.add(layers.MaxPooling2D((2, 2)))model.add(layers.Conv2D(64, (3, 3), activation='relu'))model.add(layers.MaxPooling2D((2, 2)))model.add(layers.Conv2D(128, (3, 3), activation='relu'))model.add(layers.MaxPooling2D((2, 2)))model.add(layers.Conv2D(128, (3, 3), activation='relu'))model.add(layers.MaxPooling2D((2, 2)))model.add(layers.Flatten())model.add(layers.Dense(512, activation='relu'))model.add(layers.Dense(1, activation='sigmoid'))model.summary() 2.2 图像生成器读取文件中数据 model.compile()优化器(loss：计算损失，这里用的是交叉熵损失,metrics: 列表，包含评估模型在训练和测试时的性能的指标) 所有图片（2000张）重设尺寸大小为150x150大小 ImageDataGenerator就像一个把文件中图像转换成所需格式的转接头，通常先定制一个转接头train_datagen，它可以根据需要对图像进行各种变换，然后再把它怼到文件中（flow方法是怼到array中），约定好出来数据的格式（比如图像的大小、每次出来多少样本、样本标签的格式等等）。这里出来的train_generator是个（X,y）元组，X的shape为(20,150,150,3)，y的shape为(20,)2.3 开始训练generator()loss 损失函数值，与你定义的损失函数值相关acc 准确率mean_absolute_error 平均绝对误差前面带val_表示你的模型在验证集上进行验证时输出的这三个值，验证在每个epoch后进行一个选拔的故事（acc,loss,val_acc,val_loss的区别)：http://www.pianshen.com/article/5415291383/2.4 保存模型2.5 结果可视化训练结果如下图所示，很明显模型上来就过拟合了，主要原因是数据不够，或者说相对于数据量，模型过复杂（训练损失在第30个epoch就降为0了）。import matplotlib.pyplot as pltacc = history.history['acc']val_acc = history.history['val_acc']loss = history.history['loss']val_loss = history.history['val_loss']epochs = range(len(acc))plt.plot(epochs, acc, 'bo', label='Training acc')plt.plot(epochs, val_acc, 'b', label='Validation acc')plt.title('Training and validation accuracy')plt.legend()plt.figure()plt.plot(epochs, loss, 'bo', label='Training loss')plt.plot(epochs, val_loss, 'b', label='Validation loss')plt.title('Training and validation loss')plt.legend()plt.show() 3.根据基准模型进行调整为了解决过拟合问题，可以减小模型复杂度，也可以用一系列手段去对冲，比如增加数据（图像增强、人工合成或者多搜集真实数据）、L1/L2正则化、dropout正则化等。这里主要介绍CV中最常用的图像增强。 3.1 图像增强方法在Keras中，可以利用图像生成器很方便地定义一些常见的图像变换。将变换后的图像送入训练之前，可以按变换方法逐个看看变换的效果。代码如下： datagen = ImageDataGenerator( rotation_range=40, width_shift_range=0.2, height_shift_range=0.2, shear_range=0.2, zoom_range=0.2, horizontal_flip=True, fill_mode='nearest')# This is module with image preprocessing utilitiesfrom keras.preprocessing import imagefnames = [os.path.join(train_cats_dir, fname) for fname in os.listdir(train_cats_dir)]# We pick one image to \"augment\"img_path = fnames[3]# Read the image and resize itimg = image.load_img(img_path, target_size=(150, 150))# Convert it to a Numpy array with shape (150, 150, 3)x = image.img_to_array(img)# Reshape it to (1, 150, 150, 3)x = x.reshape((1,) + x.shape)# The .flow() command below generates batches of randomly transformed images.# It will loop indefinitely, so we need to `break` the loop at some point!i = 0for batch in datagen.flow(x, batch_size=1): plt.figure(i) imgplot = plt.imshow(image.array_to_img(batch[0])) i += 1 if i % 4 == 0: breakplt.show() 3.2 模型调整 将这几种选定的图像增强方法添加进训练集的生成器中（train_datagen）； 在模型结构中加入一层Dropout（在Flatten层后加上 Dropout(0.5)）。调整并重新训练改为100个epoch。重新训练后的结果如图所示。可以看出，准确率由基准的67%提高到82%，进一步调整模型还可以提升到86%左右。但是进一步就再难以继续提升了，因为数据太少，且模型比较粗糙，下一节我们会采取其他更有效的措施。4. 卷积神经网络的可视化 教程 导入100次训练模型，查看模型参数 from keras.models import load_modelmodel = load_model('cats_and_dogs_small_1.h5')model.summary() # As a reminder. 模型预处理 img_path = 'D:/python_project/kaggle_Dog&amp;Cat/find_cats_and_dogs/test/cats/cat.1502.jpg'# We preprocess the image into a 4D tensorfrom keras.preprocessing import imageimport numpy as npimg = image.load_img(img_path, target_size=(150, 150))img_tensor = image.img_to_array(img)img_tensor = np.expand_dims(img_tensor, axis=0)# Remember that the model was trained on inputs# that were preprocessed in the following way:img_tensor /= 255.# Its shape is (1, 150, 150, 3)print(img_tensor.shape) 输入一张不属于网络的猫的图像 import matplotlib.pyplot as pltplt.imshow(img_tensor[0])plt.show() 为了提取想要查看的特征图，我们需要创建一个Keras模型，以图像批量作为输入，并输出所有卷积层和池化层的激活。为此，我们需要使用Keras的Model类。模型实例化需要两个参数：一个输入张量（或输入张量的列表）和一个输出张量（或输出张量的列表）。 layer_outputs:提取前8层的输出 activation_model:创建一个模型，给定模型的输入，可以返回这些输出 activations :输入一张图像，这个模型将返回8个Numpy数组组成的列表，每个层激活对应一个Numpy数组它是大小为148*148的特征图，有32个通道。我们来绘制原始模型第3个通道:再看看第30个通道：我们可以看到，似乎不同通道对于图像检测有不同侧重，比如第3个通道更侧重于边缘检测，第30个通道更侧于”绿色圆点“检测。 下面我们来绘制网络中所有激活的完整可视化图。我们需要在8个特征图里的每一个都提取并绘制一个通道，然后将结果叠加在一个大的图像张量中，按通道并排。 参考：可视化中间激活^2 三、CNN模型3.1 神经网络结构 单层神经网络表达式：（也称为Logistic回归模型） 多层神经网络结构表达式：（如此一层一层的加上去，最终就形成了深度神经网络）3.2 卷积神经网络CNN 参考：cnn算法 卷积神经网络CNN的结构一般包含这几个层：^1 输入层：用于数据的输入 卷积层：使用卷积核进行特征提取和特征映射 激励层：由于卷积也是一种线性运算，因此需要增加非线性映射 池化层：进行下采样，对特征图稀疏处理，减少数据运算量。 全连接层：通常在CNN的尾部进行重新拟合，减少特征信息的损失 CNN的三个特点： 局部连接：这个是最容易想到的，每个神经元不再和上一层的所有神经元相连，而只和一小部分神经元相连。这样就减少了很多参数 权值共享：一组连接可以共享同一个权重，而不是每个连接有一个不同的权重，这样又减少了很多参数。 下采样：可以使用Pooling来减少每层的样本数，进一步减少参数数量，同时还可以提升模型的鲁棒性。","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"https://cungudafa.top/tags/tensorflow/"},{"name":"keras","slug":"keras","permalink":"https://cungudafa.top/tags/keras/"},{"name":"CNN","slug":"CNN","permalink":"https://cungudafa.top/tags/CNN/"}]},{"title":"为你的博客引入——今日诗词、每日一言（js插件分享）","slug":"为你的博客引入——今日诗词、每日一言（js插件分享）","date":"2020-02-23T09:14:10.000Z","updated":"2020-04-21T11:05:02.986Z","comments":true,"path":"post/3af9.html","link":"","permalink":"https://cungudafa.top/post/3af9.html","excerpt":"","text":"一、今日诗词今日诗词API，是一个可以返回一句古诗词名句的接口。它可以通过图片和 JSON 格式调用。今日诗词 API 根据不同地点、时间、节日、季节、天气、景观、城市进行智能推荐。 官网：www.jinrishici.com &lt;h1&gt; 念两句诗&lt;/h1&gt; &lt;p id=\"poem\"&gt; 叙别梦、扬州一觉。&lt;/p&gt; &lt;p id=\"info\"&gt; 【宋代】吴文英《夜游宫·人去西楼雁杳》&lt;/p&gt;&lt;script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt; jinrishici.load(function(result) &#123; var poem = result.data.content; var info = \"【\"+result.data.origin.dynasty+\"】\"+ result.data.origin.author +\"《\" + result.data.origin.title + \"》\"; document.getElementById(\"poem\").value(poem); document.getElementById(\"info\").value(info); &#125;)&lt;/script&gt; 二、每日一言一言网（hitokoto.cn）创立于 2016 年，隶属于萌创团队，目前网站主要提供一句话服务。 动漫也好、小说也好、网络也好，不论在哪里，我们总会看到有那么一两个句子能穿透你的心。我们把这些句子汇聚起来，形成一言网络，以传递更多的感动。如果可以，我们希望我们没有停止服务的那一天。 简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。 或是感动，或是开心，有或是单纯的回忆。来到这里，留下你所喜欢的那一句句话，与大家分享，这就是一言存在的目的。 官网：hitokoto.cn &lt;script type=\"text/javascript\" src=\"https://你的域名/hitokoto/?format=js&amp;charset=utf-8\"&gt;&lt;/script&gt;&lt;div id=\"hitokoto\"&gt;&lt;script&gt;hitokoto()&lt;/script&gt;&lt;/div&gt;","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"每日一言","slug":"每日一言","permalink":"https://cungudafa.top/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%A8%80/"},{"name":"今日诗词","slug":"今日诗词","permalink":"https://cungudafa.top/tags/%E4%BB%8A%E6%97%A5%E8%AF%97%E8%AF%8D/"},{"name":"js插件","slug":"js插件","permalink":"https://cungudafa.top/tags/js%E6%8F%92%E4%BB%B6/"}]},{"title":"Github+Hexo博客增添相册功能","slug":"Github+Hexo博客增添相册功能","date":"2020-02-18T17:14:10.000Z","updated":"2020-04-21T11:03:37.869Z","comments":true,"path":"post/2b2b.html","link":"","permalink":"https://cungudafa.top/post/2b2b.html","excerpt":"","text":"前言：hexo的sakura主题默认是不含有相册页面的,如果想添加此页面需自行编写效果图预览，思路： 不能把所有图片都放在source静态资源下，一是数据量太大，增加Hexo的负担（所以我们把图片放在github），二是加载高清大图片资源缓慢（所以我们用python对图片进行批量压缩处理），这样加载呈现压缩图，点击才加载原图。 本文参考于Hexo+Github实现相册功能作者：LawLite，原文主要是思路，实践是有坑的，这又是一篇填坑的文章。 一、图片的处理 首先资源图片是是存放在GitHub上,你在github准备一个仓库。我gihub名为cungudafa，仓库名为img，这里找到你的克隆地址，我的地址为：https://github.com/cungudafa/img.git 本地准备一个文件夹来存储和管理图片(Git管理，需要提前安装) 在电脑上随便一个位置创建一个新的文件夹，这里我创建文件夹名称叫Blog_Album 然后打开git，cd到此文件夹执行git clone https://github.com/cungudafa/img.git命令克隆github上仓库。 git clone https:&#x2F;&#x2F;github.com&#x2F;你的github名&#x2F;仓库名.git 克隆完毕在Blog_Album目录下就会有img这个文件夹（以下img都指这个目录也指我的github仓库名），里面有.git文件和其他图片资源。（我们后序用脚本快速处理相册，会使用到这个.git） 在img文件夹内新建一个文件夹/photos 在这里存放你需要放在博客中的图片。（存放名称格式如下：2020-02-02_discriptionofyourpic.jpg；最前面是日期，然后用_进行分隔；后面是图片的描述信息，注意不要包含_和.符号，最好也不要用中文命名） 附：python脚本（需要有python环境哦）快速处理图片命名：（下载ImageRename.py，在cmd中运行python ImageRename.py,能快速在名称前加上最新一次修改日期） Hexo中我们的相册是采用ins样式显示的，为了快速加载显示图片，我们还需要制作图片的压缩图和图片的序列data.json。同样这里才用一个Python小脚本对图片进行压缩编辑，并且上传到自己的GitHub。 下载脚本ImageProcess.py和tool.py文件至此文件夹内（Blog_Album\\img） 说明：ImageProcess为裁剪方法，tools工具类；还创建了min_photos文件夹存放缩略图；json由tools脚本生成的，后面hexo用到的。 运行tool.py脚本要安装python环境哦！(python tool.py 或者用Edit with IDLE也可以)如果执行tool.py的时候如果没有PIL库的话会报错，安装即可。安装PIL只需在cmd中执行：pip install Pillow就可以了。 其中，tools由LawLite大牛编写，这里引用；其中包含压缩图片，裁剪图片，github提交，json处理四个部分。（gihub提交部分需要把git.exe的位置（例：D:\\mydownload\\Git\\bin）添加到path环境变量中去；由于我们是克隆的img项目，此时用到的就是.git提交，非常方便了！） 运行效果： 已上传内容： 说明：执行后会生成data.json文件，此文件存储了图片的链接，名称和简介。 二、博客页面 修改themes\\sakura\\languages\\zh-cn.yml的photo：图集为相册 photos: 相册 修改配置themes\\sakura\\_config.yml修改 图集: {path: /tags/图集/, fa: fa-photo }改为或添加相册 相册: &#123;path: &#x2F;photos&#x2F;, fa: fa-photo &#125; 在博客根目录下添加photo页面hexo n page photos，会在source下创建以下目录： 把data.json复制到\\photos下，为了方便，也可以修改tools.py的大约135行位置处，以后在运行脚本时，直接保存到此处： # 这里可以直接修改到你的hexo资源目录#with open(&quot;data.json&quot;,&quot;w&quot;) as fp:with open(&quot;D:&#x2F;myworkspace&#x2F;1GitHub_cungudafa&#x2F;MyWeb&#x2F;source&#x2F;photos&#x2F;data.json&quot;,&quot;w&quot;) as fp: json.dump(final_dict, fp) json.dump(final_dict, fp) 在photos中的 index.md 加载相册内容部分。 说明：原作者用的index.ejs（主题yilia），我修改到index.md中（主题是sakura），由此生成index.html；如果需要修改样式或添加内容，改这里即可。 因为相册渲染用不到sakura主题，所以还需要额外添加css文件和js文件，我的样式链接js_css，将js和css中的内容也复制到MyWeb\\source\\photos下； 说明： （1）assets目录下放的是一张empty.png图片，原作者在ins.js中引用了此图片也没有特别说明，我的链接里给出来了，补坑； （其次，原作者的assets和photos同级目录，我放在photos目录里，特别修改了这两个位置，下载我的js已经修改过了。） 特别修改： （2）自己动手，修改ins.js里大约在119行左右的链接修改为你的GitHub的仓库地址：（我的示例：cungudafa/img修改为你的github名/你的github仓库名） &#x2F;&#x2F; 需要修改https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;你的github名&#x2F;你的github仓库名&#x2F;master&#x2F;min_photos&#x2F;即可var minSrc &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;cungudafa&#x2F;img&#x2F;master&#x2F;min_photos&#x2F;&#39; + data.link[i];var src &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;cungudafa&#x2F;img&#x2F;master&#x2F;photos&#x2F;&#39; + data.link[i]; 注意点：确保你的图片地址是正确的，否则加载不出来，检测方法可以将选择一个图片地址看能不能再浏览器中打开。如图是点击download下载后的链接，是https://raw.githubusercontent.com 开头的，不是图片的存储地址，否则加载不出。 hexo clean &amp;&amp;hexo g &amp;&amp;hexo s直接生成photos\\index.html到这里，博客相册功能已经实现了，本文已经结束！点击可查看效果：我的相册 现在有个问题是不能点击查看大图！坑二：作者用的主题融合了photoswipe插件功能，其他主题或者任意html要想使用，还得单独导入相关css和js。 三、其他配置 下载样式文件（我的img图库已经很大了，不方便下载，这里给一个前人的下载链接） 1.1 photos目录下添加photoswipe.css、photoswipe-ui-default.min.js、photoswipe.min.js， 1.2 photos目录下新建default-skin目录，添加如下文件： 1.3 在source\\photos\\index.md相册文件前加上样式： &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;ins.css&quot;&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;photoswipe.css&quot;&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;default-skin&#x2F;default-skin.css&quot;&gt; &lt;script src&#x3D;&quot;.&#x2F;photoswipe.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;.&#x2F;photoswipe-ui-default.min.js&quot;&gt;&lt;&#x2F;script&gt; 查看大图：（手机端也适应哦！） 如果想要全局都使用photoswipe效果的话，可以把js和css配置在theme主题中，在head、footer分别加上相应引入，额外还要添加一些配置哦：photoswipe 移动端PC端兼容图片相册预览 。 给出一个教程腾讯云+hexo搭建相册 现在项目相册部分完美！接下来是视频部分~~ 踩坑、填坑、学习记录 走起 ending~ 更多小王的技术博客:[cungudafa-csdn](https://blog.csdn.net/cungudafa/article/details/104378416)","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"图集","slug":"图集","permalink":"https://cungudafa.top/tags/%E5%9B%BE%E9%9B%86/"}]},{"title":"程序媛交友","slug":"程序媛交友","date":"2020-02-16T09:54:10.000Z","updated":"2020-04-23T00:48:14.732Z","comments":true,"path":"post/adab.html","link":"","permalink":"https://cungudafa.top/post/adab.html","excerpt":"","text":"个人资料 姓名：小王 :) 昵称：cungudafa 性别：女 邮箱：cungudafa@163.com 常驻博客： CSDN-cungudafa csdn 博客：https://cungudafa.top 项目仓库： github-cungudafa 码云—cungudafa 项目演示快速门： b站-cungduafa Tips：学弟学妹们，大部分作业参考，切记不可Ctrl+cv哦！（面试会吃亏~） 学习经历目前在读大四物联网工程专业程序媛一枚 学习路线： c++/c#/Python/Java MySQL/SqlServer Linux/ Javaweb/Android/WeApp Pr 数据结构/数据库原理 专业经验一部分是前后端 SSM JavaWeb BootStrap+LayUI+vue Vue+Springboot前后端分离 二部分是嵌入式 Linux RaspberryPi 三部分是杂类 云服务器搭建 python爬虫 微信小程序（不太精） 面试经验优先级： 竞赛经验 > 项目经验 > 基础知识 国家级证书 > github开源项目pr > 有深度的博客 时间线安排：1、竞赛 （计算机相关竞赛证书的含金量是很高的哦，软考也是的呢）从大一到大三都要积极报名参与，见见世面、丰富知识、明确自己的发展方向大四就来不及竞赛咯2、项目经验 重视学校的课程设计、工程实践、实习内容，不要马马虎虎哦，甚至参与github上的开源项目等，如果你能提交过相应代码是更好的；这些都是大量时间磨出来的，是提升自身的技能的关键的因素；写程序这件事儿就好比打王者荣耀，只知道清兵推塔原理是不行的，要在很多次练习后才知道——铭文（软硬件环境），出装（哪一门语言），走位（语法知识），探草丛（打断点），预判（抛异常）。如果能把一段时间的项目进行总结是最好不过的啦，这里舔一手CSDN啦，在这里写博客记录能被推流，很nice~3、基础知识 计算机网络原理、算法与数据结构、数据库技术..重中之重！不用说也知道，基础这件事儿，重要重要！！！面试必考千万不能等到面试前一个月再刷哦，重在日积月累，还要温故知新，有很多课堂没有细讲、作业中没有涉及到，但又是面试常见，必须理解的基础知识。目前，小王签订了 物联网及智能家居方向 的offer，2020年7月将去上有天堂下有苏杭的杭州打拼，一路上可能会很难，好在还可以认识很多有趣的人。 ！！！建议考研！！！ 考研很难的，考上了就很香的，虽然我没有选择这条路，但我以后某一天，也许会后悔吧~致敬考研过的每一个人！你们都是棒棒哒~ 目前阶段 1、补知识（算法题看心情刷） 📃基础知识，温故而知新！！要当做刷微博一样来看啊~ 2、博客会发一些好玩有趣的东西⊙▽⊙ 嗯，目前程序员女朋友的相册是这样的这篇文章的阅读数最高，看来大家日常感兴趣的点也在这吧，预览 hexo-sakura搭建博客专栏已经写的差不多啦，爱鼓捣认证了~ 3、大四毕设准备中（ ==人体动作识别== 手语 相关~）大致思路是openpose和CNN相关 图源：电影《芳华》片段 如果对之前的文章有异议，或优化，都可以留言私信，看见一定回。共同进步，加油！！ 文末彩蛋很多人问过，头像是不是本人；这里安利：我的女神： :) 韩孝周 :) :) 小王 :)有人说我头大? 我第一个不服(ง •̀_•́)ง 共同进步！！ wpac_init = window.wpac_init || []; wpac_init.push({widget: 'Comment', id: 23889}); (function() { if ('WIDGETPACK_LOADED' in window) return; WIDGETPACK_LOADED = true; var mc = document.createElement('script'); mc.type = 'text/javascript'; mc.async = true; mc.src = 'https://embed.widgetpack.com/widget.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling); })(); Comments System WIDGET PACK","categories":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.top/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.top/tags/%E7%94%9F%E6%B4%BB/"}]},{"title":"Github+PicGo+cdn配置私人图床（丝滑操作撰写md文章）","slug":"Github+PicGo配置私人图床","date":"2020-02-14T12:50:10.000Z","updated":"2020-04-21T11:04:24.463Z","comments":true,"path":"post/2103.html","link":"","permalink":"https://cungudafa.top/post/2103.html","excerpt":"","text":"一、什么是图床图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。 简单来说就是：在文章中引用指定网址显示图片。平常我们都是在网络上复制粘贴网络图片的地址，太out了，如何快速引用本地图片呢？？？ 二、配置教程1.获取Token github云端仓库位置： 延续上一次cdn的仓库失败。（建议新建一个仓库，发布过release版本号的仓库会使用异常） 进入设置Setting 选择开发者设置Developer setting 选择个人数据帧Personal access tokens，生成新的数据帧 Generate new token 命名为picgo（图床），赋予仓库权限 最后点击Generate token即可看到显示的token页面，==它只会显示一次，关闭页面后再打开这个页面就不会显示了。== 复制token值粘贴到文本文档中，先保存下来，后面配置PicGo要用到。2.本地安装图片上传工具 首先下载PicGo，图片上传工具PicGo下载地址:https://github.com/Molunerfinn/PicGo/releases 如果下载速度非常慢的话，备用地址：传送门 密钥：n5wu 安装配置PicGo 设定仓库名：这个是刚刚第一步所新建仓库的名称，我的为cdn，此处填写格式username/repo。 设定分支名：master，采用默认分支即可 设定Token：此处填写上一步得到的Token，添加到输入框即可。 指定存储路径：自定义，例：images/，相当于在刚刚新建的仓库下新建了一个文件夹。 设定自定义域名：cdn加速格式：https://cdn.jsdelivr.net/gh/username/repo，username为GitHub用户名，repo为新建的仓库，用于存储图片 设置快捷键ctrl+shit+C: 在qq截屏ctrl+alt+a后，再ctrl+shit+C可以快速上传 三、上传方法 快捷键上传 拖拽上传上传后，云端图片显示： 使用方法：选择相册，可复制、修改链接、删除图片（不能删除github上的图片，需要手动删除）：最终在md使用链接时出现错误，原因是我的cdn发布过release版本号，最有效的解决办法就是新建一个仓库，重新配置本地picgo的名称就好，此时相册显示也正常。md显预览也正常。ps.在vscode中点击右上角可分屏查看，快捷键ctrl+shift+v可快速预览Markdown文章。 四、结合Typora写文 3.7日增加： 如果pic显示上传不成功！有可能你在其他地方向仓库上传了资料，此时打开github重新获取token修改即可。 可以在picGo设置快捷键，修改时按住Ctrl+shift+C即可。 我们常用的是QQ快速截屏：ctrl+Alt+A截屏 然后ctrl+shift+C直接使用picGo将截图上传github， 到任何要使用的地方粘贴：ctrl+V 效果——这是我在编辑typora时的截图：（这都对用户来说都是透明操作，丝滑般写文）这里我加上了开机自启动，为了方便我编辑md（这里推荐typora编辑器，安装时记得配置typora偏好设置-》图像路径-》./当前文件夹） 这里再也不担心Typora写文发布时，图片无法显示的问题了。","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"私人图床","slug":"私人图床","permalink":"https://cungudafa.top/tags/%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/"}]},{"title":"2020年2月4日情人节随笔","slug":"2020年2月4日情人节随笔","date":"2020-02-13T14:59:10.000Z","updated":"2020-04-21T11:03:05.270Z","comments":true,"path":"post/ff18.html","link":"","permalink":"https://cungudafa.top/post/ff18.html","excerpt":"","text":"疫情期间，姑已经在家呆了二十天了，可是为国家省心的好孩子。 明天就是2月14号了，如何度过这个西方的浪漫节日呢？ 当然，不建议出门聚会哦！ 划重点： 你会如何选择在家度过美好的一天呢？ 美食party（自制火锅，家庭烤肉)(烘焙蛋糕，布丁甜点…） 甜甜的韩剧/美剧《爱的迫降》–蝉联电视剧话题性冠军一个月！ 点击观看第一集 在家法则：能躺下就不要坐着，煲剧ing~ 2020年2月13日 22:55:30 姑 对你说: 晚安海绵宝宝，晚安小蜗，晚安派大星，晚安章鱼哥，晚安珊迪，晚安蟹老板，晚安皮老板，晚安泡芙老师，晚安唔西迪西，晚安玛卡巴卡，晚安依古比古，晚安汤姆布利波，晚安小点点，晚安叮叮车，晚安哈呼呼，晚安小仙女。 ​​​","categories":[{"name":"生活","slug":"生活","permalink":"https://cungudafa.top/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://cungudafa.top/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Botui搭建js聊天机器人","slug":"Botui搭建js聊天机器人","date":"2020-02-13T10:14:10.000Z","updated":"2020-04-23T00:49:17.448Z","comments":true,"path":"post/81c1.html","link":"","permalink":"https://cungudafa.top/post/81c1.html","excerpt":"","text":"一、Botui简介一款自动回复文字、图片、视频的JS聊天机器人框架BotUI，可以自由设置多种选项、触发关键词、输入框等内容，聊天内容或范围也可以自由设置，回复内容可以是文字、图片（GIF亦可）、视频，我在博客中引用了此框架。可点击查看me？试试看。 项目地址：https://botui.org 二、使用教程Botui是结合Vue和Botui.js的自动回复界面：模拟对话：在html中使用直接引入vue和js即可，使用教程；这里我是基于Hexo界面（Sakura）主题，融合vue到botui.js中了： 在主目录\\source\\下新建目录about，新建index.md（sakura特点是将index.md文件直接转换成about\\index.html）index.md关键代码是： &lt;bot-ui&gt;&lt;&#x2F;botui&gt;&lt;script src&#x3D;&quot;&#x2F;js&#x2F;botui.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;bot_ui_ini()&lt;&#x2F;script&gt; 完整代码： ---title: aboutdate: 2020-2-12 22:14:36keywords: 关于description: comments: falsephotos: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;cungudafa&#x2F;cdn&#x2F;img&#x2F;banner&#x2F;about.jpg---&#123;% raw %&#125;&lt;!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 --&gt;&lt;div class&#x3D;&quot;entry-content&quot;&gt; &lt;div class&#x3D;&quot;moe-mashiro&quot; style&#x3D;&quot;text-align:center; font-size: 50px; margin-bottom: 20px;&quot;&gt;[さくら荘のcungudafa]&lt;&#x2F;div&gt; &lt;div id&#x3D;&quot;hello-mashiro&quot; class&#x3D;&quot;popcontainer&quot; style&#x3D;&quot;min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;&quot;&gt; &lt;center&gt; &lt;p&gt; &lt;&#x2F;p&gt; &lt;h4&gt; 与&amp;nbsp;&lt;ruby&gt; cungudafa&amp;nbsp;&lt;rp&gt; （&lt;&#x2F;rp&gt; &lt;rt&gt; 真（ま）白（しろ）&lt;&#x2F;rt&gt; &lt;rp&gt; ）&lt;&#x2F;rp&gt; &lt;&#x2F;ruby&gt; 对话中...&lt;&#x2F;h4&gt; &lt;p&gt; &lt;&#x2F;p&gt; &lt;&#x2F;center&gt; &lt;bot-ui&gt;&lt;&#x2F;botui&gt; &lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;script src&#x3D;&quot;&#x2F;js&#x2F;botui.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;bot_ui_ini()&lt;&#x2F;script&gt;&#123;% endraw %&#125; 修改引入的sakura/js/botui.js即可修改对话 代码片较长，这里直接在gitee仓库中查看： /js/botui.js 之前用sakura原版botui.js,出现了编码格式不一致中文乱码的情况，后来修改后手动保存为UTF-8编码格式，已解决问题。 三、演示效果https://cungudafa.gitee.io/about/ wpac_init = window.wpac_init || []; wpac_init.push({widget: 'Comment', id: 23889}); (function() { if ('WIDGETPACK_LOADED' in window) return; WIDGETPACK_LOADED = true; var mc = document.createElement('script'); mc.type = 'text/javascript'; mc.async = true; mc.src = 'https://embed.widgetpack.com/widget.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling); })(); Comments System WIDGET PACK","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"自动回复机器人","slug":"自动回复机器人","permalink":"https://cungudafa.top/tags/%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E6%9C%BA%E5%99%A8%E4%BA%BA/"}]},{"title":"Gitee+Hexo搭建个人博客","slug":"基于Gitee+Hexo搭建个人博客","date":"2020-02-13T09:14:10.000Z","updated":"2020-04-21T11:05:28.078Z","comments":true,"path":"post/e27b.html","link":"","permalink":"https://cungudafa.top/post/e27b.html","excerpt":"","text":"前言：之前学习云服务器时搭建过个人网站，现在我的云服务器停止维护了，现就博客模块（基于Gitee+Hexo搭建个人博客），之前有很多在github上用Hexo模板或express模板搭建个人博客的教程，但访问速度原因，现就码云进行实操并记录搭建过程。 一、准备 node.js下载，官网：https://nodejs.org/zh-cn/Git下载，官网：https://git-scm.com/根据提示安装即可。（ps.我的安装记录及cnpm镜像源更换参考） 查看node.js版本git版本 二、hexo博客模板 hexo中文官网：https://hexo.io/zh-cn/ 新建一个MyWeb目录，这个目录很重要，将来会存储你所有博客的markdown文件以及生成的html文件，==慎重选择==。 选中MyWeb目录，右键点击Git Bsah Here 安装hexo npm install hexo-cli -g 如果网速慢，可以采取cnpm安装 初始化hexo模板 hexo init 目录分析： 安装完成后的目录：) 其中，目录MyWeb\\source\\_posts下存放都为makedown（md）格式文件 运行hexo 常用hexo三句话： hexo clean # 清空已有hexo网站文件hexo generate(or g) # 依据网页文本与新的CSS样式生成新网站文件hexo server(or s) # 启动本地服务器，可以在localhost:4000查看网站修改效果 在浏览器输入http://localhost:4000就能查看演示样式helloworld页面： 一般默认的是一个landscape主题，后期当提交新文章或者新的样式修改时，往往都是先从本地查看结果无误后再部署到Gitee Page。 主题下载 官网主题：https://hexo.io/themes/推荐两款： Sakura 非常炫，缺点加载慢 https://github.com/honjun/hexo-theme-sakura Next 功能集成多，简洁https://github.com/theme-next/hexo-theme-next 进入github点击下载zip：https://github.com/honjun/hexo-theme-sakura 解压文件夹，将hexo-theme-sakura-master\\themes中的主题样式复制MyWeb\\themes目录下： ) 主题配置在MyWeb主目录找到：_config.yml，记事本打开并修改默认theme: landscape为 theme: sakura # 这里需要注意:后面要有一个空格，名称要和theme下的主题目录名称相同。 重新测试运行 hexo cleanhexo ghexo s 细节修改参考：sakura使用教程 三、码云配置 申请码云账户，新建仓库 注意：仓库名，公开访问权限，语言为JavaScript 获得仓库地址： 修改配置在MyWeb主目录找到：_config.yml，记事本打开并修改默认 -》其中repo后面为你的仓库地址，每个：后都有一个空格。 deploy: type: git repo: 你的项目地址 branch: master 部署博客 npm install hexo-deployer-git --savehexo g --d #一键部署 此时会弹出一个对话框，提示输入码云的账号密码。部署成功后，登陆码云。此时本地文件夹中出现有一个public文件夹，代表部署成功。 目前，查看码云中文件为： 本地多个public文件夹： 开启Page功能之前我的配置已为https，已勾选。修改位置如下图：部署成功后如图：网址为登录网址： 访问博客 https://cungudafa.gitee.io 四、博客使用 Hexo(sakura)主题简介 在博客目录的source文件中的_post文件夹中添加你要写的博客文件，文件命名为file_name.mdfile_name.md的文件开头如下: ---title: file_nametag: 标签名categories: 分类comment: 是否允许评论(true or false)description: 描述---文档正文编写，请参照markdown语法。 示例： 发布文章并推送到gitee上推送成功：目前的内容是将md格式文件自动生成对应目录，转换成html格式显示。再点击技术文档时，没有加载index.html 手动更新Gitee端其实运行了hexo deploy(or d)应该就已经将新的网站文件（主要是网站目录下的public目录）上传到了Gitee，然而事实上上步之后直接访问网站URL会发现页面没有改变，原因在于：你、没有、更新！https://gitee.com/cungudafa/cungudafa/pages 服务中选择更新： 是的，对于免费Gitee用户而言，你会需要手动更新一下Gitee Page，然后才可以将修改真的“部署”到可访问的网站上。 再访问： 总结： 个人博客修改博客目录在source文件中的_post下，文件命名为file_name.mdfile_name.md的文件开头如下: ---title: file_nametag: 标签名categories: 分类 #分类在sakura显示才能查看comment: 是否允许评论(true or false)description: 描述---文档正文编写，请参照markdown语法。 发布： hexo clean # 清空已有hexo网站文件hexo g --d# 依据网页文本与新的CSS样式生成新网站文件,并一键发布hexo s # 启动本地服务器，可以在localhost:4000查看网站修改效果 免费使用gitee还需手动更新page。 hexo博客模板样式很多，需要一次详细的修改，能为博文锦上添花！","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"经验分享","slug":"经验分享","permalink":"https://cungudafa.top/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"}]},{"title":"Ps抠图（小白教程）","slug":"Ps抠图（小白教程）","date":"2020-02-12T09:14:10.000Z","updated":"2020-04-21T11:04:37.496Z","comments":true,"path":"post/2f1b.html","link":"","permalink":"https://cungudafa.top/post/2f1b.html","excerpt":"","text":"今天看见一个帖子有萌新😳问：有必要掌握Ps和Pr技能吗？答：我认为一些基本技能：Ps抠图，Pr剪切视频音频处理是很有必要的。 在日常生活中，无论是 PPT制作 还是 前端 使用中，png格式的透明背景图片是很有必要的。 请评价一下如下两张图的视觉感受： 当然，大多数人都会觉得第二张图的视觉效果更好一点。 问：为什么非要png格式的图片呢？ 答： png是一种无损压缩的位图片形格式。其设计目的是为了替代GIF和TIFF文件格式，同时增加一些GIF文件格式所不具备的特性。 png格式是非失真性压缩的，允许使用类似于GIF格式的调色板技术，支持真彩色图像，并具备阿尔法通道（半透明）等特性。 png占内存多，jpg占内存少 png是无损压缩，jpg则牺牲了图片质量 在ps中png可为透明背景，而jpg显然是不行的 PNG格式可编辑。如图片中有字体等，可利用PS再做更改。JPG格式不可编辑。 对于两种格式的解析度,PNG高于JPG PNG不适用任何场合，因为它的体积很大，不利用显示，完全用于编辑者作为以后更改图片时做的备份之用。JPG格式用于很多场合。 下面是Ps演示教程，大佬可以跳过，小白可以看看😛 演示图（任意格式）： 选中图片，右键选择用Ps打开——Ps版本（2015版） 在左侧找到魔法笔，右键可以选择快速选择工具，上方可以选择选择+和选择- 抠图（快速选择工具勾选我们需要的轮廓）用上方可以选择-——剔除多余的部分 鼠标长按可连续勾选，每次鼠标勾选完毕后，取消最新部分勾选快捷键ctrl加z 键盘ctrl和+将图片放大，剔除和补充细节部分 百万年薪抠图师就是扣细节：🤣根据需要细细的抠图，慢工出细活😎 ctrl加-回到原始图像大小，鼠标右键选择通过拷贝的图层在左侧可以看到多出一个图层1，取消掉背景图层的可视化 预览抠图，如果还不满意，打开背景可视化，ctrl加z直接回到抠图模式，补充或删减 tips：可以右键选择羽化，可以调整抠图轮廓的边缘渐变透明，使抠图更加柔和。 在右侧选中最终满意的图层，右键选择快速导出为PNG 最终效果，棒棒哒！(～￣▽￣)～","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Ps","slug":"Ps","permalink":"https://cungudafa.top/tags/Ps/"}]},{"title":"Github+jsDelivr搭建自己的免费cdn","slug":"Github+jsDelivr搭建自己的免费cdn","date":"2020-02-12T02:19:10.000Z","updated":"2020-04-21T11:03:57.021Z","comments":true,"path":"post/2a9.html","link":"","permalink":"https://cungudafa.top/post/2a9.html","excerpt":"","text":"一、简介CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。 放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。 二、内容存储1. 新建Github\\cdn仓库命名为cdn，公开访问权限获取仓库地址 2. 克隆仓库到本地在本地目录右键 Git Bash Here，执行以下命令： git clone https:&#x2F;&#x2F;github.com&#x2F;cungudafa&#x2F;cdn.git 第一次应该是空目录，以后有素材文件，这一步就比较关键（以免替覆盖掉之前的素材） 3. 上传资源 现有img和js素材，复制到cdn目录下（支持20M以内的图片、视频、js、css等） 在本地git仓库目录下右键 Git Bash Here，执行以下命令： git status &#x2F;&#x2F;查看状态git add . &#x2F;&#x2F;添加所有文件到暂存区git commit -m &#39;第一次提交&#39; &#x2F;&#x2F;把文件提交到仓库git push &#x2F;&#x2F;推送至远程仓库 也可以用Git Gui上传，上传成功后在浏览器可查看https://github.com/cungudafa/cdn 4. 发布资源 点击release自定义发布的版本号 自定义版本号我上传了两次图片，我这里发布了两个版本：（1.6和2.0版本） 三、jsDelivr引用 原理：将github上的资源转为快速访问网址https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径 例如： https://cdn.jsdelivr.net/gh/cungudafa/cdn@1.6/img/custom/cungudafa.jpghttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/img/custom/cungudafa.jpg第一次1.6版本没有发布图片，在2.0版本有发布图片。 版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源//完全省略该版本以获取最新版本https://cdn.jsdelivr.net/gh/user/repo/filehttps://cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg 其他资源填写路径即可：// 加载任何Github发布、提交或分支https://cdn.jsdelivr.net/gh/user/repo@version/filehttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/js/lib.min.jshttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0.1/img/custom/HanHyoJoo.gif 除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：// 使用版本范围而不是特定版本https://cdn.jsdelivr.net/gh/user/repo@version/filehttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2/img/custom/cungudafa.jpghttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/img/custom/cungudafa.jpghttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0.1/img/custom/cungudafa.jpg 压缩版// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成https://cdn.jsdelivr.net/gh/user/repo@version/file/file.min.jshttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/js/InsightSearch.jshttps://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0/js/InsightSearch.min.js 目录// 在末尾添加 / 以获取资源目录列表https://cdn.jsdelivr.net/gh/user/repo@version/file/https://cdn.jsdelivr.net/gh/cungudafa/cdn@2.0.1/img/custom/","categories":[{"name":"技术","slug":"技术","permalink":"https://cungudafa.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"cdn","slug":"cdn","permalink":"https://cungudafa.top/tags/cdn/"}]}]}